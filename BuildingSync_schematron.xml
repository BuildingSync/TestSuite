<?xml version="1.0" encoding="UTF-8"?>
<sch:schema xmlns:sch="http://purl.oclc.org/dsdl/schematron">
  <sch:title>TODO title</sch:title>
  <sch:ns prefix="auc" uri="http://buildingsync.net/schemas/bedes-auc/2019"/>
  <sch:pattern>
    <sch:rule context="/">
      <sch:assert test="count(auc:BuildingSync) &gt;= 0">element "auc:BuildingSync" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync">
      <sch:assert test="count(auc:Facilities) &gt;= 0">element "auc:Facilities" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Programs) &gt;= 0">element "auc:Programs" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities">
      <sch:assert test="count(auc:Facility) &gt;= 0">element "auc:Facility" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Contacts) &gt;= 0">element "auc:Contacts" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Measures) &gt;= 0">element "auc:Measures" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Reports) &gt;= 0">element "auc:Reports" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Schedules) &gt;= 0">element "auc:Schedules" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Sites) &gt;= 0">element "auc:Sites" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Systems) &gt;= 0">element "auc:Systems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Tenants) &gt;= 0">element "auc:Tenants" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Contacts">
      <sch:assert test="count(auc:Contact) &gt;= 0">element "auc:Contact" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Contacts/auc:Contact">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ContactCompany) &gt;= 0">element "auc:ContactCompany" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ContactEmailAddresses) &gt;= 0">element "auc:ContactEmailAddresses" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ContactName) &gt;= 0">element "auc:ContactName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ContactRoles) &gt;= 0">element "auc:ContactRoles" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ContactTelephoneNumbers) &gt;= 0">element "auc:ContactTelephoneNumbers" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ContactTitle) &gt;= 0">element "auc:ContactTitle" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Contacts/auc:Contact/auc:ContactEmailAddresses">
      <sch:assert test="count(auc:ContactEmailAddress) &gt;= 0">element "auc:ContactEmailAddress" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Contacts/auc:Contact/auc:ContactEmailAddresses/auc:ContactEmailAddress">
      <sch:assert test="count(auc:ContactEmailAddressLabel) &gt;= 0">element "auc:ContactEmailAddressLabel" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Contacts/auc:Contact/auc:ContactRoles">
      <sch:assert test="count(auc:ContactRole) &gt;= 0">element "auc:ContactRole" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Contacts/auc:Contact/auc:ContactTelephoneNumbers">
      <sch:assert test="count(auc:ContactTelephoneNumber) &gt;= 0">element "auc:ContactTelephoneNumber" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Contacts/auc:Contact/auc:ContactTelephoneNumbers/auc:ContactTelephoneNumber">
      <sch:assert test="count(auc:ContactTelephoneNumberLabel) &gt;= 0">element "auc:ContactTelephoneNumberLabel" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TelephoneNumber) &gt;= 0">element "auc:TelephoneNumber" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures">
      <sch:assert test="count(auc:Measure) &gt;= 0">element "auc:Measure" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CapitalReplacementCost) &gt;= 0">element "auc:CapitalReplacementCost" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CustomMeasureName) &gt;= 0">element "auc:CustomMeasureName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DiscardReason) &gt;= 0">element "auc:DiscardReason" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EndDate) &gt;= 0">element "auc:EndDate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ImplementationStatus) &gt;= 0">element "auc:ImplementationStatus" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:LongDescription) &gt;= 0">element "auc:LongDescription" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MVCost) &gt;= 0">element "auc:MVCost" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MVOption) &gt;= 0">element "auc:MVOption" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MeasureInstallationCost) &gt;= 0">element "auc:MeasureInstallationCost" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MeasureMaterialCost) &gt;= 0">element "auc:MeasureMaterialCost" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MeasureSavingsAnalysis) &gt;= 0">element "auc:MeasureSavingsAnalysis" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MeasureScaleOfApplication) &gt;= 0">element "auc:MeasureScaleOfApplication" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MeasureTotalFirstCost) &gt;= 0">element "auc:MeasureTotalFirstCost" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Recommended) &gt;= 0">element "auc:Recommended" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ResidualValue) &gt;= 0">element "auc:ResidualValue" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:StartDate) &gt;= 0">element "auc:StartDate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SystemCategoryAffected) &gt;= 0">element "auc:SystemCategoryAffected" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TechnologyCategories) &gt;= 0">element "auc:TechnologyCategories" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TypeOfMeasure) &gt;= 0">element "auc:TypeOfMeasure" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:UsefulLife) &gt;= 0">element "auc:UsefulLife" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:CapitalReplacementCost">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:MVCost">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:MeasureInstallationCost">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:MeasureMaterialCost">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:MeasureSavingsAnalysis">
      <sch:assert test="count(auc:AnnualDemandSavingsCost) &gt;= 0">element "auc:AnnualDemandSavingsCost" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualPeakElectricityReduction) &gt;= 0">element "auc:AnnualPeakElectricityReduction" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualSavingsByFuels) &gt;= 0">element "auc:AnnualSavingsByFuels" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualSavingsCost) &gt;= 0">element "auc:AnnualSavingsCost" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualSavingsSiteEnergy) &gt;= 0">element "auc:AnnualSavingsSiteEnergy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualSavingsSourceEnergy) &gt;= 0">element "auc:AnnualSavingsSourceEnergy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualWaterCostSavings) &gt;= 0">element "auc:AnnualWaterCostSavings" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualWaterSavings) &gt;= 0">element "auc:AnnualWaterSavings" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EquipmentDisposalAndSalvageCosts) &gt;= 0">element "auc:EquipmentDisposalAndSalvageCosts" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FundingFromIncentives) &gt;= 0">element "auc:FundingFromIncentives" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FundingFromTaxCredits) &gt;= 0">element "auc:FundingFromTaxCredits" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:InternalRateOfReturn) &gt;= 0">element "auc:InternalRateOfReturn" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MeasureRank) &gt;= 0">element "auc:MeasureRank" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:NPVofTaxImplications) &gt;= 0">element "auc:NPVofTaxImplications" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:NetPresentValue) &gt;= 0">element "auc:NetPresentValue" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OMCostAnnualSavings) &gt;= 0">element "auc:OMCostAnnualSavings" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherCostAnnualSavings) &gt;= 0">element "auc:OtherCostAnnualSavings" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SimplePayback) &gt;= 0">element "auc:SimplePayback" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SummerPeakElectricityReduction) &gt;= 0">element "auc:SummerPeakElectricityReduction" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WinterPeakElectricityReduction) &gt;= 0">element "auc:WinterPeakElectricityReduction" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:MeasureSavingsAnalysis/auc:AnnualDemandSavingsCost">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:MeasureSavingsAnalysis/auc:AnnualPeakElectricityReduction">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:MeasureSavingsAnalysis/auc:AnnualSavingsByFuels">
      <sch:assert test="count(auc:AnnualSavingsByFuel) &gt;= 0">element "auc:AnnualSavingsByFuel" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:MeasureSavingsAnalysis/auc:AnnualSavingsByFuels/auc:AnnualSavingsByFuel">
      <sch:assert test="count(auc:AnnualSavingsNativeUnits) &gt;= 0">element "auc:AnnualSavingsNativeUnits" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:MeasureSavingsAnalysis/auc:AnnualSavingsByFuels/auc:AnnualSavingsByFuel/auc:AnnualSavingsNativeUnits">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:MeasureSavingsAnalysis/auc:AnnualSavingsCost">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:MeasureSavingsAnalysis/auc:AnnualSavingsSiteEnergy">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:MeasureSavingsAnalysis/auc:AnnualSavingsSourceEnergy">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:MeasureSavingsAnalysis/auc:AnnualWaterCostSavings">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:MeasureSavingsAnalysis/auc:AnnualWaterSavings">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:MeasureSavingsAnalysis/auc:EquipmentDisposalAndSalvageCosts">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:MeasureSavingsAnalysis/auc:FundingFromIncentives">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:MeasureSavingsAnalysis/auc:FundingFromTaxCredits">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:MeasureSavingsAnalysis/auc:InternalRateOfReturn">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:MeasureSavingsAnalysis/auc:MeasureRank">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:MeasureSavingsAnalysis/auc:NPVofTaxImplications">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:MeasureSavingsAnalysis/auc:NetPresentValue">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:MeasureSavingsAnalysis/auc:OMCostAnnualSavings">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:MeasureSavingsAnalysis/auc:OtherCostAnnualSavings">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:MeasureSavingsAnalysis/auc:SimplePayback">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:MeasureSavingsAnalysis/auc:SummerPeakElectricityReduction">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:MeasureSavingsAnalysis/auc:WinterPeakElectricityReduction">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:MeasureTotalFirstCost">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:ResidualValue">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TechnologyCategories">
      <sch:assert test="count(auc:TechnologyCategory) &gt;= 0">element "auc:TechnologyCategory" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TechnologyCategories/auc:TechnologyCategory">
      <sch:assert test="count(auc:AdvancedMeteringSystems) &gt;= 0">element "auc:AdvancedMeteringSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:BoilerPlantImprovements) &gt;= 0">element "auc:BoilerPlantImprovements" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:BuildingAutomationSystems) &gt;= 0">element "auc:BuildingAutomationSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:BuildingEnvelopeModifications) &gt;= 0">element "auc:BuildingEnvelopeModifications" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ChilledWaterHotWaterAndSteamDistributionSystems) &gt;= 0">element "auc:ChilledWaterHotWaterAndSteamDistributionSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ChillerPlantImprovements) &gt;= 0">element "auc:ChillerPlantImprovements" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ConveyanceSystems) &gt;= 0">element "auc:ConveyanceSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DataCenterImprovements) &gt;= 0">element "auc:DataCenterImprovements" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DistributedGeneration) &gt;= 0">element "auc:DistributedGeneration" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ElectricalPeakShavingLoadShifting) &gt;= 0">element "auc:ElectricalPeakShavingLoadShifting" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EnergyCostReductionThroughRateAdjustments) &gt;= 0">element "auc:EnergyCostReductionThroughRateAdjustments" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EnergyDistributionSystems) &gt;= 0">element "auc:EnergyDistributionSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EnergyRelatedProcessImprovements) &gt;= 0">element "auc:EnergyRelatedProcessImprovements" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FutureOtherECMs) &gt;= 0">element "auc:FutureOtherECMs" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HealthAndSafety) &gt;= 0">element "auc:HealthAndSafety" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:LightingImprovements) &gt;= 0">element "auc:LightingImprovements" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherElectricMotorsAndDrives) &gt;= 0">element "auc:OtherElectricMotorsAndDrives" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherHVAC) &gt;= 0">element "auc:OtherHVAC" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PlugLoadReductions) &gt;= 0">element "auc:PlugLoadReductions" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Refrigeration) &gt;= 0">element "auc:Refrigeration" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RenewableEnergySystems) &gt;= 0">element "auc:RenewableEnergySystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ServiceHotWaterSystems) &gt;= 0">element "auc:ServiceHotWaterSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Uncategorized) &gt;= 0">element "auc:Uncategorized" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WaterAndSewerConservationSystems) &gt;= 0">element "auc:WaterAndSewerConservationSystems" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TechnologyCategories/auc:TechnologyCategory/auc:AdvancedMeteringSystems">
      <sch:assert test="count(auc:MeasureName) &gt;= 0">element "auc:MeasureName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TechnologyCategories/auc:TechnologyCategory/auc:BoilerPlantImprovements">
      <sch:assert test="count(auc:MeasureName) &gt;= 0">element "auc:MeasureName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TechnologyCategories/auc:TechnologyCategory/auc:BuildingAutomationSystems">
      <sch:assert test="count(auc:MeasureName) &gt;= 0">element "auc:MeasureName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TechnologyCategories/auc:TechnologyCategory/auc:BuildingEnvelopeModifications">
      <sch:assert test="count(auc:MeasureName) &gt;= 0">element "auc:MeasureName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TechnologyCategories/auc:TechnologyCategory/auc:ChilledWaterHotWaterAndSteamDistributionSystems">
      <sch:assert test="count(auc:MeasureName) &gt;= 0">element "auc:MeasureName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TechnologyCategories/auc:TechnologyCategory/auc:ChillerPlantImprovements">
      <sch:assert test="count(auc:MeasureName) &gt;= 0">element "auc:MeasureName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TechnologyCategories/auc:TechnologyCategory/auc:ConveyanceSystems">
      <sch:assert test="count(auc:MeasureName) &gt;= 0">element "auc:MeasureName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TechnologyCategories/auc:TechnologyCategory/auc:DataCenterImprovements">
      <sch:assert test="count(auc:MeasureName) &gt;= 0">element "auc:MeasureName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TechnologyCategories/auc:TechnologyCategory/auc:DistributedGeneration">
      <sch:assert test="count(auc:MeasureName) &gt;= 0">element "auc:MeasureName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TechnologyCategories/auc:TechnologyCategory/auc:ElectricalPeakShavingLoadShifting">
      <sch:assert test="count(auc:MeasureName) &gt;= 0">element "auc:MeasureName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TechnologyCategories/auc:TechnologyCategory/auc:EnergyCostReductionThroughRateAdjustments">
      <sch:assert test="count(auc:MeasureName) &gt;= 0">element "auc:MeasureName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TechnologyCategories/auc:TechnologyCategory/auc:EnergyDistributionSystems">
      <sch:assert test="count(auc:MeasureName) &gt;= 0">element "auc:MeasureName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TechnologyCategories/auc:TechnologyCategory/auc:EnergyRelatedProcessImprovements">
      <sch:assert test="count(auc:MeasureName) &gt;= 0">element "auc:MeasureName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TechnologyCategories/auc:TechnologyCategory/auc:FutureOtherECMs">
      <sch:assert test="count(auc:MeasureName) &gt;= 0">element "auc:MeasureName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TechnologyCategories/auc:TechnologyCategory/auc:HealthAndSafety">
      <sch:assert test="count(auc:MeasureName) &gt;= 0">element "auc:MeasureName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TechnologyCategories/auc:TechnologyCategory/auc:LightingImprovements">
      <sch:assert test="count(auc:MeasureName) &gt;= 0">element "auc:MeasureName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TechnologyCategories/auc:TechnologyCategory/auc:OtherElectricMotorsAndDrives">
      <sch:assert test="count(auc:MeasureName) &gt;= 0">element "auc:MeasureName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TechnologyCategories/auc:TechnologyCategory/auc:OtherHVAC">
      <sch:assert test="count(auc:MeasureName) &gt;= 0">element "auc:MeasureName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TechnologyCategories/auc:TechnologyCategory/auc:PlugLoadReductions">
      <sch:assert test="count(auc:MeasureName) &gt;= 0">element "auc:MeasureName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TechnologyCategories/auc:TechnologyCategory/auc:Refrigeration">
      <sch:assert test="count(auc:MeasureName) &gt;= 0">element "auc:MeasureName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TechnologyCategories/auc:TechnologyCategory/auc:RenewableEnergySystems">
      <sch:assert test="count(auc:MeasureName) &gt;= 0">element "auc:MeasureName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TechnologyCategories/auc:TechnologyCategory/auc:ServiceHotWaterSystems">
      <sch:assert test="count(auc:MeasureName) &gt;= 0">element "auc:MeasureName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TechnologyCategories/auc:TechnologyCategory/auc:Uncategorized">
      <sch:assert test="count(auc:MeasureName) &gt;= 0">element "auc:MeasureName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TechnologyCategories/auc:TechnologyCategory/auc:WaterAndSewerConservationSystems">
      <sch:assert test="count(auc:MeasureName) &gt;= 0">element "auc:MeasureName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TypeOfMeasure">
      <sch:assert test="count(auc:Additions) &gt;= 0">element "auc:Additions" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ModificationRetrocommissions) &gt;= 0">element "auc:ModificationRetrocommissions" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Removals) &gt;= 0">element "auc:Removals" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Replacements) &gt;= 0">element "auc:Replacements" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TypeOfMeasure/auc:Additions">
      <sch:assert test="count(auc:Addition) &gt;= 0">element "auc:Addition" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TypeOfMeasure/auc:Additions/auc:Addition">
      <sch:assert test="count(auc:AlternativeSystemAdded) &gt;= 0">element "auc:AlternativeSystemAdded" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ExistingScheduleAffected) &gt;= 0">element "auc:ExistingScheduleAffected" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ModifiedSchedule) &gt;= 0">element "auc:ModifiedSchedule" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TypeOfMeasure/auc:Additions/auc:Addition/auc:AlternativeSystemAdded">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TypeOfMeasure/auc:Additions/auc:Addition/auc:ExistingScheduleAffected">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TypeOfMeasure/auc:Additions/auc:Addition/auc:ModifiedSchedule">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TypeOfMeasure/auc:ModificationRetrocommissions">
      <sch:assert test="count(auc:ModificationRetrocommissioning) &gt;= 0">element "auc:ModificationRetrocommissioning" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TypeOfMeasure/auc:ModificationRetrocommissions/auc:ModificationRetrocommissioning">
      <sch:assert test="count(auc:ExistingScheduleAffected) &gt;= 0">element "auc:ExistingScheduleAffected" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ExistingSystemAffected) &gt;= 0">element "auc:ExistingSystemAffected" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ModifiedSchedule) &gt;= 0">element "auc:ModifiedSchedule" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ModifiedSystem) &gt;= 0">element "auc:ModifiedSystem" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TypeOfMeasure/auc:ModificationRetrocommissions/auc:ModificationRetrocommissioning/auc:ExistingScheduleAffected">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TypeOfMeasure/auc:ModificationRetrocommissions/auc:ModificationRetrocommissioning/auc:ExistingSystemAffected">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TypeOfMeasure/auc:ModificationRetrocommissions/auc:ModificationRetrocommissioning/auc:ModifiedSchedule">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TypeOfMeasure/auc:ModificationRetrocommissions/auc:ModificationRetrocommissioning/auc:ModifiedSystem">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TypeOfMeasure/auc:Removals">
      <sch:assert test="count(auc:Removal) &gt;= 0">element "auc:Removal" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TypeOfMeasure/auc:Removals/auc:Removal">
      <sch:assert test="count(auc:ExistingScheduleAffected) &gt;= 0">element "auc:ExistingScheduleAffected" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ExistingSystemRemoved) &gt;= 0">element "auc:ExistingSystemRemoved" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ModifiedSchedule) &gt;= 0">element "auc:ModifiedSchedule" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TypeOfMeasure/auc:Removals/auc:Removal/auc:ExistingScheduleAffected">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TypeOfMeasure/auc:Removals/auc:Removal/auc:ExistingSystemRemoved">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TypeOfMeasure/auc:Removals/auc:Removal/auc:ModifiedSchedule">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TypeOfMeasure/auc:Replacements">
      <sch:assert test="count(auc:Replacement) &gt;= 0">element "auc:Replacement" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TypeOfMeasure/auc:Replacements/auc:Replacement">
      <sch:assert test="count(auc:AlternativeSystemReplacement) &gt;= 0">element "auc:AlternativeSystemReplacement" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ExistingScheduleAffected) &gt;= 0">element "auc:ExistingScheduleAffected" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ExistingSystemReplaced) &gt;= 0">element "auc:ExistingSystemReplaced" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ModifiedSchedule) &gt;= 0">element "auc:ModifiedSchedule" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TypeOfMeasure/auc:Replacements/auc:Replacement/auc:AlternativeSystemReplacement">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TypeOfMeasure/auc:Replacements/auc:Replacement/auc:ExistingScheduleAffected">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TypeOfMeasure/auc:Replacements/auc:Replacement/auc:ExistingSystemReplaced">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:TypeOfMeasure/auc:Replacements/auc:Replacement/auc:ModifiedSchedule">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Measures/auc:Measure/auc:UsefulLife">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports">
      <sch:assert test="count(auc:Report) &gt;= 0">element "auc:Report" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ASHRAEAuditLevel) &gt;= 0">element "auc:ASHRAEAuditLevel" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnalysisPeriod) &gt;= 0">element "auc:AnalysisPeriod" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AuditCost) &gt;= 0">element "auc:AuditCost" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AuditDates) &gt;= 0">element "auc:AuditDates" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AuditExemption) &gt;= 0">element "auc:AuditExemption" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AuditorContactID) &gt;= 0">element "auc:AuditorContactID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DiscountFactor) &gt;= 0">element "auc:DiscountFactor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ElectricityPriceEscalationRate) &gt;= 0">element "auc:ElectricityPriceEscalationRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:GasPriceEscalationRate) &gt;= 0">element "auc:GasPriceEscalationRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:InflationRate) &gt;= 0">element "auc:InflationRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherEscalationRates) &gt;= 0">element "auc:OtherEscalationRates" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Qualifications) &gt;= 0">element "auc:Qualifications" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RetrocommissioningAudit) &gt;= 0">element "auc:RetrocommissioningAudit" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Scenarios) &gt;= 0">element "auc:Scenarios" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Utilities) &gt;= 0">element "auc:Utilities" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WaterPriceEscalationRate) &gt;= 0">element "auc:WaterPriceEscalationRate" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:AnalysisPeriod">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:AuditCost">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:AuditDates">
      <sch:assert test="count(auc:AuditDate) &gt;= 0">element "auc:AuditDate" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:AuditDates/auc:AuditDate">
      <sch:assert test="count(auc:CustomDateType) &gt;= 0">element "auc:CustomDateType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Date) &gt;= 0">element "auc:Date" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DateType) &gt;= 0">element "auc:DateType" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:AuditorContactID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:DiscountFactor">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:ElectricityPriceEscalationRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:GasPriceEscalationRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:InflationRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:OtherEscalationRates">
      <sch:assert test="count(auc:OtherEscalationRate) &gt;= 0">element "auc:OtherEscalationRate" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:OtherEscalationRates/auc:OtherEscalationRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EscalationRate) &gt;= 0">element "auc:EscalationRate" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Qualifications">
      <sch:assert test="count(auc:Qualification) &gt;= 0">element "auc:Qualification" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Qualifications/auc:Qualification">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AuditTeamMemberCertificationType) &gt;= 0">element "auc:AuditTeamMemberCertificationType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AuditorQualification) &gt;= 0">element "auc:AuditorQualification" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AuditorQualificationNumber) &gt;= 0">element "auc:AuditorQualificationNumber" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AuditorQualificationState) &gt;= 0">element "auc:AuditorQualificationState" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CertificationExpirationDate) &gt;= 0">element "auc:CertificationExpirationDate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CertifiedAuditTeamMemberContactID) &gt;= 0">element "auc:CertifiedAuditTeamMemberContactID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Qualifications/auc:Qualification/auc:CertifiedAuditTeamMemberContactID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios">
      <sch:assert test="count(auc:Scenario) &gt;= 0">element "auc:Scenario" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AllResourceTotals) &gt;= 0">element "auc:AllResourceTotals" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualCoolingDegreeDays) &gt;= 0">element "auc:AnnualCoolingDegreeDays" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualHeatingDegreeDays) &gt;= 0">element "auc:AnnualHeatingDegreeDays" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CDDBaseTemperature) &gt;= 0">element "auc:CDDBaseTemperature" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HDDBaseTemperature) &gt;= 0">element "auc:HDDBaseTemperature" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Normalization) &gt;= 0">element "auc:Normalization" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ResourceUses) &gt;= 0">element "auc:ResourceUses" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ScenarioName) &gt;= 0">element "auc:ScenarioName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ScenarioNotes) &gt;= 0">element "auc:ScenarioNotes" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ScenarioType) &gt;= 0">element "auc:ScenarioType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TimeSeriesData) &gt;= 0">element "auc:TimeSeriesData" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WeatherType) &gt;= 0">element "auc:WeatherType" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:AllResourceTotals">
      <sch:assert test="count(auc:AllResourceTotal) &gt;= 0">element "auc:AllResourceTotal" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:AllResourceTotals/auc:AllResourceTotal">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ElectricitySourcedFromOnsiteRenewableSystems) &gt;= 0">element "auc:ElectricitySourcedFromOnsiteRenewableSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EndUse) &gt;= 0">element "auc:EndUse" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EnergyCost) &gt;= 0">element "auc:EnergyCost" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OnsiteRenewableSystemElectricityExported) &gt;= 0">element "auc:OnsiteRenewableSystemElectricityExported" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SiteEnergyUse) &gt;= 0">element "auc:SiteEnergyUse" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SiteEnergyUseIntensity) &gt;= 0">element "auc:SiteEnergyUseIntensity" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SourceEnergyUse) &gt;= 0">element "auc:SourceEnergyUse" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SourceEnergyUseIntensity) &gt;= 0">element "auc:SourceEnergyUseIntensity" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SummerPeak) &gt;= 0">element "auc:SummerPeak" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WasteWaterVolume) &gt;= 0">element "auc:WasteWaterVolume" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WaterCost) &gt;= 0">element "auc:WaterCost" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WaterIntensity) &gt;= 0">element "auc:WaterIntensity" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WaterUse) &gt;= 0">element "auc:WaterUse" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WinterPeak) &gt;= 0">element "auc:WinterPeak" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:AllResourceTotals/auc:AllResourceTotal/auc:ElectricitySourcedFromOnsiteRenewableSystems">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:AllResourceTotals/auc:AllResourceTotal/auc:EnergyCost">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:AllResourceTotals/auc:AllResourceTotal/auc:OnsiteRenewableSystemElectricityExported">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:AllResourceTotals/auc:AllResourceTotal/auc:SiteEnergyUse">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:AllResourceTotals/auc:AllResourceTotal/auc:SiteEnergyUseIntensity">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:AllResourceTotals/auc:AllResourceTotal/auc:SourceEnergyUse">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:AllResourceTotals/auc:AllResourceTotal/auc:SourceEnergyUseIntensity">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:AllResourceTotals/auc:AllResourceTotal/auc:SummerPeak">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:AllResourceTotals/auc:AllResourceTotal/auc:WasteWaterVolume">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:AllResourceTotals/auc:AllResourceTotal/auc:WaterCost">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:AllResourceTotals/auc:AllResourceTotal/auc:WaterIntensity">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:AllResourceTotals/auc:AllResourceTotal/auc:WaterUse">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:AllResourceTotals/auc:AllResourceTotal/auc:WinterPeak">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:AnnualCoolingDegreeDays">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:AnnualHeatingDegreeDays">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:CDDBaseTemperature">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:HDDBaseTemperature">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ResourceUses">
      <sch:assert test="count(auc:ResourceUse) &gt;= 0">element "auc:ResourceUse" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ResourceUses/auc:ResourceUse">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualFuelUseConsistentUnits) &gt;= 0">element "auc:AnnualFuelUseConsistentUnits" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualFuelUseNativeUnits) &gt;= 0">element "auc:AnnualFuelUseNativeUnits" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualPeakConsistentUnits) &gt;= 0">element "auc:AnnualPeakConsistentUnits" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualPeakNativeUnits) &gt;= 0">element "auc:AnnualPeakNativeUnits" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Emissions) &gt;= 0">element "auc:Emissions" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EndUse) &gt;= 0">element "auc:EndUse" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FuelUseIntensity) &gt;= 0">element "auc:FuelUseIntensity" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PeakResourceUnits) &gt;= 0">element "auc:PeakResourceUnits" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PercentEndUse) &gt;= 0">element "auc:PercentEndUse" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PercentResource) &gt;= 0">element "auc:PercentResource" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SharedResourceSystem) &gt;= 0">element "auc:SharedResourceSystem" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:UtilityIDs) &gt;= 0">element "auc:UtilityIDs" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ResourceUses/auc:ResourceUse/auc:AnnualFuelUseConsistentUnits">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ResourceUses/auc:ResourceUse/auc:AnnualFuelUseNativeUnits">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ResourceUses/auc:ResourceUse/auc:AnnualPeakConsistentUnits">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ResourceUses/auc:ResourceUse/auc:AnnualPeakNativeUnits">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ResourceUses/auc:ResourceUse/auc:Emissions">
      <sch:assert test="count(auc:Emission) &gt;= 0">element "auc:Emission" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ResourceUses/auc:ResourceUse/auc:Emissions/auc:Emission">
      <sch:assert test="count(auc:AvoidedEmissions) &gt;= 0">element "auc:AvoidedEmissions" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EmissionBoundary) &gt;= 0">element "auc:EmissionBoundary" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EmissionsFactor) &gt;= 0">element "auc:EmissionsFactor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EmissionsFactorSource) &gt;= 0">element "auc:EmissionsFactorSource" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EmissionsType) &gt;= 0">element "auc:EmissionsType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:GHGEmissions) &gt;= 0">element "auc:GHGEmissions" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ResourceUses/auc:ResourceUse/auc:Emissions/auc:Emission/auc:AvoidedEmissions">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ResourceUses/auc:ResourceUse/auc:Emissions/auc:Emission/auc:EmissionsFactor">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ResourceUses/auc:ResourceUse/auc:Emissions/auc:Emission/auc:GHGEmissions">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ResourceUses/auc:ResourceUse/auc:FuelUseIntensity">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ResourceUses/auc:ResourceUse/auc:UtilityIDs">
      <sch:assert test="count(auc:UtilityID) &gt;= 0">element "auc:UtilityID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ResourceUses/auc:ResourceUse/auc:UtilityIDs/auc:UtilityID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType">
      <sch:assert test="count(auc:Benchmark) &gt;= 0">element "auc:Benchmark" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CurrentBuilding) &gt;= 0">element "auc:CurrentBuilding" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Other) &gt;= 0">element "auc:Other" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PackageOfMeasures) &gt;= 0">element "auc:PackageOfMeasures" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Target) &gt;= 0">element "auc:Target" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Benchmark">
      <sch:assert test="count(auc:BenchmarkTool) &gt;= 0">element "auc:BenchmarkTool" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:BenchmarkType) &gt;= 0">element "auc:BenchmarkType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:BenchmarkYear) &gt;= 0">element "auc:BenchmarkYear" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Benchmark/auc:BenchmarkType">
      <sch:assert test="count(auc:CBECS) &gt;= 0">element "auc:CBECS" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CodeMinimum) &gt;= 0">element "auc:CodeMinimum" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Other) &gt;= 0">element "auc:Other" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PortfolioManager) &gt;= 0">element "auc:PortfolioManager" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:StandardPractice) &gt;= 0">element "auc:StandardPractice" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Benchmark/auc:BenchmarkType/auc:CBECS">
      <sch:assert test="count(auc:ClimateZone) &gt;= 0">element "auc:ClimateZone" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Benchmark/auc:BenchmarkType/auc:CodeMinimum">
      <sch:assert test="count(auc:CodeName) &gt;= 0">element "auc:CodeName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CodeVersion) &gt;= 0">element "auc:CodeVersion" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CodeYear) &gt;= 0">element "auc:CodeYear" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Benchmark/auc:BenchmarkType/auc:Other">
      <sch:assert test="count(auc:OtherBenchmarkDescription) &gt;= 0">element "auc:OtherBenchmarkDescription" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Benchmark/auc:BenchmarkType/auc:PortfolioManager">
      <sch:assert test="count(auc:BuildingProfileStatus) &gt;= 0">element "auc:BuildingProfileStatus" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FederalSustainabilityChecklistCompletionPercentage) &gt;= 0">element "auc:FederalSustainabilityChecklistCompletionPercentage" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PMBenchmarkDate) &gt;= 0">element "auc:PMBenchmarkDate" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Benchmark/auc:BenchmarkType/auc:PortfolioManager/auc:FederalSustainabilityChecklistCompletionPercentage">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Benchmark/auc:BenchmarkType/auc:StandardPractice">
      <sch:assert test="count(auc:StandardPracticeDescription) &gt;= 0">element "auc:StandardPracticeDescription" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Other">
      <sch:assert test="count(auc:AnnualPeakElectricityReduction) &gt;= 0">element "auc:AnnualPeakElectricityReduction" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualSavingsCost) &gt;= 0">element "auc:AnnualSavingsCost" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualSavingsSiteEnergy) &gt;= 0">element "auc:AnnualSavingsSiteEnergy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualSavingsSourceEnergy) &gt;= 0">element "auc:AnnualSavingsSourceEnergy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualWaterCostSavings) &gt;= 0">element "auc:AnnualWaterCostSavings" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualWaterSavings) &gt;= 0">element "auc:AnnualWaterSavings" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:InternalRateOfReturn) &gt;= 0">element "auc:InternalRateOfReturn" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:NetPresentValue) &gt;= 0">element "auc:NetPresentValue" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SimplePayback) &gt;= 0">element "auc:SimplePayback" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SummerPeakElectricityReduction) &gt;= 0">element "auc:SummerPeakElectricityReduction" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WinterPeakElectricityReduction) &gt;= 0">element "auc:WinterPeakElectricityReduction" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Other/auc:AnnualPeakElectricityReduction">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Other/auc:AnnualSavingsCost">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Other/auc:AnnualSavingsSiteEnergy">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Other/auc:AnnualSavingsSourceEnergy">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Other/auc:AnnualWaterCostSavings">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Other/auc:AnnualWaterSavings">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Other/auc:InternalRateOfReturn">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Other/auc:NetPresentValue">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Other/auc:SimplePayback">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Other/auc:SummerPeakElectricityReduction">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Other/auc:WinterPeakElectricityReduction">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualDemandSavingsCost) &gt;= 0">element "auc:AnnualDemandSavingsCost" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualPeakElectricityReduction) &gt;= 0">element "auc:AnnualPeakElectricityReduction" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualSavingsByFuels) &gt;= 0">element "auc:AnnualSavingsByFuels" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualSavingsCost) &gt;= 0">element "auc:AnnualSavingsCost" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualSavingsSiteEnergy) &gt;= 0">element "auc:AnnualSavingsSiteEnergy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualSavingsSourceEnergy) &gt;= 0">element "auc:AnnualSavingsSourceEnergy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualWaterCostSavings) &gt;= 0">element "auc:AnnualWaterCostSavings" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualWaterSavings) &gt;= 0">element "auc:AnnualWaterSavings" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EquipmentDisposalAndSalvageCosts) &gt;= 0">element "auc:EquipmentDisposalAndSalvageCosts" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FundingFromIncentives) &gt;= 0">element "auc:FundingFromIncentives" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FundingFromTaxCredits) &gt;= 0">element "auc:FundingFromTaxCredits" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ImplementationPeriod) &gt;= 0">element "auc:ImplementationPeriod" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ImplementationPeriodCostSavings) &gt;= 0">element "auc:ImplementationPeriodCostSavings" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:InternalRateOfReturn) &gt;= 0">element "auc:InternalRateOfReturn" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MVCost) &gt;= 0">element "auc:MVCost" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MeasureIDs) &gt;= 0">element "auc:MeasureIDs" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:NPVofTaxImplications) &gt;= 0">element "auc:NPVofTaxImplications" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:NetPresentValue) &gt;= 0">element "auc:NetPresentValue" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OMCostAnnualSavings) &gt;= 0">element "auc:OMCostAnnualSavings" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherFinancialIncentives) &gt;= 0">element "auc:OtherFinancialIncentives" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PackageFirstCost) &gt;= 0">element "auc:PackageFirstCost" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PercentGuaranteedSavings) &gt;= 0">element "auc:PercentGuaranteedSavings" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ProjectMarkup) &gt;= 0">element "auc:ProjectMarkup" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RecurringIncentives) &gt;= 0">element "auc:RecurringIncentives" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SimplePayback) &gt;= 0">element "auc:SimplePayback" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SummerPeakElectricityReduction) &gt;= 0">element "auc:SummerPeakElectricityReduction" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WinterPeakElectricityReduction) &gt;= 0">element "auc:WinterPeakElectricityReduction" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:AnnualDemandSavingsCost">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:AnnualPeakElectricityReduction">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:AnnualSavingsByFuels">
      <sch:assert test="count(auc:AnnualSavingsByFuel) &gt;= 0">element "auc:AnnualSavingsByFuel" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:AnnualSavingsByFuels/auc:AnnualSavingsByFuel">
      <sch:assert test="count(auc:AnnualSavingsNativeUnits) &gt;= 0">element "auc:AnnualSavingsNativeUnits" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:AnnualSavingsByFuels/auc:AnnualSavingsByFuel/auc:AnnualSavingsNativeUnits">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:AnnualSavingsCost">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:AnnualSavingsSiteEnergy">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:AnnualSavingsSourceEnergy">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:AnnualWaterCostSavings">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:AnnualWaterSavings">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:EquipmentDisposalAndSalvageCosts">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:FundingFromIncentives">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:FundingFromTaxCredits">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:ImplementationPeriodCostSavings">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:InternalRateOfReturn">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:MVCost">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:MeasureIDs">
      <sch:assert test="count(auc:MeasureID) &gt;= 0">element "auc:MeasureID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:MeasureIDs/auc:MeasureID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:NPVofTaxImplications">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:NetPresentValue">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:OMCostAnnualSavings">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:OtherFinancialIncentives">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:PackageFirstCost">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:PercentGuaranteedSavings">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:ProjectMarkup">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:RecurringIncentives">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:SimplePayback">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:SummerPeakElectricityReduction">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:PackageOfMeasures/auc:WinterPeakElectricityReduction">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Target">
      <sch:assert test="count(auc:AnnualPeakElectricityReduction) &gt;= 0">element "auc:AnnualPeakElectricityReduction" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualSavingsCost) &gt;= 0">element "auc:AnnualSavingsCost" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualSavingsSiteEnergy) &gt;= 0">element "auc:AnnualSavingsSiteEnergy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualSavingsSourceEnergy) &gt;= 0">element "auc:AnnualSavingsSourceEnergy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualWaterCostSavings) &gt;= 0">element "auc:AnnualWaterCostSavings" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualWaterSavings) &gt;= 0">element "auc:AnnualWaterSavings" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:InternalRateOfReturn) &gt;= 0">element "auc:InternalRateOfReturn" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:NetPresentValue) &gt;= 0">element "auc:NetPresentValue" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SimplePayback) &gt;= 0">element "auc:SimplePayback" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SummerPeakElectricityReduction) &gt;= 0">element "auc:SummerPeakElectricityReduction" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WinterPeakElectricityReduction) &gt;= 0">element "auc:WinterPeakElectricityReduction" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Target/auc:AnnualPeakElectricityReduction">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Target/auc:AnnualSavingsCost">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Target/auc:AnnualSavingsSiteEnergy">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Target/auc:AnnualSavingsSourceEnergy">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Target/auc:AnnualWaterCostSavings">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Target/auc:AnnualWaterSavings">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Target/auc:InternalRateOfReturn">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Target/auc:NetPresentValue">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Target/auc:SimplePayback">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Target/auc:SummerPeakElectricityReduction">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:ScenarioType/auc:Target/auc:WinterPeakElectricityReduction">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:TimeSeriesData">
      <sch:assert test="count(auc:TimeSeries) &gt;= 0">element "auc:TimeSeries" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:TimeSeriesData/auc:TimeSeries">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CDDBaseTemperature) &gt;= 0">element "auc:CDDBaseTemperature" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CoolingDegreeDays) &gt;= 0">element "auc:CoolingDegreeDays" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EndTimestamp) &gt;= 0">element "auc:EndTimestamp" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EnergyFlowDirection) &gt;= 0">element "auc:EnergyFlowDirection" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HDDBaseTemperature) &gt;= 0">element "auc:HDDBaseTemperature" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HeatingDegreeDays) &gt;= 0">element "auc:HeatingDegreeDays" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:IntervalFrequency) &gt;= 0">element "auc:IntervalFrequency" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:IntervalReading) &gt;= 0">element "auc:IntervalReading" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Phase) &gt;= 0">element "auc:Phase" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ReadingType) &gt;= 0">element "auc:ReadingType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ResourceUseID) &gt;= 0">element "auc:ResourceUseID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:StartTimestamp) &gt;= 0">element "auc:StartTimestamp" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TimeSeriesReadingQuantity) &gt;= 0">element "auc:TimeSeriesReadingQuantity" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:TimeSeriesData/auc:TimeSeries/auc:CDDBaseTemperature">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:TimeSeriesData/auc:TimeSeries/auc:CoolingDegreeDays">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:TimeSeriesData/auc:TimeSeries/auc:HDDBaseTemperature">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:TimeSeriesData/auc:TimeSeries/auc:HeatingDegreeDays">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:TimeSeriesData/auc:TimeSeries/auc:IntervalReading">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:TimeSeriesData/auc:TimeSeries/auc:ResourceUseID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:WeatherType">
      <sch:assert test="count(auc:Actual) &gt;= 0">element "auc:Actual" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AdjustedToYear) &gt;= 0">element "auc:AdjustedToYear" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Normalized) &gt;= 0">element "auc:Normalized" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Other) &gt;= 0">element "auc:Other" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:WeatherType/auc:AdjustedToYear">
      <sch:assert test="count(auc:WeatherYear) &gt;= 0">element "auc:WeatherYear" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:WeatherType/auc:Normalized">
      <sch:assert test="count(auc:NormalizationStartYear) &gt;= 0">element "auc:NormalizationStartYear" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:NormalizationYears) &gt;= 0">element "auc:NormalizationYears" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Scenarios/auc:Scenario/auc:WeatherType/auc:Normalized/auc:NormalizationYears">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities">
      <sch:assert test="count(auc:Utility) &gt;= 0">element "auc:Utility" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ElectricDistributionUtility) &gt;= 0">element "auc:ElectricDistributionUtility" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FuelInterruptibility) &gt;= 0">element "auc:FuelInterruptibility" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MeteringConfiguration) &gt;= 0">element "auc:MeteringConfiguration" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PowerPlant) &gt;= 0">element "auc:PowerPlant" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RateSchedules) &gt;= 0">element "auc:RateSchedules" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SourceSiteRatio) &gt;= 0">element "auc:SourceSiteRatio" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TypeOfResourceMeter) &gt;= 0">element "auc:TypeOfResourceMeter" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:UtilityAccountNumber) &gt;= 0">element "auc:UtilityAccountNumber" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:UtilityBillpayer) &gt;= 0">element "auc:UtilityBillpayer" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:UtilityMeterNumbers) &gt;= 0">element "auc:UtilityMeterNumbers" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:UtilityName) &gt;= 0">element "auc:UtilityName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules">
      <sch:assert test="count(auc:RateSchedule) &gt;= 0">element "auc:RateSchedule" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AverageMarginalCostRate) &gt;= 0">element "auc:AverageMarginalCostRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FixedMonthlyCharge) &gt;= 0">element "auc:FixedMonthlyCharge" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MinimumPowerFactorWithoutPenalty) &gt;= 0">element "auc:MinimumPowerFactorWithoutPenalty" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:NetMetering) &gt;= 0">element "auc:NetMetering" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RateStructureEffectiveDate) &gt;= 0">element "auc:RateStructureEffectiveDate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RateStructureEndDate) &gt;= 0">element "auc:RateStructureEndDate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RateStructureName) &gt;= 0">element "auc:RateStructureName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RateStructureSector) &gt;= 0">element "auc:RateStructureSector" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ReactivePowerCharge) &gt;= 0">element "auc:ReactivePowerCharge" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ReferenceForRateStructure) &gt;= 0">element "auc:ReferenceForRateStructure" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TypeOfRateStructure) &gt;= 0">element "auc:TypeOfRateStructure" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:AverageMarginalCostRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:FixedMonthlyCharge">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:MinimumPowerFactorWithoutPenalty">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:NetMetering">
      <sch:assert test="count(auc:AverageMarginalSellRate) &gt;= 0">element "auc:AverageMarginalSellRate" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:NetMetering/auc:AverageMarginalSellRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:ReactivePowerCharge">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure">
      <sch:assert test="count(auc:CriticalPeakPricing) &gt;= 0">element "auc:CriticalPeakPricing" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CriticalPeakRebates) &gt;= 0">element "auc:CriticalPeakRebates" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FlatRate) &gt;= 0">element "auc:FlatRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Other) &gt;= 0">element "auc:Other" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RealTimePricing) &gt;= 0">element "auc:RealTimePricing" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TieredRates) &gt;= 0">element "auc:TieredRates" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TimeOfUseRate) &gt;= 0">element "auc:TimeOfUseRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Unknown) &gt;= 0">element "auc:Unknown" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:VariablePeakPricing) &gt;= 0">element "auc:VariablePeakPricing" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:FlatRate">
      <sch:assert test="count(auc:RatePeriods) &gt;= 0">element "auc:RatePeriods" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:FlatRate/auc:RatePeriods">
      <sch:assert test="count(auc:RatePeriod) &gt;= 0">element "auc:RatePeriod" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:FlatRate/auc:RatePeriods/auc:RatePeriod">
      <sch:assert test="count(auc:ApplicableEndDateForDemandRate) &gt;= 0">element "auc:ApplicableEndDateForDemandRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ApplicableEndDateForEnergyRate) &gt;= 0">element "auc:ApplicableEndDateForEnergyRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ApplicableStartDateForDemandRate) &gt;= 0">element "auc:ApplicableStartDateForDemandRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ApplicableStartDateForEnergyRate) &gt;= 0">element "auc:ApplicableStartDateForEnergyRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DemandRatchetPercentage) &gt;= 0">element "auc:DemandRatchetPercentage" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DemandRateAdjustment) &gt;= 0">element "auc:DemandRateAdjustment" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DemandWindow) &gt;= 0">element "auc:DemandWindow" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ElectricDemandRate) &gt;= 0">element "auc:ElectricDemandRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EnergyCostRate) &gt;= 0">element "auc:EnergyCostRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EnergyRateAdjustment) &gt;= 0">element "auc:EnergyRateAdjustment" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EnergySellRate) &gt;= 0">element "auc:EnergySellRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RatePeriodName) &gt;= 0">element "auc:RatePeriodName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:FlatRate/auc:RatePeriods/auc:RatePeriod/auc:DemandRatchetPercentage">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:FlatRate/auc:RatePeriods/auc:RatePeriod/auc:DemandRateAdjustment">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:FlatRate/auc:RatePeriods/auc:RatePeriod/auc:DemandWindow">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:FlatRate/auc:RatePeriods/auc:RatePeriod/auc:ElectricDemandRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:FlatRate/auc:RatePeriods/auc:RatePeriod/auc:EnergyCostRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:FlatRate/auc:RatePeriods/auc:RatePeriod/auc:EnergyRateAdjustment">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:FlatRate/auc:RatePeriods/auc:RatePeriod/auc:EnergySellRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TieredRates">
      <sch:assert test="count(auc:TieredRate) &gt;= 0">element "auc:TieredRate" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TieredRates/auc:TieredRate">
      <sch:assert test="count(auc:RatePeriods) &gt;= 0">element "auc:RatePeriods" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TierDirection) &gt;= 0">element "auc:TierDirection" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TieredRates/auc:TieredRate/auc:RatePeriods">
      <sch:assert test="count(auc:RatePeriod) &gt;= 0">element "auc:RatePeriod" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TieredRates/auc:TieredRate/auc:RatePeriods/auc:RatePeriod">
      <sch:assert test="count(auc:ApplicableEndDateForEnergyRate) &gt;= 0">element "auc:ApplicableEndDateForEnergyRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ApplicableStartDateForEnergyRate) &gt;= 0">element "auc:ApplicableStartDateForEnergyRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EnergySellRate) &gt;= 0">element "auc:EnergySellRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RatePeriodName) &gt;= 0">element "auc:RatePeriodName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RateTiers) &gt;= 0">element "auc:RateTiers" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TieredRates/auc:TieredRate/auc:RatePeriods/auc:RatePeriod/auc:EnergySellRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TieredRates/auc:TieredRate/auc:RatePeriods/auc:RatePeriod/auc:RateTiers">
      <sch:assert test="count(auc:RateTier) &gt;= 0">element "auc:RateTier" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TieredRates/auc:TieredRate/auc:RatePeriods/auc:RatePeriod/auc:RateTiers/auc:RateTier">
      <sch:assert test="count(auc:ConsumptionEnergyTierDesignation) &gt;= 0">element "auc:ConsumptionEnergyTierDesignation" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DemandRatchetPercentage) &gt;= 0">element "auc:DemandRatchetPercentage" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DemandRateAdjustment) &gt;= 0">element "auc:DemandRateAdjustment" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DemandWindow) &gt;= 0">element "auc:DemandWindow" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ElectricDemandRate) &gt;= 0">element "auc:ElectricDemandRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EnergyCostRate) &gt;= 0">element "auc:EnergyCostRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EnergyRateAdjustment) &gt;= 0">element "auc:EnergyRateAdjustment" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MaxkWUsage) &gt;= 0">element "auc:MaxkWUsage" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MaxkWhUsage) &gt;= 0">element "auc:MaxkWhUsage" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TieredRates/auc:TieredRate/auc:RatePeriods/auc:RatePeriod/auc:RateTiers/auc:RateTier/auc:ConsumptionEnergyTierDesignation">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TieredRates/auc:TieredRate/auc:RatePeriods/auc:RatePeriod/auc:RateTiers/auc:RateTier/auc:DemandRatchetPercentage">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TieredRates/auc:TieredRate/auc:RatePeriods/auc:RatePeriod/auc:RateTiers/auc:RateTier/auc:DemandRateAdjustment">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TieredRates/auc:TieredRate/auc:RatePeriods/auc:RatePeriod/auc:RateTiers/auc:RateTier/auc:DemandWindow">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TieredRates/auc:TieredRate/auc:RatePeriods/auc:RatePeriod/auc:RateTiers/auc:RateTier/auc:ElectricDemandRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TieredRates/auc:TieredRate/auc:RatePeriods/auc:RatePeriod/auc:RateTiers/auc:RateTier/auc:EnergyCostRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TieredRates/auc:TieredRate/auc:RatePeriods/auc:RatePeriod/auc:RateTiers/auc:RateTier/auc:EnergyRateAdjustment">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TieredRates/auc:TieredRate/auc:RatePeriods/auc:RatePeriod/auc:RateTiers/auc:RateTier/auc:MaxkWUsage">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TieredRates/auc:TieredRate/auc:RatePeriods/auc:RatePeriod/auc:RateTiers/auc:RateTier/auc:MaxkWhUsage">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TimeOfUseRate">
      <sch:assert test="count(auc:RatePeriods) &gt;= 0">element "auc:RatePeriods" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TimeOfUseRate/auc:RatePeriods">
      <sch:assert test="count(auc:RatePeriod) &gt;= 0">element "auc:RatePeriod" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TimeOfUseRate/auc:RatePeriods/auc:RatePeriod">
      <sch:assert test="count(auc:ApplicableEndDateForDemandRate) &gt;= 0">element "auc:ApplicableEndDateForDemandRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ApplicableEndDateForEnergyRate) &gt;= 0">element "auc:ApplicableEndDateForEnergyRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ApplicableStartDateForDemandRate) &gt;= 0">element "auc:ApplicableStartDateForDemandRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ApplicableStartDateForEnergyRate) &gt;= 0">element "auc:ApplicableStartDateForEnergyRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EnergySellRate) &gt;= 0">element "auc:EnergySellRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RatePeriodName) &gt;= 0">element "auc:RatePeriodName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TimeOfUsePeriods) &gt;= 0">element "auc:TimeOfUsePeriods" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TimeOfUseRate/auc:RatePeriods/auc:RatePeriod/auc:EnergySellRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TimeOfUseRate/auc:RatePeriods/auc:RatePeriod/auc:TimeOfUsePeriods">
      <sch:assert test="count(auc:TimeOfUsePeriod) &gt;= 0">element "auc:TimeOfUsePeriod" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TimeOfUseRate/auc:RatePeriods/auc:RatePeriod/auc:TimeOfUsePeriods/auc:TimeOfUsePeriod">
      <sch:assert test="count(auc:ApplicableEndTimeForDemandRate) &gt;= 0">element "auc:ApplicableEndTimeForDemandRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ApplicableEndTimeForEnergyRate) &gt;= 0">element "auc:ApplicableEndTimeForEnergyRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ApplicableStartTimeForDemandRate) &gt;= 0">element "auc:ApplicableStartTimeForDemandRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ApplicableStartTimeForEnergyRate) &gt;= 0">element "auc:ApplicableStartTimeForEnergyRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DemandRatchetPercentage) &gt;= 0">element "auc:DemandRatchetPercentage" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DemandRateAdjustment) &gt;= 0">element "auc:DemandRateAdjustment" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DemandWindow) &gt;= 0">element "auc:DemandWindow" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ElectricDemandRate) &gt;= 0">element "auc:ElectricDemandRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EnergyCostRate) &gt;= 0">element "auc:EnergyCostRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EnergyRateAdjustment) &gt;= 0">element "auc:EnergyRateAdjustment" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TOUNumberForRateStructure) &gt;= 0">element "auc:TOUNumberForRateStructure" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TimeOfUseRate/auc:RatePeriods/auc:RatePeriod/auc:TimeOfUsePeriods/auc:TimeOfUsePeriod/auc:DemandRatchetPercentage">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TimeOfUseRate/auc:RatePeriods/auc:RatePeriod/auc:TimeOfUsePeriods/auc:TimeOfUsePeriod/auc:DemandRateAdjustment">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TimeOfUseRate/auc:RatePeriods/auc:RatePeriod/auc:TimeOfUsePeriods/auc:TimeOfUsePeriod/auc:DemandWindow">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TimeOfUseRate/auc:RatePeriods/auc:RatePeriod/auc:TimeOfUsePeriods/auc:TimeOfUsePeriod/auc:ElectricDemandRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TimeOfUseRate/auc:RatePeriods/auc:RatePeriod/auc:TimeOfUsePeriods/auc:TimeOfUsePeriod/auc:EnergyCostRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:RateSchedules/auc:RateSchedule/auc:TypeOfRateStructure/auc:TimeOfUseRate/auc:RatePeriods/auc:RatePeriod/auc:TimeOfUsePeriods/auc:TimeOfUsePeriod/auc:EnergyRateAdjustment">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:SourceSiteRatio">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:Utilities/auc:Utility/auc:UtilityMeterNumbers">
      <sch:assert test="count(auc:UtilityMeterNumber) &gt;= 0">element "auc:UtilityMeterNumber" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Reports/auc:Report/auc:WaterPriceEscalationRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Schedules">
      <sch:assert test="count(auc:Schedule) &gt;= 0">element "auc:Schedule" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Schedules/auc:Schedule">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ScheduleDetails) &gt;= 0">element "auc:ScheduleDetails" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SchedulePeriodBeginDate) &gt;= 0">element "auc:SchedulePeriodBeginDate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SchedulePeriodEndDate) &gt;= 0">element "auc:SchedulePeriodEndDate" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Schedules/auc:Schedule/auc:ScheduleDetails">
      <sch:assert test="count(auc:ScheduleDetail) &gt;= 0">element "auc:ScheduleDetail" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Schedules/auc:Schedule/auc:ScheduleDetails/auc:ScheduleDetail">
      <sch:assert test="count(auc:DayEndTime) &gt;= 0">element "auc:DayEndTime" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DayStartTime) &gt;= 0">element "auc:DayStartTime" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DayType) &gt;= 0">element "auc:DayType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PartialOperationPercentage) &gt;= 0">element "auc:PartialOperationPercentage" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ScheduleCategory) &gt;= 0">element "auc:ScheduleCategory" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Schedules/auc:Schedule/auc:ScheduleDetails/auc:ScheduleDetail/auc:PartialOperationPercentage">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites">
      <sch:assert test="count(auc:Site) &gt;= 0">element "auc:Site" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Buildings) &gt;= 0">element "auc:Buildings" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings">
      <sch:assert test="count(auc:Building) &gt;= 0">element "auc:Building" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AspectRatio) &gt;= 0">element "auc:AspectRatio" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Assessments) &gt;= 0">element "auc:Assessments" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:BuildingClassification) &gt;= 0">element "auc:BuildingClassification" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ConditionedFloorsAboveGrade) &gt;= 0">element "auc:ConditionedFloorsAboveGrade" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ConditionedFloorsBelowGrade) &gt;= 0">element "auc:ConditionedFloorsBelowGrade" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FederalBuilding) &gt;= 0">element "auc:FederalBuilding" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FloorsAboveGrade) &gt;= 0">element "auc:FloorsAboveGrade" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FloorsBelowGrade) &gt;= 0">element "auc:FloorsBelowGrade" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HeightDistribution) &gt;= 0">element "auc:HeightDistribution" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HistoricalLandmark) &gt;= 0">element "auc:HistoricalLandmark" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HorizontalSurroundings) &gt;= 0">element "auc:HorizontalSurroundings" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:NAICSCode) &gt;= 0">element "auc:NAICSCode" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:NumberOfBusinesses) &gt;= 0">element "auc:NumberOfBusinesses" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:NumberOfFacilitiesOnSite) &gt;= 0">element "auc:NumberOfFacilitiesOnSite" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OperatorType) &gt;= 0">element "auc:OperatorType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OverallWindowToWallRatio) &gt;= 0">element "auc:OverallWindowToWallRatio" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PercentLeasedByOwner) &gt;= 0">element "auc:PercentLeasedByOwner" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PercentOccupiedByOwner) &gt;= 0">element "auc:PercentOccupiedByOwner" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Perimeter) &gt;= 0">element "auc:Perimeter" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PortfolioManager) &gt;= 0">element "auc:PortfolioManager" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PubliclySubsidized) &gt;= 0">element "auc:PubliclySubsidized" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RetrocommissioningDate) &gt;= 0">element "auc:RetrocommissioningDate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Sections) &gt;= 0">element "auc:Sections" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SpatialUnits) &gt;= 0">element "auc:SpatialUnits" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TotalExteriorAboveGradeWallArea) &gt;= 0">element "auc:TotalExteriorAboveGradeWallArea" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TotalExteriorBelowGradeWallArea) &gt;= 0">element "auc:TotalExteriorBelowGradeWallArea" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:UnconditionedFloorsAboveGrade) &gt;= 0">element "auc:UnconditionedFloorsAboveGrade" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:UnconditionedFloorsBelowGrade) &gt;= 0">element "auc:UnconditionedFloorsBelowGrade" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:VerticalSurroundings) &gt;= 0">element "auc:VerticalSurroundings" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:YearOccupied) &gt;= 0">element "auc:YearOccupied" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:YearOfConstruction) &gt;= 0">element "auc:YearOfConstruction" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:YearOfLastEnergyAudit) &gt;= 0">element "auc:YearOfLastEnergyAudit" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:YearOfLastMajorRemodel) &gt;= 0">element "auc:YearOfLastMajorRemodel" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:YearOfLatestRetrofit) &gt;= 0">element "auc:YearOfLatestRetrofit" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:AspectRatio">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Assessments">
      <sch:assert test="count(auc:Assessment) &gt;= 0">element "auc:Assessment" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Assessments/auc:Assessment">
      <sch:assert test="count(auc:AssessmentLevel) &gt;= 0">element "auc:AssessmentLevel" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AssessmentProgram) &gt;= 0">element "auc:AssessmentProgram" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AssessmentValue) &gt;= 0">element "auc:AssessmentValue" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AssessmentVersion) &gt;= 0">element "auc:AssessmentVersion" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AssessmentYear) &gt;= 0">element "auc:AssessmentYear" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:ConditionedFloorsAboveGrade">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:ConditionedFloorsBelowGrade">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:FederalBuilding">
      <sch:assert test="count(auc:Agency) &gt;= 0">element "auc:Agency" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DepartmentRegion) &gt;= 0">element "auc:DepartmentRegion" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:FloorsAboveGrade">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:FloorsBelowGrade">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:NumberOfBusinesses">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:NumberOfFacilitiesOnSite">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:OverallWindowToWallRatio">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:PercentLeasedByOwner">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:PercentOccupiedByOwner">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Perimeter">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:PortfolioManager">
      <sch:assert test="count(auc:BuildingProfileStatus) &gt;= 0">element "auc:BuildingProfileStatus" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FederalSustainabilityChecklistCompletionPercentage) &gt;= 0">element "auc:FederalSustainabilityChecklistCompletionPercentage" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PMBenchmarkDate) &gt;= 0">element "auc:PMBenchmarkDate" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:PortfolioManager/auc:FederalSustainabilityChecklistCompletionPercentage">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections">
      <sch:assert test="count(auc:Section) &gt;= 0">element "auc:Section" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Ceilings) &gt;= 0">element "auc:Ceilings" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ExteriorFloors) &gt;= 0">element "auc:ExteriorFloors" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FloorToCeilingHeight) &gt;= 0">element "auc:FloorToCeilingHeight" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FloorToFloorHeight) &gt;= 0">element "auc:FloorToFloorHeight" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FloorsAboveGrade) &gt;= 0">element "auc:FloorsAboveGrade" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FloorsBelowGrade) &gt;= 0">element "auc:FloorsBelowGrade" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FloorsPartiallyBelowGrade) &gt;= 0">element "auc:FloorsPartiallyBelowGrade" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FootprintShape) &gt;= 0">element "auc:FootprintShape" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Foundations) &gt;= 0">element "auc:Foundations" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PerimeterZoneDepth) &gt;= 0">element "auc:PerimeterZoneDepth" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Roofs) &gt;= 0">element "auc:Roofs" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SectionType) &gt;= 0">element "auc:SectionType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SideA1Orientation) &gt;= 0">element "auc:SideA1Orientation" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Sides) &gt;= 0">element "auc:Sides" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Story) &gt;= 0">element "auc:Story" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ThermalZoneLayout) &gt;= 0">element "auc:ThermalZoneLayout" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ThermalZones) &gt;= 0">element "auc:ThermalZones" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:XOffset) &gt;= 0">element "auc:XOffset" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:YOffset) &gt;= 0">element "auc:YOffset" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:YearOfConstruction) &gt;= 0">element "auc:YearOfConstruction" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ZOffset) &gt;= 0">element "auc:ZOffset" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Ceilings">
      <sch:assert test="count(auc:Ceiling) &gt;= 0">element "auc:Ceiling" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Ceilings/auc:Ceiling">
      <sch:assert test="count(auc:CeilingID) &gt;= 0">element "auc:CeilingID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Ceilings/auc:Ceiling/auc:CeilingID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CeilingArea) &gt;= 0">element "auc:CeilingArea" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CeilingInsulatedArea) &gt;= 0">element "auc:CeilingInsulatedArea" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SpaceIDs) &gt;= 0">element "auc:SpaceIDs" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ThermalZoneIDs) &gt;= 0">element "auc:ThermalZoneIDs" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Ceilings/auc:Ceiling/auc:CeilingID/auc:CeilingArea">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Ceilings/auc:Ceiling/auc:CeilingID/auc:CeilingInsulatedArea">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Ceilings/auc:Ceiling/auc:CeilingID/auc:SpaceIDs">
      <sch:assert test="count(auc:SpaceID) &gt;= 0">element "auc:SpaceID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Ceilings/auc:Ceiling/auc:CeilingID/auc:SpaceIDs/auc:SpaceID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Ceilings/auc:Ceiling/auc:CeilingID/auc:ThermalZoneIDs">
      <sch:assert test="count(auc:ThermalZoneID) &gt;= 0">element "auc:ThermalZoneID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Ceilings/auc:Ceiling/auc:CeilingID/auc:ThermalZoneIDs/auc:ThermalZoneID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:ExteriorFloors">
      <sch:assert test="count(auc:ExteriorFloor) &gt;= 0">element "auc:ExteriorFloor" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:ExteriorFloors/auc:ExteriorFloor">
      <sch:assert test="count(auc:ExteriorFloorID) &gt;= 0">element "auc:ExteriorFloorID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:ExteriorFloors/auc:ExteriorFloor/auc:ExteriorFloorID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ExteriorFloorArea) &gt;= 0">element "auc:ExteriorFloorArea" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SpaceIDs) &gt;= 0">element "auc:SpaceIDs" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ThermalZoneIDs) &gt;= 0">element "auc:ThermalZoneIDs" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:ExteriorFloors/auc:ExteriorFloor/auc:ExteriorFloorID/auc:ExteriorFloorArea">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:ExteriorFloors/auc:ExteriorFloor/auc:ExteriorFloorID/auc:SpaceIDs">
      <sch:assert test="count(auc:SpaceID) &gt;= 0">element "auc:SpaceID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:ExteriorFloors/auc:ExteriorFloor/auc:ExteriorFloorID/auc:SpaceIDs/auc:SpaceID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:ExteriorFloors/auc:ExteriorFloor/auc:ExteriorFloorID/auc:ThermalZoneIDs">
      <sch:assert test="count(auc:ThermalZoneID) &gt;= 0">element "auc:ThermalZoneID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:ExteriorFloors/auc:ExteriorFloor/auc:ExteriorFloorID/auc:ThermalZoneIDs/auc:ThermalZoneID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:FloorToCeilingHeight">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:FloorToFloorHeight">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:FloorsAboveGrade">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:FloorsBelowGrade">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:FloorsPartiallyBelowGrade">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Foundations">
      <sch:assert test="count(auc:Foundation) &gt;= 0">element "auc:Foundation" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Foundations/auc:Foundation">
      <sch:assert test="count(auc:FoundationID) &gt;= 0">element "auc:FoundationID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Foundations/auc:Foundation/auc:FoundationID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FoundationArea) &gt;= 0">element "auc:FoundationArea" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SpaceIDs) &gt;= 0">element "auc:SpaceIDs" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ThermalZoneIDs) &gt;= 0">element "auc:ThermalZoneIDs" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Foundations/auc:Foundation/auc:FoundationID/auc:FoundationArea">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Foundations/auc:Foundation/auc:FoundationID/auc:SpaceIDs">
      <sch:assert test="count(auc:SpaceID) &gt;= 0">element "auc:SpaceID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Foundations/auc:Foundation/auc:FoundationID/auc:SpaceIDs/auc:SpaceID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Foundations/auc:Foundation/auc:FoundationID/auc:ThermalZoneIDs">
      <sch:assert test="count(auc:ThermalZoneID) &gt;= 0">element "auc:ThermalZoneID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Foundations/auc:Foundation/auc:FoundationID/auc:ThermalZoneIDs/auc:ThermalZoneID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:PerimeterZoneDepth">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Roofs">
      <sch:assert test="count(auc:Roof) &gt;= 0">element "auc:Roof" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Roofs/auc:Roof">
      <sch:assert test="count(auc:RoofID) &gt;= 0">element "auc:RoofID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Roofs/auc:Roof/auc:RoofID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RoofArea) &gt;= 0">element "auc:RoofArea" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RoofCondition) &gt;= 0">element "auc:RoofCondition" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RoofInsulatedArea) &gt;= 0">element "auc:RoofInsulatedArea" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SkylightIDs) &gt;= 0">element "auc:SkylightIDs" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Roofs/auc:Roof/auc:RoofID/auc:RoofArea">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Roofs/auc:Roof/auc:RoofID/auc:RoofInsulatedArea">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Roofs/auc:Roof/auc:RoofID/auc:SkylightIDs">
      <sch:assert test="count(auc:SkylightID) &gt;= 0">element "auc:SkylightID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Roofs/auc:Roof/auc:RoofID/auc:SkylightIDs/auc:SkylightID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PercentSkylightArea) &gt;= 0">element "auc:PercentSkylightArea" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Roofs/auc:Roof/auc:RoofID/auc:SkylightIDs/auc:SkylightID/auc:PercentSkylightArea">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:SideA1Orientation">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Sides">
      <sch:assert test="count(auc:Side) &gt;= 0">element "auc:Side" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Sides/auc:Side">
      <sch:assert test="count(auc:DoorID) &gt;= 0">element "auc:DoorID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SideLength) &gt;= 0">element "auc:SideLength" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SideNumber) &gt;= 0">element "auc:SideNumber" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ThermalZoneIDs) &gt;= 0">element "auc:ThermalZoneIDs" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WallID) &gt;= 0">element "auc:WallID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WindowID) &gt;= 0">element "auc:WindowID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Sides/auc:Side/auc:DoorID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FenestrationArea) &gt;= 0">element "auc:FenestrationArea" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Sides/auc:Side/auc:DoorID/auc:FenestrationArea">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Sides/auc:Side/auc:SideLength">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Sides/auc:Side/auc:ThermalZoneIDs">
      <sch:assert test="count(auc:ThermalZoneID) &gt;= 0">element "auc:ThermalZoneID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Sides/auc:Side/auc:ThermalZoneIDs/auc:ThermalZoneID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Sides/auc:Side/auc:WallID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WallArea) &gt;= 0">element "auc:WallArea" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Sides/auc:Side/auc:WallID/auc:WallArea">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Sides/auc:Side/auc:WindowID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FenestrationArea) &gt;= 0">element "auc:FenestrationArea" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PercentOfWindowAreaShaded) &gt;= 0">element "auc:PercentOfWindowAreaShaded" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WindowToWallRatio) &gt;= 0">element "auc:WindowToWallRatio" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Sides/auc:Side/auc:WindowID/auc:FenestrationArea">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Sides/auc:Side/auc:WindowID/auc:PercentOfWindowAreaShaded">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:Sides/auc:Side/auc:WindowID/auc:WindowToWallRatio">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:ThermalZones">
      <sch:assert test="count(auc:ThermalZone) &gt;= 0">element "auc:ThermalZone" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:ThermalZones/auc:ThermalZone">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ACAdjusted) &gt;= 0">element "auc:ACAdjusted" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DeliveryIDs) &gt;= 0">element "auc:DeliveryIDs" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HVACScheduleIDs) &gt;= 0">element "auc:HVACScheduleIDs" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HeatLowered) &gt;= 0">element "auc:HeatLowered" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SetbackTemperatureHeating) &gt;= 0">element "auc:SetbackTemperatureHeating" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SetpointTemperatureCooling) &gt;= 0">element "auc:SetpointTemperatureCooling" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SetpointTemperatureHeating) &gt;= 0">element "auc:SetpointTemperatureHeating" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SetupTemperatureCooling) &gt;= 0">element "auc:SetupTemperatureCooling" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Spaces) &gt;= 0">element "auc:Spaces" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:ThermalZones/auc:ThermalZone/auc:DeliveryIDs">
      <sch:assert test="count(auc:DeliveryID) &gt;= 0">element "auc:DeliveryID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:ThermalZones/auc:ThermalZone/auc:DeliveryIDs/auc:DeliveryID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:ThermalZones/auc:ThermalZone/auc:HVACScheduleIDs">
      <sch:assert test="count(auc:HVACScheduleID) &gt;= 0">element "auc:HVACScheduleID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:ThermalZones/auc:ThermalZone/auc:HVACScheduleIDs/auc:HVACScheduleID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:ThermalZones/auc:ThermalZone/auc:SetbackTemperatureHeating">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:ThermalZones/auc:ThermalZone/auc:SetpointTemperatureCooling">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:ThermalZones/auc:ThermalZone/auc:SetpointTemperatureHeating">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:ThermalZones/auc:ThermalZone/auc:SetupTemperatureCooling">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:ThermalZones/auc:ThermalZone/auc:Spaces">
      <sch:assert test="count(auc:Space) &gt;= 0">element "auc:Space" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:ThermalZones/auc:ThermalZone/auc:Spaces/auc:Space">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ConditionedVolume) &gt;= 0">element "auc:ConditionedVolume" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DaylightingIlluminanceSetpoint) &gt;= 0">element "auc:DaylightingIlluminanceSetpoint" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DaylitFloorArea) &gt;= 0">element "auc:DaylitFloorArea" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OccupancyScheduleIDs) &gt;= 0">element "auc:OccupancyScheduleIDs" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OccupantsActivityLevel) &gt;= 0">element "auc:OccupantsActivityLevel" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PercentageOfCommonSpace) &gt;= 0">element "auc:PercentageOfCommonSpace" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:ThermalZones/auc:ThermalZone/auc:Spaces/auc:Space/auc:ConditionedVolume">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:ThermalZones/auc:ThermalZone/auc:Spaces/auc:Space/auc:DaylightingIlluminanceSetpoint">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:ThermalZones/auc:ThermalZone/auc:Spaces/auc:Space/auc:OccupancyScheduleIDs">
      <sch:assert test="count(auc:OccupancyScheduleID) &gt;= 0">element "auc:OccupancyScheduleID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:ThermalZones/auc:ThermalZone/auc:Spaces/auc:Space/auc:OccupancyScheduleIDs/auc:OccupancyScheduleID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:ThermalZones/auc:ThermalZone/auc:Spaces/auc:Space/auc:PercentageOfCommonSpace">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:XOffset">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:YOffset">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:Sections/auc:Section/auc:ZOffset">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:SpatialUnits">
      <sch:assert test="count(auc:SpatialUnit) &gt;= 0">element "auc:SpatialUnit" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:SpatialUnits/auc:SpatialUnit">
      <sch:assert test="count(auc:NumberOfUnits) &gt;= 0">element "auc:NumberOfUnits" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SpatialUnitOccupiedPercentage) &gt;= 0">element "auc:SpatialUnitOccupiedPercentage" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SpatialUnitType) &gt;= 0">element "auc:SpatialUnitType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:UnitDensity) &gt;= 0">element "auc:UnitDensity" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:SpatialUnits/auc:SpatialUnit/auc:NumberOfUnits">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:SpatialUnits/auc:SpatialUnit/auc:UnitDensity">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:TotalExteriorAboveGradeWallArea">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:TotalExteriorBelowGradeWallArea">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:UnconditionedFloorsAboveGrade">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Sites/auc:Site/auc:Buildings/auc:Building/auc:UnconditionedFloorsBelowGrade">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems">
      <sch:assert test="count(auc:AirInfiltrationSystems) &gt;= 0">element "auc:AirInfiltrationSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CeilingSystems) &gt;= 0">element "auc:CeilingSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ConveyanceSystems) &gt;= 0">element "auc:ConveyanceSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CookingSystems) &gt;= 0">element "auc:CookingSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CriticalITSystems) &gt;= 0">element "auc:CriticalITSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DishwasherSystems) &gt;= 0">element "auc:DishwasherSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DomesticHotWaterSystems) &gt;= 0">element "auc:DomesticHotWaterSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ExteriorFloorSystems) &gt;= 0">element "auc:ExteriorFloorSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FanSystems) &gt;= 0">element "auc:FanSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FenestrationSystems) &gt;= 0">element "auc:FenestrationSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FoundationSystems) &gt;= 0">element "auc:FoundationSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HVACSystems) &gt;= 0">element "auc:HVACSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HeatRecoverySystems) &gt;= 0">element "auc:HeatRecoverySystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:LaundrySystems) &gt;= 0">element "auc:LaundrySystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:LightingSystems) &gt;= 0">element "auc:LightingSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MotorSystems) &gt;= 0">element "auc:MotorSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OnsiteStorageTransmissionGenerationSystems) &gt;= 0">element "auc:OnsiteStorageTransmissionGenerationSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PlugLoads) &gt;= 0">element "auc:PlugLoads" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Pools) &gt;= 0">element "auc:Pools" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ProcessLoads) &gt;= 0">element "auc:ProcessLoads" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PumpSystems) &gt;= 0">element "auc:PumpSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RefrigerationSystems) &gt;= 0">element "auc:RefrigerationSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RoofSystems) &gt;= 0">element "auc:RoofSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WallSystems) &gt;= 0">element "auc:WallSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WaterInfiltrationSystems) &gt;= 0">element "auc:WaterInfiltrationSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WaterUses) &gt;= 0">element "auc:WaterUses" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:AirInfiltrationSystems">
      <sch:assert test="count(auc:AirInfiltrationSystem) &gt;= 0">element "auc:AirInfiltrationSystem" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:AirInfiltrationSystems/auc:AirInfiltrationSystem">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AirInfiltrationTest) &gt;= 0">element "auc:AirInfiltrationTest" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AirInfiltrationValue) &gt;= 0">element "auc:AirInfiltrationValue" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AirInfiltrationValueUnits) &gt;= 0">element "auc:AirInfiltrationValueUnits" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Tightness) &gt;= 0">element "auc:Tightness" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:AirInfiltrationSystems/auc:AirInfiltrationSystem/auc:AirInfiltrationValue">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CeilingSystems">
      <sch:assert test="count(auc:CeilingSystem) &gt;= 0">element "auc:CeilingSystem" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CeilingSystems/auc:CeilingSystem">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CeilingColor) &gt;= 0">element "auc:CeilingColor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CeilingConstruction) &gt;= 0">element "auc:CeilingConstruction" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CeilingFinish) &gt;= 0">element "auc:CeilingFinish" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CeilingFramingDepth) &gt;= 0">element "auc:CeilingFramingDepth" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CeilingFramingFactor) &gt;= 0">element "auc:CeilingFramingFactor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CeilingFramingMaterial) &gt;= 0">element "auc:CeilingFramingMaterial" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CeilingFramingSpacing) &gt;= 0">element "auc:CeilingFramingSpacing" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CeilingInsulations) &gt;= 0">element "auc:CeilingInsulations" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CeilingRValue) &gt;= 0">element "auc:CeilingRValue" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CeilingUFactor) &gt;= 0">element "auc:CeilingUFactor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CeilingVisibleAbsorptance) &gt;= 0">element "auc:CeilingVisibleAbsorptance" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CeilingSystems/auc:CeilingSystem/auc:CeilingFramingDepth">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CeilingSystems/auc:CeilingSystem/auc:CeilingFramingFactor">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CeilingSystems/auc:CeilingSystem/auc:CeilingFramingSpacing">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CeilingSystems/auc:CeilingSystem/auc:CeilingInsulations">
      <sch:assert test="count(auc:CeilingInsulation) &gt;= 0">element "auc:CeilingInsulation" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CeilingSystems/auc:CeilingSystem/auc:CeilingInsulations/auc:CeilingInsulation">
      <sch:assert test="count(auc:CeilingInsulationApplication) &gt;= 0">element "auc:CeilingInsulationApplication" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CeilingInsulationCondition) &gt;= 0">element "auc:CeilingInsulationCondition" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CeilingInsulationContinuity) &gt;= 0">element "auc:CeilingInsulationContinuity" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CeilingInsulationMaterial) &gt;= 0">element "auc:CeilingInsulationMaterial" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CeilingInsulationThickness) &gt;= 0">element "auc:CeilingInsulationThickness" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CeilingSystems/auc:CeilingSystem/auc:CeilingInsulations/auc:CeilingInsulation/auc:CeilingInsulationThickness">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CeilingSystems/auc:CeilingSystem/auc:CeilingRValue">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CeilingSystems/auc:CeilingSystem/auc:CeilingUFactor">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CeilingSystems/auc:CeilingSystem/auc:CeilingVisibleAbsorptance">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ConveyanceSystems">
      <sch:assert test="count(auc:ConveyanceSystem) &gt;= 0">element "auc:ConveyanceSystem" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ConveyanceSystems/auc:ConveyanceSystem">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Controls) &gt;= 0">element "auc:Controls" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ConveyanceLoadType) &gt;= 0">element "auc:ConveyanceLoadType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ConveyancePeakPower) &gt;= 0">element "auc:ConveyancePeakPower" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ConveyanceStandbyPower) &gt;= 0">element "auc:ConveyanceStandbyPower" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ConveyanceSystemType) &gt;= 0">element "auc:ConveyanceSystemType" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ConveyanceSystems/auc:ConveyanceSystem/auc:Controls">
      <sch:assert test="count(auc:Control) &gt;= 0">element "auc:Control" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ConveyanceSystems/auc:ConveyanceSystem/auc:Controls/auc:Control">
      <sch:assert test="count(auc:AdvancedPowerStrip) &gt;= 0">element "auc:AdvancedPowerStrip" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Manual) &gt;= 0">element "auc:Manual" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Occupancy) &gt;= 0">element "auc:Occupancy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnology) &gt;= 0">element "auc:OtherControlTechnology" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Thermostat) &gt;= 0">element "auc:Thermostat" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Timer) &gt;= 0">element "auc:Timer" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ConveyanceSystems/auc:ConveyanceSystem/auc:Controls/auc:Control/auc:AdvancedPowerStrip">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ConveyanceSystems/auc:ConveyanceSystem/auc:Controls/auc:Control/auc:Manual">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ConveyanceSystems/auc:ConveyanceSystem/auc:Controls/auc:Control/auc:Occupancy">
      <sch:assert test="count(auc:ControlSensor) &gt;= 0">element "auc:ControlSensor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ConveyanceSystems/auc:ConveyanceSystem/auc:Controls/auc:Control/auc:OtherControlTechnology">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnologyName) &gt;= 0">element "auc:OtherControlTechnologyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ConveyanceSystems/auc:ConveyanceSystem/auc:Controls/auc:Control/auc:Thermostat">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ConveyanceSystems/auc:ConveyanceSystem/auc:Controls/auc:Control/auc:Timer">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ConveyanceSystems/auc:ConveyanceSystem/auc:ConveyancePeakPower">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ConveyanceSystems/auc:ConveyanceSystem/auc:ConveyanceStandbyPower">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CookingSystems">
      <sch:assert test="count(auc:CookingSystem) &gt;= 0">element "auc:CookingSystem" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CookingSystems/auc:CookingSystem">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CookingEnergyPerMeal) &gt;= 0">element "auc:CookingEnergyPerMeal" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DailyWaterUse) &gt;= 0">element "auc:DailyWaterUse" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:NumberOfMeals) &gt;= 0">element "auc:NumberOfMeals" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TypeOfCookingEquipment) &gt;= 0">element "auc:TypeOfCookingEquipment" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CookingSystems/auc:CookingSystem/auc:CookingEnergyPerMeal">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CookingSystems/auc:CookingSystem/auc:DailyWaterUse">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CookingSystems/auc:CookingSystem/auc:NumberOfMeals">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CriticalITSystems">
      <sch:assert test="count(auc:CriticalITSystem) &gt;= 0">element "auc:CriticalITSystem" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CriticalITSystems/auc:CriticalITSystem">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Controls) &gt;= 0">element "auc:Controls" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ITNominalPower) &gt;= 0">element "auc:ITNominalPower" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ITPeakPower) &gt;= 0">element "auc:ITPeakPower" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ITStandbyPower) &gt;= 0">element "auc:ITStandbyPower" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ITSystemType) &gt;= 0">element "auc:ITSystemType" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CriticalITSystems/auc:CriticalITSystem/auc:Controls">
      <sch:assert test="count(auc:Control) &gt;= 0">element "auc:Control" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CriticalITSystems/auc:CriticalITSystem/auc:Controls/auc:Control">
      <sch:assert test="count(auc:AdvancedPowerStrip) &gt;= 0">element "auc:AdvancedPowerStrip" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Manual) &gt;= 0">element "auc:Manual" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Occupancy) &gt;= 0">element "auc:Occupancy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnology) &gt;= 0">element "auc:OtherControlTechnology" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Thermostat) &gt;= 0">element "auc:Thermostat" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Timer) &gt;= 0">element "auc:Timer" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CriticalITSystems/auc:CriticalITSystem/auc:Controls/auc:Control/auc:AdvancedPowerStrip">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CriticalITSystems/auc:CriticalITSystem/auc:Controls/auc:Control/auc:Manual">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CriticalITSystems/auc:CriticalITSystem/auc:Controls/auc:Control/auc:Occupancy">
      <sch:assert test="count(auc:ControlSensor) &gt;= 0">element "auc:ControlSensor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CriticalITSystems/auc:CriticalITSystem/auc:Controls/auc:Control/auc:OtherControlTechnology">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnologyName) &gt;= 0">element "auc:OtherControlTechnologyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CriticalITSystems/auc:CriticalITSystem/auc:Controls/auc:Control/auc:Thermostat">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CriticalITSystems/auc:CriticalITSystem/auc:Controls/auc:Control/auc:Timer">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CriticalITSystems/auc:CriticalITSystem/auc:ITNominalPower">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CriticalITSystems/auc:CriticalITSystem/auc:ITPeakPower">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:CriticalITSystems/auc:CriticalITSystem/auc:ITStandbyPower">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DishwasherSystems">
      <sch:assert test="count(auc:DishwasherSystem) &gt;= 0">element "auc:DishwasherSystem" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DishwasherSystems/auc:DishwasherSystem">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Controls) &gt;= 0">element "auc:Controls" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DishwasherClassification) &gt;= 0">element "auc:DishwasherClassification" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DishwasherConfiguration) &gt;= 0">element "auc:DishwasherConfiguration" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DishwasherEnergyFactor) &gt;= 0">element "auc:DishwasherEnergyFactor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DishwasherHotWaterUse) &gt;= 0">element "auc:DishwasherHotWaterUse" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DishwasherLoadsPerWeek) &gt;= 0">element "auc:DishwasherLoadsPerWeek" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DishwasherMachineType) &gt;= 0">element "auc:DishwasherMachineType" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DishwasherSystems/auc:DishwasherSystem/auc:Controls">
      <sch:assert test="count(auc:Control) &gt;= 0">element "auc:Control" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DishwasherSystems/auc:DishwasherSystem/auc:Controls/auc:Control">
      <sch:assert test="count(auc:AdvancedPowerStrip) &gt;= 0">element "auc:AdvancedPowerStrip" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Manual) &gt;= 0">element "auc:Manual" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Occupancy) &gt;= 0">element "auc:Occupancy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnology) &gt;= 0">element "auc:OtherControlTechnology" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Thermostat) &gt;= 0">element "auc:Thermostat" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Timer) &gt;= 0">element "auc:Timer" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DishwasherSystems/auc:DishwasherSystem/auc:Controls/auc:Control/auc:AdvancedPowerStrip">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DishwasherSystems/auc:DishwasherSystem/auc:Controls/auc:Control/auc:Manual">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DishwasherSystems/auc:DishwasherSystem/auc:Controls/auc:Control/auc:Occupancy">
      <sch:assert test="count(auc:ControlSensor) &gt;= 0">element "auc:ControlSensor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DishwasherSystems/auc:DishwasherSystem/auc:Controls/auc:Control/auc:OtherControlTechnology">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnologyName) &gt;= 0">element "auc:OtherControlTechnologyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DishwasherSystems/auc:DishwasherSystem/auc:Controls/auc:Control/auc:Thermostat">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DishwasherSystems/auc:DishwasherSystem/auc:Controls/auc:Control/auc:Timer">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DishwasherSystems/auc:DishwasherSystem/auc:DishwasherEnergyFactor">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DishwasherSystems/auc:DishwasherSystem/auc:DishwasherHotWaterUse">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DishwasherSystems/auc:DishwasherSystem/auc:DishwasherLoadsPerWeek">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems">
      <sch:assert test="count(auc:DomesticHotWaterSystem) &gt;= 0">element "auc:DomesticHotWaterSystem" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Controls) &gt;= 0">element "auc:Controls" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DailyHotWaterDraw) &gt;= 0">element "auc:DailyHotWaterDraw" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DomesticHotWaterType) &gt;= 0">element "auc:DomesticHotWaterType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HotWaterDistributionType) &gt;= 0">element "auc:HotWaterDistributionType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HotWaterSetpointTemperature) &gt;= 0">element "auc:HotWaterSetpointTemperature" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ParasiticFuelConsumptionRate) &gt;= 0">element "auc:ParasiticFuelConsumptionRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Recirculation) &gt;= 0">element "auc:Recirculation" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WaterHeaterEfficiency) &gt;= 0">element "auc:WaterHeaterEfficiency" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WaterHeaterEfficiencyType) &gt;= 0">element "auc:WaterHeaterEfficiencyType" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:Controls">
      <sch:assert test="count(auc:Control) &gt;= 0">element "auc:Control" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:Controls/auc:Control">
      <sch:assert test="count(auc:AdvancedPowerStrip) &gt;= 0">element "auc:AdvancedPowerStrip" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Manual) &gt;= 0">element "auc:Manual" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Occupancy) &gt;= 0">element "auc:Occupancy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnology) &gt;= 0">element "auc:OtherControlTechnology" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Thermostat) &gt;= 0">element "auc:Thermostat" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Timer) &gt;= 0">element "auc:Timer" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:Controls/auc:Control/auc:AdvancedPowerStrip">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:Controls/auc:Control/auc:Manual">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:Controls/auc:Control/auc:Occupancy">
      <sch:assert test="count(auc:ControlSensor) &gt;= 0">element "auc:ControlSensor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:Controls/auc:Control/auc:OtherControlTechnology">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnologyName) &gt;= 0">element "auc:OtherControlTechnologyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:Controls/auc:Control/auc:Thermostat">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:Controls/auc:Control/auc:Timer">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DailyHotWaterDraw">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType">
      <sch:assert test="count(auc:HeatExchanger) &gt;= 0">element "auc:HeatExchanger" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Instantaneous) &gt;= 0">element "auc:Instantaneous" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Other) &gt;= 0">element "auc:Other" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:StorageTank) &gt;= 0">element "auc:StorageTank" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Unknown) &gt;= 0">element "auc:Unknown" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:Instantaneous">
      <sch:assert test="count(auc:InstantaneousWaterHeatingSource) &gt;= 0">element "auc:InstantaneousWaterHeatingSource" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:Instantaneous/auc:InstantaneousWaterHeatingSource">
      <sch:assert test="count(auc:Combustion) &gt;= 0">element "auc:Combustion" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ElectricResistance) &gt;= 0">element "auc:ElectricResistance" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Other) &gt;= 0">element "auc:Other" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Unknown) &gt;= 0">element "auc:Unknown" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank">
      <sch:assert test="count(auc:OffCycleHeatLossCoefficient) &gt;= 0">element "auc:OffCycleHeatLossCoefficient" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RecoveryEfficiency) &gt;= 0">element "auc:RecoveryEfficiency" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:StorageTankInsulationRValue) &gt;= 0">element "auc:StorageTankInsulationRValue" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:StorageTankInsulationThickness) &gt;= 0">element "auc:StorageTankInsulationThickness" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TankHeatingType) &gt;= 0">element "auc:TankHeatingType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TankHeight) &gt;= 0">element "auc:TankHeight" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TankPerimeter) &gt;= 0">element "auc:TankPerimeter" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TankVolume) &gt;= 0">element "auc:TankVolume" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:OffCycleHeatLossCoefficient">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:RecoveryEfficiency">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:StorageTankInsulationRValue">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:StorageTankInsulationThickness">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:TankHeatingType">
      <sch:assert test="count(auc:Direct) &gt;= 0">element "auc:Direct" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Indirect) &gt;= 0">element "auc:Indirect" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Other) &gt;= 0">element "auc:Other" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Unknown) &gt;= 0">element "auc:Unknown" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:TankHeatingType/auc:Direct">
      <sch:assert test="count(auc:DirectTankHeatingSource) &gt;= 0">element "auc:DirectTankHeatingSource" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:TankHeatingType/auc:Direct/auc:DirectTankHeatingSource">
      <sch:assert test="count(auc:Combustion) &gt;= 0">element "auc:Combustion" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ElectricResistance) &gt;= 0">element "auc:ElectricResistance" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Other) &gt;= 0">element "auc:Other" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Unknown) &gt;= 0">element "auc:Unknown" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:TankHeatingType/auc:Indirect">
      <sch:assert test="count(auc:IndirectTankHeatingSource) &gt;= 0">element "auc:IndirectTankHeatingSource" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:TankHeatingType/auc:Indirect/auc:IndirectTankHeatingSource">
      <sch:assert test="count(auc:HeatPump) &gt;= 0">element "auc:HeatPump" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Other) &gt;= 0">element "auc:Other" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Solar) &gt;= 0">element "auc:Solar" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SpaceHeatingSystem) &gt;= 0">element "auc:SpaceHeatingSystem" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Unknown) &gt;= 0">element "auc:Unknown" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:TankHeatingType/auc:Indirect/auc:IndirectTankHeatingSource/auc:HeatPump">
      <sch:assert test="count(auc:HPWHMinimumAirTemperature) &gt;= 0">element "auc:HPWHMinimumAirTemperature" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RatedHeatPumpSensibleHeatRatio) &gt;= 0">element "auc:RatedHeatPumpSensibleHeatRatio" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:TankHeatingType/auc:Indirect/auc:IndirectTankHeatingSource/auc:HeatPump/auc:HPWHMinimumAirTemperature">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:TankHeatingType/auc:Indirect/auc:IndirectTankHeatingSource/auc:HeatPump/auc:RatedHeatPumpSensibleHeatRatio">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:TankHeatingType/auc:Indirect/auc:IndirectTankHeatingSource/auc:Solar">
      <sch:assert test="count(auc:Controls) &gt;= 0">element "auc:Controls" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SolarThermalSystemCollectorArea) &gt;= 0">element "auc:SolarThermalSystemCollectorArea" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SolarThermalSystemCollectorAzimuth) &gt;= 0">element "auc:SolarThermalSystemCollectorAzimuth" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SolarThermalSystemCollectorLoopType) &gt;= 0">element "auc:SolarThermalSystemCollectorLoopType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SolarThermalSystemCollectorTilt) &gt;= 0">element "auc:SolarThermalSystemCollectorTilt" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SolarThermalSystemCollectorType) &gt;= 0">element "auc:SolarThermalSystemCollectorType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SolarThermalSystemStorageVolume) &gt;= 0">element "auc:SolarThermalSystemStorageVolume" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SolarThermalSystemType) &gt;= 0">element "auc:SolarThermalSystemType" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:TankHeatingType/auc:Indirect/auc:IndirectTankHeatingSource/auc:Solar/auc:Controls">
      <sch:assert test="count(auc:Control) &gt;= 0">element "auc:Control" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:TankHeatingType/auc:Indirect/auc:IndirectTankHeatingSource/auc:Solar/auc:Controls/auc:Control">
      <sch:assert test="count(auc:AdvancedPowerStrip) &gt;= 0">element "auc:AdvancedPowerStrip" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Manual) &gt;= 0">element "auc:Manual" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Occupancy) &gt;= 0">element "auc:Occupancy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnology) &gt;= 0">element "auc:OtherControlTechnology" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Thermostat) &gt;= 0">element "auc:Thermostat" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Timer) &gt;= 0">element "auc:Timer" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:TankHeatingType/auc:Indirect/auc:IndirectTankHeatingSource/auc:Solar/auc:Controls/auc:Control/auc:AdvancedPowerStrip">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:TankHeatingType/auc:Indirect/auc:IndirectTankHeatingSource/auc:Solar/auc:Controls/auc:Control/auc:Manual">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:TankHeatingType/auc:Indirect/auc:IndirectTankHeatingSource/auc:Solar/auc:Controls/auc:Control/auc:Occupancy">
      <sch:assert test="count(auc:ControlSensor) &gt;= 0">element "auc:ControlSensor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:TankHeatingType/auc:Indirect/auc:IndirectTankHeatingSource/auc:Solar/auc:Controls/auc:Control/auc:OtherControlTechnology">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnologyName) &gt;= 0">element "auc:OtherControlTechnologyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:TankHeatingType/auc:Indirect/auc:IndirectTankHeatingSource/auc:Solar/auc:Controls/auc:Control/auc:Thermostat">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:TankHeatingType/auc:Indirect/auc:IndirectTankHeatingSource/auc:Solar/auc:Controls/auc:Control/auc:Timer">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:TankHeatingType/auc:Indirect/auc:IndirectTankHeatingSource/auc:Solar/auc:SolarThermalSystemCollectorArea">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:TankHeatingType/auc:Indirect/auc:IndirectTankHeatingSource/auc:Solar/auc:SolarThermalSystemCollectorAzimuth">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:TankHeatingType/auc:Indirect/auc:IndirectTankHeatingSource/auc:Solar/auc:SolarThermalSystemCollectorTilt">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:TankHeatingType/auc:Indirect/auc:IndirectTankHeatingSource/auc:Solar/auc:SolarThermalSystemStorageVolume">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:TankHeatingType/auc:Indirect/auc:IndirectTankHeatingSource/auc:SpaceHeatingSystem">
      <sch:assert test="count(auc:HeatingPlantID) &gt;= 0">element "auc:HeatingPlantID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:TankHeatingType/auc:Indirect/auc:IndirectTankHeatingSource/auc:SpaceHeatingSystem/auc:HeatingPlantID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:TankHeight">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:TankPerimeter">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:DomesticHotWaterType/auc:StorageTank/auc:TankVolume">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:HotWaterSetpointTemperature">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:ParasiticFuelConsumptionRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:Recirculation">
      <sch:assert test="count(auc:PipeInsulationThickness) &gt;= 0">element "auc:PipeInsulationThickness" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PipeLocation) &gt;= 0">element "auc:PipeLocation" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RecirculationControlType) &gt;= 0">element "auc:RecirculationControlType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RecirculationEnergyLossRate) &gt;= 0">element "auc:RecirculationEnergyLossRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RecirculationFlowRate) &gt;= 0">element "auc:RecirculationFlowRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RecirculationLoopCount) &gt;= 0">element "auc:RecirculationLoopCount" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:Recirculation/auc:PipeInsulationThickness">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:Recirculation/auc:PipeLocation">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:Recirculation/auc:RecirculationEnergyLossRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:Recirculation/auc:RecirculationFlowRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:Recirculation/auc:RecirculationLoopCount">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:DomesticHotWaterSystems/auc:DomesticHotWaterSystem/auc:WaterHeaterEfficiency">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ExteriorFloorSystems">
      <sch:assert test="count(auc:ExteriorFloorSystem) &gt;= 0">element "auc:ExteriorFloorSystem" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ExteriorFloorSystems/auc:ExteriorFloorSystem">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ExteriorFloorColor) &gt;= 0">element "auc:ExteriorFloorColor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ExteriorFloorConstruction) &gt;= 0">element "auc:ExteriorFloorConstruction" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ExteriorFloorExteriorSolarAbsorptance) &gt;= 0">element "auc:ExteriorFloorExteriorSolarAbsorptance" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ExteriorFloorExteriorThermalAbsorptance) &gt;= 0">element "auc:ExteriorFloorExteriorThermalAbsorptance" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ExteriorFloorFinish) &gt;= 0">element "auc:ExteriorFloorFinish" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ExteriorFloorFramingDepth) &gt;= 0">element "auc:ExteriorFloorFramingDepth" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ExteriorFloorFramingFactor) &gt;= 0">element "auc:ExteriorFloorFramingFactor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ExteriorFloorFramingMaterial) &gt;= 0">element "auc:ExteriorFloorFramingMaterial" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ExteriorFloorFramingSpacing) &gt;= 0">element "auc:ExteriorFloorFramingSpacing" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ExteriorFloorRValue) &gt;= 0">element "auc:ExteriorFloorRValue" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ExteriorFloorUFactor) &gt;= 0">element "auc:ExteriorFloorUFactor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ExteriorRoughness) &gt;= 0">element "auc:ExteriorRoughness" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:InteriorVisibleAbsorptance) &gt;= 0">element "auc:InteriorVisibleAbsorptance" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ExteriorFloorSystems/auc:ExteriorFloorSystem/auc:ExteriorFloorExteriorSolarAbsorptance">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ExteriorFloorSystems/auc:ExteriorFloorSystem/auc:ExteriorFloorExteriorThermalAbsorptance">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ExteriorFloorSystems/auc:ExteriorFloorSystem/auc:ExteriorFloorFramingDepth">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ExteriorFloorSystems/auc:ExteriorFloorSystem/auc:ExteriorFloorFramingFactor">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ExteriorFloorSystems/auc:ExteriorFloorSystem/auc:ExteriorFloorFramingSpacing">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ExteriorFloorSystems/auc:ExteriorFloorSystem/auc:ExteriorFloorRValue">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ExteriorFloorSystems/auc:ExteriorFloorSystem/auc:ExteriorFloorUFactor">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ExteriorFloorSystems/auc:ExteriorFloorSystem/auc:InteriorVisibleAbsorptance">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FanSystems">
      <sch:assert test="count(auc:FanSystem) &gt;= 0">element "auc:FanSystem" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FanSystems/auc:FanSystem">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:BeltType) &gt;= 0">element "auc:BeltType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Controls) &gt;= 0">element "auc:Controls" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DesignStaticPressure) &gt;= 0">element "auc:DesignStaticPressure" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FanApplication) &gt;= 0">element "auc:FanApplication" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FanControlType) &gt;= 0">element "auc:FanControlType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FanEfficiency) &gt;= 0">element "auc:FanEfficiency" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FanPlacement) &gt;= 0">element "auc:FanPlacement" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FanPowerMinimumRatio) &gt;= 0">element "auc:FanPowerMinimumRatio" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FanSize) &gt;= 0">element "auc:FanSize" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FanType) &gt;= 0">element "auc:FanType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:InstalledFlowRate) &gt;= 0">element "auc:InstalledFlowRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:LinkedSystemIDs) &gt;= 0">element "auc:LinkedSystemIDs" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MaximumFanPower) &gt;= 0">element "auc:MaximumFanPower" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MinimumFlowRate) &gt;= 0">element "auc:MinimumFlowRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MotorLocationRelativeToAirStream) &gt;= 0">element "auc:MotorLocationRelativeToAirStream" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:NumberOfDiscreteFanSpeedsCooling) &gt;= 0">element "auc:NumberOfDiscreteFanSpeedsCooling" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:NumberOfDiscreteFanSpeedsHeating) &gt;= 0">element "auc:NumberOfDiscreteFanSpeedsHeating" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FanSystems/auc:FanSystem/auc:Controls">
      <sch:assert test="count(auc:Control) &gt;= 0">element "auc:Control" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FanSystems/auc:FanSystem/auc:Controls/auc:Control">
      <sch:assert test="count(auc:AdvancedPowerStrip) &gt;= 0">element "auc:AdvancedPowerStrip" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Manual) &gt;= 0">element "auc:Manual" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Occupancy) &gt;= 0">element "auc:Occupancy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnology) &gt;= 0">element "auc:OtherControlTechnology" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Thermostat) &gt;= 0">element "auc:Thermostat" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Timer) &gt;= 0">element "auc:Timer" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FanSystems/auc:FanSystem/auc:Controls/auc:Control/auc:AdvancedPowerStrip">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FanSystems/auc:FanSystem/auc:Controls/auc:Control/auc:Manual">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FanSystems/auc:FanSystem/auc:Controls/auc:Control/auc:Occupancy">
      <sch:assert test="count(auc:ControlSensor) &gt;= 0">element "auc:ControlSensor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FanSystems/auc:FanSystem/auc:Controls/auc:Control/auc:OtherControlTechnology">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnologyName) &gt;= 0">element "auc:OtherControlTechnologyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FanSystems/auc:FanSystem/auc:Controls/auc:Control/auc:Thermostat">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FanSystems/auc:FanSystem/auc:Controls/auc:Control/auc:Timer">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FanSystems/auc:FanSystem/auc:DesignStaticPressure">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FanSystems/auc:FanSystem/auc:FanEfficiency">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FanSystems/auc:FanSystem/auc:FanPowerMinimumRatio">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FanSystems/auc:FanSystem/auc:FanSize">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FanSystems/auc:FanSystem/auc:InstalledFlowRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FanSystems/auc:FanSystem/auc:LinkedSystemIDs">
      <sch:assert test="count(auc:LinkedSystemID) &gt;= 0">element "auc:LinkedSystemID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FanSystems/auc:FanSystem/auc:LinkedSystemIDs/auc:LinkedSystemID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FanSystems/auc:FanSystem/auc:MaximumFanPower">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FanSystems/auc:FanSystem/auc:MinimumFlowRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FanSystems/auc:FanSystem/auc:NumberOfDiscreteFanSpeedsCooling">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FanSystems/auc:FanSystem/auc:NumberOfDiscreteFanSpeedsHeating">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FenestrationSystems">
      <sch:assert test="count(auc:FenestrationSystem) &gt;= 0">element "auc:FenestrationSystem" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FenestrationSystems/auc:FenestrationSystem">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FenestrationFrameMaterial) &gt;= 0">element "auc:FenestrationFrameMaterial" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FenestrationGasFill) &gt;= 0">element "auc:FenestrationGasFill" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FenestrationGlassLayers) &gt;= 0">element "auc:FenestrationGlassLayers" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FenestrationOperation) &gt;= 0">element "auc:FenestrationOperation" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FenestrationRValue) &gt;= 0">element "auc:FenestrationRValue" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FenestrationType) &gt;= 0">element "auc:FenestrationType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FenestrationUFactor) &gt;= 0">element "auc:FenestrationUFactor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:GlassType) &gt;= 0">element "auc:GlassType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SolarHeatGainCoefficient) &gt;= 0">element "auc:SolarHeatGainCoefficient" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TightnessFitCondition) &gt;= 0">element "auc:TightnessFitCondition" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:VisibleTransmittance) &gt;= 0">element "auc:VisibleTransmittance" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Weatherstripped) &gt;= 0">element "auc:Weatherstripped" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FenestrationSystems/auc:FenestrationSystem/auc:FenestrationRValue">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FenestrationSystems/auc:FenestrationSystem/auc:FenestrationType">
      <sch:assert test="count(auc:Door) &gt;= 0">element "auc:Door" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Other) &gt;= 0">element "auc:Other" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Skylight) &gt;= 0">element "auc:Skylight" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Window) &gt;= 0">element "auc:Window" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FenestrationSystems/auc:FenestrationSystem/auc:FenestrationType/auc:Door">
      <sch:assert test="count(auc:DoorGlazedAreaFraction) &gt;= 0">element "auc:DoorGlazedAreaFraction" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DoorOperation) &gt;= 0">element "auc:DoorOperation" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ExteriorDoorType) &gt;= 0">element "auc:ExteriorDoorType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Vestibule) &gt;= 0">element "auc:Vestibule" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FenestrationSystems/auc:FenestrationSystem/auc:FenestrationType/auc:Door/auc:DoorGlazedAreaFraction">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FenestrationSystems/auc:FenestrationSystem/auc:FenestrationType/auc:Skylight">
      <sch:assert test="count(auc:AssemblyType) &gt;= 0">element "auc:AssemblyType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SkylightLayout) &gt;= 0">element "auc:SkylightLayout" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SkylightPitch) &gt;= 0">element "auc:SkylightPitch" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SkylightSolarTube) &gt;= 0">element "auc:SkylightSolarTube" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SkylightWindowTreatments) &gt;= 0">element "auc:SkylightWindowTreatments" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FenestrationSystems/auc:FenestrationSystem/auc:FenestrationType/auc:Skylight/auc:SkylightPitch">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FenestrationSystems/auc:FenestrationSystem/auc:FenestrationType/auc:Window">
      <sch:assert test="count(auc:AssemblyType) &gt;= 0">element "auc:AssemblyType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DistanceBetweenVerticalFins) &gt;= 0">element "auc:DistanceBetweenVerticalFins" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ExteriorShadingType) &gt;= 0">element "auc:ExteriorShadingType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:InteriorShadingType) &gt;= 0">element "auc:InteriorShadingType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:LightShelves) &gt;= 0">element "auc:LightShelves" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OverhangHeightAboveWindow) &gt;= 0">element "auc:OverhangHeightAboveWindow" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OverhangProjection) &gt;= 0">element "auc:OverhangProjection" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:VerticalEdgeFinOnly) &gt;= 0">element "auc:VerticalEdgeFinOnly" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:VerticalFinDepth) &gt;= 0">element "auc:VerticalFinDepth" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WindowHeight) &gt;= 0">element "auc:WindowHeight" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WindowHorizontalSpacing) &gt;= 0">element "auc:WindowHorizontalSpacing" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WindowLayout) &gt;= 0">element "auc:WindowLayout" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WindowOrientation) &gt;= 0">element "auc:WindowOrientation" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WindowSillHeight) &gt;= 0">element "auc:WindowSillHeight" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WindowWidth) &gt;= 0">element "auc:WindowWidth" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FenestrationSystems/auc:FenestrationSystem/auc:FenestrationType/auc:Window/auc:DistanceBetweenVerticalFins">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FenestrationSystems/auc:FenestrationSystem/auc:FenestrationType/auc:Window/auc:LightShelves">
      <sch:assert test="count(auc:LightShelfDistanceFromTop) &gt;= 0">element "auc:LightShelfDistanceFromTop" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:LightShelfExteriorProtrusion) &gt;= 0">element "auc:LightShelfExteriorProtrusion" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:LightShelfInteriorProtrusion) &gt;= 0">element "auc:LightShelfInteriorProtrusion" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FenestrationSystems/auc:FenestrationSystem/auc:FenestrationType/auc:Window/auc:LightShelves/auc:LightShelfDistanceFromTop">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FenestrationSystems/auc:FenestrationSystem/auc:FenestrationType/auc:Window/auc:LightShelves/auc:LightShelfExteriorProtrusion">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FenestrationSystems/auc:FenestrationSystem/auc:FenestrationType/auc:Window/auc:LightShelves/auc:LightShelfInteriorProtrusion">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FenestrationSystems/auc:FenestrationSystem/auc:FenestrationType/auc:Window/auc:OverhangHeightAboveWindow">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FenestrationSystems/auc:FenestrationSystem/auc:FenestrationType/auc:Window/auc:OverhangProjection">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FenestrationSystems/auc:FenestrationSystem/auc:FenestrationType/auc:Window/auc:VerticalFinDepth">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FenestrationSystems/auc:FenestrationSystem/auc:FenestrationType/auc:Window/auc:WindowHeight">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FenestrationSystems/auc:FenestrationSystem/auc:FenestrationType/auc:Window/auc:WindowHorizontalSpacing">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FenestrationSystems/auc:FenestrationSystem/auc:FenestrationType/auc:Window/auc:WindowSillHeight">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FenestrationSystems/auc:FenestrationSystem/auc:FenestrationType/auc:Window/auc:WindowWidth">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FenestrationSystems/auc:FenestrationSystem/auc:FenestrationUFactor">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FenestrationSystems/auc:FenestrationSystem/auc:SolarHeatGainCoefficient">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FenestrationSystems/auc:FenestrationSystem/auc:VisibleTransmittance">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems">
      <sch:assert test="count(auc:FoundationSystem) &gt;= 0">element "auc:FoundationSystem" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FloorConstructionType) &gt;= 0">element "auc:FloorConstructionType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FloorCovering) &gt;= 0">element "auc:FloorCovering" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:GroundCouplings) &gt;= 0">element "auc:GroundCouplings" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PlumbingPenetrationSealing) &gt;= 0">element "auc:PlumbingPenetrationSealing" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings">
      <sch:assert test="count(auc:GroundCoupling) &gt;= 0">element "auc:GroundCoupling" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling">
      <sch:assert test="count(auc:Basement) &gt;= 0">element "auc:Basement" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Crawlspace) &gt;= 0">element "auc:Crawlspace" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Other) &gt;= 0">element "auc:Other" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SlabOnGrade) &gt;= 0">element "auc:SlabOnGrade" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Unknown) &gt;= 0">element "auc:Unknown" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:Basement">
      <sch:assert test="count(auc:BasementConditioning) &gt;= 0">element "auc:BasementConditioning" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FoundationHeightAboveGrade) &gt;= 0">element "auc:FoundationHeightAboveGrade" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FoundationWallConstruction) &gt;= 0">element "auc:FoundationWallConstruction" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FoundationWallInsulationCondition) &gt;= 0">element "auc:FoundationWallInsulationCondition" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FoundationWallInsulationThickness) &gt;= 0">element "auc:FoundationWallInsulationThickness" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FoundationWallRValue) &gt;= 0">element "auc:FoundationWallRValue" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FoundationWallUFactor) &gt;= 0">element "auc:FoundationWallUFactor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SlabArea) &gt;= 0">element "auc:SlabArea" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SlabExposedPerimeter) &gt;= 0">element "auc:SlabExposedPerimeter" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SlabInsulationCondition) &gt;= 0">element "auc:SlabInsulationCondition" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SlabInsulationThickness) &gt;= 0">element "auc:SlabInsulationThickness" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SlabPerimeter) &gt;= 0">element "auc:SlabPerimeter" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:Basement/auc:FoundationHeightAboveGrade">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:Basement/auc:FoundationWallInsulationThickness">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:Basement/auc:FoundationWallRValue">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:Basement/auc:FoundationWallUFactor">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:Basement/auc:SlabArea">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:Basement/auc:SlabExposedPerimeter">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:Basement/auc:SlabInsulationThickness">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:Basement/auc:SlabPerimeter">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:Crawlspace">
      <sch:assert test="count(auc:CrawlspaceVenting) &gt;= 0">element "auc:CrawlspaceVenting" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:Crawlspace/auc:CrawlspaceVenting">
      <sch:assert test="count(auc:Other) &gt;= 0">element "auc:Other" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Unknown) &gt;= 0">element "auc:Unknown" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Unventilated) &gt;= 0">element "auc:Unventilated" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Ventilated) &gt;= 0">element "auc:Ventilated" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:Crawlspace/auc:CrawlspaceVenting/auc:Unventilated">
      <sch:assert test="count(auc:FoundationHeightAboveGrade) &gt;= 0">element "auc:FoundationHeightAboveGrade" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FoundationWallConstruction) &gt;= 0">element "auc:FoundationWallConstruction" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FoundationWallInsulationCondition) &gt;= 0">element "auc:FoundationWallInsulationCondition" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FoundationWallInsulationThickness) &gt;= 0">element "auc:FoundationWallInsulationThickness" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FoundationWallRValue) &gt;= 0">element "auc:FoundationWallRValue" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FoundationWallUFactor) &gt;= 0">element "auc:FoundationWallUFactor" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:Crawlspace/auc:CrawlspaceVenting/auc:Unventilated/auc:FoundationHeightAboveGrade">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:Crawlspace/auc:CrawlspaceVenting/auc:Unventilated/auc:FoundationWallInsulationThickness">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:Crawlspace/auc:CrawlspaceVenting/auc:Unventilated/auc:FoundationWallRValue">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:Crawlspace/auc:CrawlspaceVenting/auc:Unventilated/auc:FoundationWallUFactor">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:Crawlspace/auc:CrawlspaceVenting/auc:Ventilated">
      <sch:assert test="count(auc:FloorFramingDepth) &gt;= 0">element "auc:FloorFramingDepth" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FloorFramingFactor) &gt;= 0">element "auc:FloorFramingFactor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FloorFramingSpacing) &gt;= 0">element "auc:FloorFramingSpacing" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FloorInsulationCondition) &gt;= 0">element "auc:FloorInsulationCondition" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FloorInsulationThickness) &gt;= 0">element "auc:FloorInsulationThickness" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FloorRValue) &gt;= 0">element "auc:FloorRValue" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FloorUFactor) &gt;= 0">element "auc:FloorUFactor" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:Crawlspace/auc:CrawlspaceVenting/auc:Ventilated/auc:FloorFramingDepth">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:Crawlspace/auc:CrawlspaceVenting/auc:Ventilated/auc:FloorFramingFactor">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:Crawlspace/auc:CrawlspaceVenting/auc:Ventilated/auc:FloorFramingSpacing">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:Crawlspace/auc:CrawlspaceVenting/auc:Ventilated/auc:FloorInsulationThickness">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:Crawlspace/auc:CrawlspaceVenting/auc:Ventilated/auc:FloorRValue">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:Crawlspace/auc:CrawlspaceVenting/auc:Ventilated/auc:FloorUFactor">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:SlabOnGrade">
      <sch:assert test="count(auc:SlabArea) &gt;= 0">element "auc:SlabArea" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SlabExposedPerimeter) &gt;= 0">element "auc:SlabExposedPerimeter" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SlabInsulationCondition) &gt;= 0">element "auc:SlabInsulationCondition" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SlabInsulationThickness) &gt;= 0">element "auc:SlabInsulationThickness" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SlabPerimeter) &gt;= 0">element "auc:SlabPerimeter" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SlabRValue) &gt;= 0">element "auc:SlabRValue" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SlabUFactor) &gt;= 0">element "auc:SlabUFactor" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:SlabOnGrade/auc:SlabArea">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:SlabOnGrade/auc:SlabExposedPerimeter">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:SlabOnGrade/auc:SlabInsulationThickness">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:SlabOnGrade/auc:SlabPerimeter">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:SlabOnGrade/auc:SlabRValue">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:FoundationSystems/auc:FoundationSystem/auc:GroundCouplings/auc:GroundCoupling/auc:SlabOnGrade/auc:SlabUFactor">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems">
      <sch:assert test="count(auc:HVACSystem) &gt;= 0">element "auc:HVACSystem" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DuctSystems) &gt;= 0">element "auc:DuctSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FrequencyOfMaintenance) &gt;= 0">element "auc:FrequencyOfMaintenance" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HVACControlSystemTypes) &gt;= 0">element "auc:HVACControlSystemTypes" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HeatingAndCoolingSystems) &gt;= 0">element "auc:HeatingAndCoolingSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherHVACSystems) &gt;= 0">element "auc:OtherHVACSystems" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Plants) &gt;= 0">element "auc:Plants" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PrimaryHVACSystemType) &gt;= 0">element "auc:PrimaryHVACSystemType" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:DuctSystems">
      <sch:assert test="count(auc:DuctSystem) &gt;= 0">element "auc:DuctSystem" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:DuctSystems/auc:DuctSystem">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CoolingDeliveryID) &gt;= 0">element "auc:CoolingDeliveryID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DuctConfiguration) &gt;= 0">element "auc:DuctConfiguration" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DuctInsulationCondition) &gt;= 0">element "auc:DuctInsulationCondition" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DuctInsulationRValue) &gt;= 0">element "auc:DuctInsulationRValue" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DuctLeakageTestMethod) &gt;= 0">element "auc:DuctLeakageTestMethod" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DuctPressureTestLeakagePercentage) &gt;= 0">element "auc:DuctPressureTestLeakagePercentage" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DuctPressureTestLeakageRate) &gt;= 0">element "auc:DuctPressureTestLeakageRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DuctSealing) &gt;= 0">element "auc:DuctSealing" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DuctSurfaceArea) &gt;= 0">element "auc:DuctSurfaceArea" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DuctType) &gt;= 0">element "auc:DuctType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HeatingDeliveryID) &gt;= 0">element "auc:HeatingDeliveryID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MaximumOAFlowRate) &gt;= 0">element "auc:MaximumOAFlowRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MinimumOutsideAirPercentage) &gt;= 0">element "auc:MinimumOutsideAirPercentage" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ReturnDuctPercentConditionedSpace) &gt;= 0">element "auc:ReturnDuctPercentConditionedSpace" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:StaticPressureInstalled) &gt;= 0">element "auc:StaticPressureInstalled" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SupplyDuctPercentConditionedSpace) &gt;= 0">element "auc:SupplyDuctPercentConditionedSpace" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SupplyFractionOfDuctLeakage) &gt;= 0">element "auc:SupplyFractionOfDuctLeakage" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:DuctSystems/auc:DuctSystem/auc:CoolingDeliveryID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:DuctSystems/auc:DuctSystem/auc:DuctInsulationRValue">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:DuctSystems/auc:DuctSystem/auc:DuctPressureTestLeakagePercentage">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:DuctSystems/auc:DuctSystem/auc:DuctPressureTestLeakageRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:DuctSystems/auc:DuctSystem/auc:DuctSurfaceArea">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:DuctSystems/auc:DuctSystem/auc:HeatingDeliveryID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:DuctSystems/auc:DuctSystem/auc:MaximumOAFlowRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:DuctSystems/auc:DuctSystem/auc:MinimumOutsideAirPercentage">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:DuctSystems/auc:DuctSystem/auc:ReturnDuctPercentConditionedSpace">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:DuctSystems/auc:DuctSystem/auc:StaticPressureInstalled">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:DuctSystems/auc:DuctSystem/auc:SupplyDuctPercentConditionedSpace">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:DuctSystems/auc:DuctSystem/auc:SupplyFractionOfDuctLeakage">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HVACControlSystemTypes">
      <sch:assert test="count(auc:HVACControlSystemType) &gt;= 0">element "auc:HVACControlSystemType" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems">
      <sch:assert test="count(auc:CoolingSources) &gt;= 0">element "auc:CoolingSources" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Deliveries) &gt;= 0">element "auc:Deliveries" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HeatingSources) &gt;= 0">element "auc:HeatingSources" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ZoningSystemType) &gt;= 0">element "auc:ZoningSystemType" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:CoolingSources">
      <sch:assert test="count(auc:CoolingSource) &gt;= 0">element "auc:CoolingSource" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:CoolingSources/auc:CoolingSource">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualCoolingEfficiencyValue) &gt;= 0">element "auc:AnnualCoolingEfficiencyValue" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Controls) &gt;= 0">element "auc:Controls" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CoolingMedium) &gt;= 0">element "auc:CoolingMedium" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CoolingSourceCondition) &gt;= 0">element "auc:CoolingSourceCondition" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CoolingSourceType) &gt;= 0">element "auc:CoolingSourceType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CoolingStageCapacity) &gt;= 0">element "auc:CoolingStageCapacity" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MinimumPartLoadRatio) &gt;= 0">element "auc:MinimumPartLoadRatio" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:NumberOfDiscreteCoolingStages) &gt;= 0">element "auc:NumberOfDiscreteCoolingStages" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RatedCoolingSensibleHeatRatio) &gt;= 0">element "auc:RatedCoolingSensibleHeatRatio" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:CoolingSources/auc:CoolingSource/auc:AnnualCoolingEfficiencyValue">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:CoolingSources/auc:CoolingSource/auc:Controls">
      <sch:assert test="count(auc:Control) &gt;= 0">element "auc:Control" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:CoolingSources/auc:CoolingSource/auc:Controls/auc:Control">
      <sch:assert test="count(auc:AdvancedPowerStrip) &gt;= 0">element "auc:AdvancedPowerStrip" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Manual) &gt;= 0">element "auc:Manual" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Occupancy) &gt;= 0">element "auc:Occupancy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnology) &gt;= 0">element "auc:OtherControlTechnology" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Thermostat) &gt;= 0">element "auc:Thermostat" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Timer) &gt;= 0">element "auc:Timer" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:CoolingSources/auc:CoolingSource/auc:Controls/auc:Control/auc:AdvancedPowerStrip">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:CoolingSources/auc:CoolingSource/auc:Controls/auc:Control/auc:Manual">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:CoolingSources/auc:CoolingSource/auc:Controls/auc:Control/auc:Occupancy">
      <sch:assert test="count(auc:ControlSensor) &gt;= 0">element "auc:ControlSensor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:CoolingSources/auc:CoolingSource/auc:Controls/auc:Control/auc:OtherControlTechnology">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnologyName) &gt;= 0">element "auc:OtherControlTechnologyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:CoolingSources/auc:CoolingSource/auc:Controls/auc:Control/auc:Thermostat">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:CoolingSources/auc:CoolingSource/auc:Controls/auc:Control/auc:Timer">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:CoolingSources/auc:CoolingSource/auc:CoolingSourceType">
      <sch:assert test="count(auc:CoolingPlantID) &gt;= 0">element "auc:CoolingPlantID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DX) &gt;= 0">element "auc:DX" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EvaporativeCooler) &gt;= 0">element "auc:EvaporativeCooler" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:NoCooling) &gt;= 0">element "auc:NoCooling" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherCombination) &gt;= 0">element "auc:OtherCombination" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Unknown) &gt;= 0">element "auc:Unknown" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:CoolingSources/auc:CoolingSource/auc:CoolingSourceType/auc:CoolingPlantID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:CoolingSources/auc:CoolingSource/auc:CoolingSourceType/auc:DX">
      <sch:assert test="count(auc:ActiveDehumidification) &gt;= 0">element "auc:ActiveDehumidification" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CompressorType) &gt;= 0">element "auc:CompressorType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CondenserPlantIDs) &gt;= 0">element "auc:CondenserPlantIDs" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DXSystemType) &gt;= 0">element "auc:DXSystemType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RefrigerantChargeFactor) &gt;= 0">element "auc:RefrigerantChargeFactor" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:CoolingSources/auc:CoolingSource/auc:CoolingSourceType/auc:DX/auc:CondenserPlantIDs">
      <sch:assert test="count(auc:CondenserPlantID) &gt;= 0">element "auc:CondenserPlantID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:CoolingSources/auc:CoolingSource/auc:CoolingSourceType/auc:DX/auc:CondenserPlantIDs/auc:CondenserPlantID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:CoolingSources/auc:CoolingSource/auc:CoolingSourceType/auc:DX/auc:RefrigerantChargeFactor">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:CoolingSources/auc:CoolingSource/auc:CoolingSourceType/auc:EvaporativeCooler">
      <sch:assert test="count(auc:EvaporativeCoolingType) &gt;= 0">element "auc:EvaporativeCoolingType" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:CoolingSources/auc:CoolingSource/auc:CoolingStageCapacity">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:CoolingSources/auc:CoolingSource/auc:MinimumPartLoadRatio">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:CoolingSources/auc:CoolingSource/auc:NumberOfDiscreteCoolingStages">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:CoolingSources/auc:CoolingSource/auc:RatedCoolingSensibleHeatRatio">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries">
      <sch:assert test="count(auc:Delivery) &gt;= 0">element "auc:Delivery" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Controls) &gt;= 0">element "auc:Controls" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CoolingSourceID) &gt;= 0">element "auc:CoolingSourceID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DeliveryType) &gt;= 0">element "auc:DeliveryType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HeatingSourceID) &gt;= 0">element "auc:HeatingSourceID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:Controls">
      <sch:assert test="count(auc:Control) &gt;= 0">element "auc:Control" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:Controls/auc:Control">
      <sch:assert test="count(auc:AdvancedPowerStrip) &gt;= 0">element "auc:AdvancedPowerStrip" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Manual) &gt;= 0">element "auc:Manual" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Occupancy) &gt;= 0">element "auc:Occupancy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnology) &gt;= 0">element "auc:OtherControlTechnology" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Thermostat) &gt;= 0">element "auc:Thermostat" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Timer) &gt;= 0">element "auc:Timer" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:Controls/auc:Control/auc:AdvancedPowerStrip">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:Controls/auc:Control/auc:Manual">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:Controls/auc:Control/auc:Occupancy">
      <sch:assert test="count(auc:ControlSensor) &gt;= 0">element "auc:ControlSensor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:Controls/auc:Control/auc:OtherControlTechnology">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnologyName) &gt;= 0">element "auc:OtherControlTechnologyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:Controls/auc:Control/auc:Thermostat">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:Controls/auc:Control/auc:Timer">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:CoolingSourceID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType">
      <sch:assert test="count(auc:CentralAirDistribution) &gt;= 0">element "auc:CentralAirDistribution" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Other) &gt;= 0">element "auc:Other" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ZoneEquipment) &gt;= 0">element "auc:ZoneEquipment" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:CentralAirDistribution">
      <sch:assert test="count(auc:AirDeliveryType) &gt;= 0">element "auc:AirDeliveryType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FanBased) &gt;= 0">element "auc:FanBased" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ReheatControlMethod) &gt;= 0">element "auc:ReheatControlMethod" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ReheatPlantID) &gt;= 0">element "auc:ReheatPlantID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ReheatSource) &gt;= 0">element "auc:ReheatSource" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TerminalUnit) &gt;= 0">element "auc:TerminalUnit" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:CentralAirDistribution/auc:FanBased">
      <sch:assert test="count(auc:AirSideEconomizer) &gt;= 0">element "auc:AirSideEconomizer" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CoolingSupplyAirTemperature) &gt;= 0">element "auc:CoolingSupplyAirTemperature" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CoolingSupplyAirTemperatureControlType) &gt;= 0">element "auc:CoolingSupplyAirTemperatureControlType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FanBasedDistributionType) &gt;= 0">element "auc:FanBasedDistributionType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HeatingSupplyAirTemperature) &gt;= 0">element "auc:HeatingSupplyAirTemperature" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HeatingSupplyAirTemperatureControl) &gt;= 0">element "auc:HeatingSupplyAirTemperatureControl" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OutsideAirResetMaximumCoolingSupplyTemperature) &gt;= 0">element "auc:OutsideAirResetMaximumCoolingSupplyTemperature" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OutsideAirResetMaximumHeatingSupplyTemperature) &gt;= 0">element "auc:OutsideAirResetMaximumHeatingSupplyTemperature" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OutsideAirResetMinimumCoolingSupplyTemperature) &gt;= 0">element "auc:OutsideAirResetMinimumCoolingSupplyTemperature" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OutsideAirResetMinimumHeatingSupplyTemperature) &gt;= 0">element "auc:OutsideAirResetMinimumHeatingSupplyTemperature" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OutsideAirTemperatureLowerLimitCoolingResetControl) &gt;= 0">element "auc:OutsideAirTemperatureLowerLimitCoolingResetControl" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OutsideAirTemperatureLowerLimitHeatingResetControl) &gt;= 0">element "auc:OutsideAirTemperatureLowerLimitHeatingResetControl" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OutsideAirTemperatureUpperLimitCoolingResetControl) &gt;= 0">element "auc:OutsideAirTemperatureUpperLimitCoolingResetControl" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OutsideAirTemperatureUpperLimitHeatingResetControl) &gt;= 0">element "auc:OutsideAirTemperatureUpperLimitHeatingResetControl" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:StaticPressureResetControl) &gt;= 0">element "auc:StaticPressureResetControl" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SupplyAirTemperatureResetControl) &gt;= 0">element "auc:SupplyAirTemperatureResetControl" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:CentralAirDistribution/auc:FanBased/auc:AirSideEconomizer">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AirSideEconomizerType) &gt;= 0">element "auc:AirSideEconomizerType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EconomizerControl) &gt;= 0">element "auc:EconomizerControl" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EconomizerDryBulbControlPoint) &gt;= 0">element "auc:EconomizerDryBulbControlPoint" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EconomizerEnthalpyControlPoint) &gt;= 0">element "auc:EconomizerEnthalpyControlPoint" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EconomizerLowTemperatureLockout) &gt;= 0">element "auc:EconomizerLowTemperatureLockout" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:CentralAirDistribution/auc:FanBased/auc:AirSideEconomizer/auc:EconomizerDryBulbControlPoint">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:CentralAirDistribution/auc:FanBased/auc:AirSideEconomizer/auc:EconomizerEnthalpyControlPoint">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:CentralAirDistribution/auc:FanBased/auc:AirSideEconomizer/auc:EconomizerLowTemperatureLockout">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:CentralAirDistribution/auc:FanBased/auc:CoolingSupplyAirTemperature">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:CentralAirDistribution/auc:FanBased/auc:FanBasedDistributionType">
      <sch:assert test="count(auc:FanCoil) &gt;= 0">element "auc:FanCoil" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:CentralAirDistribution/auc:FanBased/auc:FanBasedDistributionType/auc:FanCoil">
      <sch:assert test="count(auc:FanCoilType) &gt;= 0">element "auc:FanCoilType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HVACPipeConfiguration) &gt;= 0">element "auc:HVACPipeConfiguration" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PipeInsulationThickness) &gt;= 0">element "auc:PipeInsulationThickness" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PipeLocation) &gt;= 0">element "auc:PipeLocation" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:CentralAirDistribution/auc:FanBased/auc:FanBasedDistributionType/auc:FanCoil/auc:PipeInsulationThickness">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:CentralAirDistribution/auc:FanBased/auc:FanBasedDistributionType/auc:FanCoil/auc:PipeLocation">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:CentralAirDistribution/auc:FanBased/auc:HeatingSupplyAirTemperature">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:CentralAirDistribution/auc:FanBased/auc:OutsideAirResetMaximumCoolingSupplyTemperature">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:CentralAirDistribution/auc:FanBased/auc:OutsideAirResetMaximumHeatingSupplyTemperature">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:CentralAirDistribution/auc:FanBased/auc:OutsideAirResetMinimumCoolingSupplyTemperature">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:CentralAirDistribution/auc:FanBased/auc:OutsideAirResetMinimumHeatingSupplyTemperature">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:CentralAirDistribution/auc:FanBased/auc:OutsideAirTemperatureLowerLimitCoolingResetControl">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:CentralAirDistribution/auc:FanBased/auc:OutsideAirTemperatureLowerLimitHeatingResetControl">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:CentralAirDistribution/auc:FanBased/auc:OutsideAirTemperatureUpperLimitCoolingResetControl">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:CentralAirDistribution/auc:FanBased/auc:OutsideAirTemperatureUpperLimitHeatingResetControl">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:CentralAirDistribution/auc:ReheatPlantID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:ZoneEquipment">
      <sch:assert test="count(auc:Convection) &gt;= 0">element "auc:Convection" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FanBased) &gt;= 0">element "auc:FanBased" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Other) &gt;= 0">element "auc:Other" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Radiant) &gt;= 0">element "auc:Radiant" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:ZoneEquipment/auc:Convection">
      <sch:assert test="count(auc:ConvectionType) &gt;= 0">element "auc:ConvectionType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PipeInsulationThickness) &gt;= 0">element "auc:PipeInsulationThickness" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PipeLocation) &gt;= 0">element "auc:PipeLocation" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:ZoneEquipment/auc:Convection/auc:PipeInsulationThickness">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:ZoneEquipment/auc:Convection/auc:PipeLocation">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:ZoneEquipment/auc:FanBased">
      <sch:assert test="count(auc:AirSideEconomizer) &gt;= 0">element "auc:AirSideEconomizer" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CoolingSupplyAirTemperature) &gt;= 0">element "auc:CoolingSupplyAirTemperature" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CoolingSupplyAirTemperatureControlType) &gt;= 0">element "auc:CoolingSupplyAirTemperatureControlType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FanBasedDistributionType) &gt;= 0">element "auc:FanBasedDistributionType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HeatingSupplyAirTemperature) &gt;= 0">element "auc:HeatingSupplyAirTemperature" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HeatingSupplyAirTemperatureControl) &gt;= 0">element "auc:HeatingSupplyAirTemperatureControl" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OutsideAirResetMaximumCoolingSupplyTemperature) &gt;= 0">element "auc:OutsideAirResetMaximumCoolingSupplyTemperature" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OutsideAirResetMaximumHeatingSupplyTemperature) &gt;= 0">element "auc:OutsideAirResetMaximumHeatingSupplyTemperature" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OutsideAirResetMinimumCoolingSupplyTemperature) &gt;= 0">element "auc:OutsideAirResetMinimumCoolingSupplyTemperature" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OutsideAirResetMinimumHeatingSupplyTemperature) &gt;= 0">element "auc:OutsideAirResetMinimumHeatingSupplyTemperature" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OutsideAirTemperatureLowerLimitCoolingResetControl) &gt;= 0">element "auc:OutsideAirTemperatureLowerLimitCoolingResetControl" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OutsideAirTemperatureLowerLimitHeatingResetControl) &gt;= 0">element "auc:OutsideAirTemperatureLowerLimitHeatingResetControl" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OutsideAirTemperatureUpperLimitCoolingResetControl) &gt;= 0">element "auc:OutsideAirTemperatureUpperLimitCoolingResetControl" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OutsideAirTemperatureUpperLimitHeatingResetControl) &gt;= 0">element "auc:OutsideAirTemperatureUpperLimitHeatingResetControl" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:StaticPressureResetControl) &gt;= 0">element "auc:StaticPressureResetControl" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SupplyAirTemperatureResetControl) &gt;= 0">element "auc:SupplyAirTemperatureResetControl" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:ZoneEquipment/auc:FanBased/auc:AirSideEconomizer">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AirSideEconomizerType) &gt;= 0">element "auc:AirSideEconomizerType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EconomizerControl) &gt;= 0">element "auc:EconomizerControl" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EconomizerDryBulbControlPoint) &gt;= 0">element "auc:EconomizerDryBulbControlPoint" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EconomizerEnthalpyControlPoint) &gt;= 0">element "auc:EconomizerEnthalpyControlPoint" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EconomizerLowTemperatureLockout) &gt;= 0">element "auc:EconomizerLowTemperatureLockout" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:ZoneEquipment/auc:FanBased/auc:AirSideEconomizer/auc:EconomizerDryBulbControlPoint">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:ZoneEquipment/auc:FanBased/auc:AirSideEconomizer/auc:EconomizerEnthalpyControlPoint">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:ZoneEquipment/auc:FanBased/auc:AirSideEconomizer/auc:EconomizerLowTemperatureLockout">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:ZoneEquipment/auc:FanBased/auc:CoolingSupplyAirTemperature">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:ZoneEquipment/auc:FanBased/auc:FanBasedDistributionType">
      <sch:assert test="count(auc:FanCoil) &gt;= 0">element "auc:FanCoil" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:ZoneEquipment/auc:FanBased/auc:FanBasedDistributionType/auc:FanCoil">
      <sch:assert test="count(auc:FanCoilType) &gt;= 0">element "auc:FanCoilType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HVACPipeConfiguration) &gt;= 0">element "auc:HVACPipeConfiguration" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PipeInsulationThickness) &gt;= 0">element "auc:PipeInsulationThickness" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PipeLocation) &gt;= 0">element "auc:PipeLocation" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:ZoneEquipment/auc:FanBased/auc:FanBasedDistributionType/auc:FanCoil/auc:PipeInsulationThickness">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:ZoneEquipment/auc:FanBased/auc:FanBasedDistributionType/auc:FanCoil/auc:PipeLocation">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:ZoneEquipment/auc:FanBased/auc:HeatingSupplyAirTemperature">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:ZoneEquipment/auc:FanBased/auc:OutsideAirResetMaximumCoolingSupplyTemperature">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:ZoneEquipment/auc:FanBased/auc:OutsideAirResetMaximumHeatingSupplyTemperature">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:ZoneEquipment/auc:FanBased/auc:OutsideAirResetMinimumCoolingSupplyTemperature">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:ZoneEquipment/auc:FanBased/auc:OutsideAirResetMinimumHeatingSupplyTemperature">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:ZoneEquipment/auc:FanBased/auc:OutsideAirTemperatureLowerLimitCoolingResetControl">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:ZoneEquipment/auc:FanBased/auc:OutsideAirTemperatureLowerLimitHeatingResetControl">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:ZoneEquipment/auc:FanBased/auc:OutsideAirTemperatureUpperLimitCoolingResetControl">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:ZoneEquipment/auc:FanBased/auc:OutsideAirTemperatureUpperLimitHeatingResetControl">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:ZoneEquipment/auc:Radiant">
      <sch:assert test="count(auc:PipeInsulationThickness) &gt;= 0">element "auc:PipeInsulationThickness" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PipeLocation) &gt;= 0">element "auc:PipeLocation" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RadiantType) &gt;= 0">element "auc:RadiantType" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:ZoneEquipment/auc:Radiant/auc:PipeInsulationThickness">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:DeliveryType/auc:ZoneEquipment/auc:Radiant/auc:PipeLocation">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:Deliveries/auc:Delivery/auc:HeatingSourceID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:HeatingSources">
      <sch:assert test="count(auc:HeatingSource) &gt;= 0">element "auc:HeatingSource" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:HeatingSources/auc:HeatingSource">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AnnualHeatingEfficiencyValue) &gt;= 0">element "auc:AnnualHeatingEfficiencyValue" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Controls) &gt;= 0">element "auc:Controls" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HeatingMedium) &gt;= 0">element "auc:HeatingMedium" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HeatingSourceCondition) &gt;= 0">element "auc:HeatingSourceCondition" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HeatingSourceType) &gt;= 0">element "auc:HeatingSourceType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HeatingStageCapacityFraction) &gt;= 0">element "auc:HeatingStageCapacityFraction" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:InputCapacity) &gt;= 0">element "auc:InputCapacity" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:NumberOfHeatingStages) &gt;= 0">element "auc:NumberOfHeatingStages" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OutputCapacity) &gt;= 0">element "auc:OutputCapacity" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:HeatingSources/auc:HeatingSource/auc:AnnualHeatingEfficiencyValue">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:HeatingSources/auc:HeatingSource/auc:Controls">
      <sch:assert test="count(auc:Control) &gt;= 0">element "auc:Control" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:HeatingSources/auc:HeatingSource/auc:Controls/auc:Control">
      <sch:assert test="count(auc:AdvancedPowerStrip) &gt;= 0">element "auc:AdvancedPowerStrip" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Manual) &gt;= 0">element "auc:Manual" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Occupancy) &gt;= 0">element "auc:Occupancy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnology) &gt;= 0">element "auc:OtherControlTechnology" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Thermostat) &gt;= 0">element "auc:Thermostat" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Timer) &gt;= 0">element "auc:Timer" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:HeatingSources/auc:HeatingSource/auc:Controls/auc:Control/auc:AdvancedPowerStrip">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:HeatingSources/auc:HeatingSource/auc:Controls/auc:Control/auc:Manual">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:HeatingSources/auc:HeatingSource/auc:Controls/auc:Control/auc:Occupancy">
      <sch:assert test="count(auc:ControlSensor) &gt;= 0">element "auc:ControlSensor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:HeatingSources/auc:HeatingSource/auc:Controls/auc:Control/auc:OtherControlTechnology">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnologyName) &gt;= 0">element "auc:OtherControlTechnologyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:HeatingSources/auc:HeatingSource/auc:Controls/auc:Control/auc:Thermostat">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:HeatingSources/auc:HeatingSource/auc:Controls/auc:Control/auc:Timer">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:HeatingSources/auc:HeatingSource/auc:HeatingSourceType">
      <sch:assert test="count(auc:ElectricResistance) &gt;= 0">element "auc:ElectricResistance" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Furnace) &gt;= 0">element "auc:Furnace" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HeatPump) &gt;= 0">element "auc:HeatPump" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:NoHeating) &gt;= 0">element "auc:NoHeating" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherCombination) &gt;= 0">element "auc:OtherCombination" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SourceHeatingPlantID) &gt;= 0">element "auc:SourceHeatingPlantID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Unknown) &gt;= 0">element "auc:Unknown" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:HeatingSources/auc:HeatingSource/auc:HeatingSourceType/auc:Furnace">
      <sch:assert test="count(auc:BurnerQuantity) &gt;= 0">element "auc:BurnerQuantity" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:BurnerTurndownRatio) &gt;= 0">element "auc:BurnerTurndownRatio" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CombustionEfficiency) &gt;= 0">element "auc:CombustionEfficiency" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FurnaceType) &gt;= 0">element "auc:FurnaceType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ThermalEfficiency) &gt;= 0">element "auc:ThermalEfficiency" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:HeatingSources/auc:HeatingSource/auc:HeatingSourceType/auc:Furnace/auc:BurnerQuantity">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:HeatingSources/auc:HeatingSource/auc:HeatingSourceType/auc:Furnace/auc:BurnerTurndownRatio">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:HeatingSources/auc:HeatingSource/auc:HeatingSourceType/auc:Furnace/auc:CombustionEfficiency">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:HeatingSources/auc:HeatingSource/auc:HeatingSourceType/auc:Furnace/auc:ThermalEfficiency">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:HeatingSources/auc:HeatingSource/auc:HeatingSourceType/auc:HeatPump">
      <sch:assert test="count(auc:CoolingSourceID) &gt;= 0">element "auc:CoolingSourceID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HeatPumpBackupAFUE) &gt;= 0">element "auc:HeatPumpBackupAFUE" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HeatPumpBackupHeatingSwitchoverTemperature) &gt;= 0">element "auc:HeatPumpBackupHeatingSwitchoverTemperature" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HeatPumpBackupSystemFuel) &gt;= 0">element "auc:HeatPumpBackupSystemFuel" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HeatPumpType) &gt;= 0">element "auc:HeatPumpType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:LinkedHeatingPlantID) &gt;= 0">element "auc:LinkedHeatingPlantID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:HeatingSources/auc:HeatingSource/auc:HeatingSourceType/auc:HeatPump/auc:CoolingSourceID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:HeatingSources/auc:HeatingSource/auc:HeatingSourceType/auc:HeatPump/auc:HeatPumpBackupAFUE">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:HeatingSources/auc:HeatingSource/auc:HeatingSourceType/auc:HeatPump/auc:HeatPumpBackupHeatingSwitchoverTemperature">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:HeatingSources/auc:HeatingSource/auc:HeatingSourceType/auc:HeatPump/auc:LinkedHeatingPlantID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:HeatingSources/auc:HeatingSource/auc:HeatingSourceType/auc:SourceHeatingPlantID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:HeatingSources/auc:HeatingSource/auc:HeatingStageCapacityFraction">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:HeatingSources/auc:HeatingSource/auc:InputCapacity">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:HeatingSources/auc:HeatingSource/auc:NumberOfHeatingStages">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:HeatingAndCoolingSystems/auc:HeatingSources/auc:HeatingSource/auc:OutputCapacity">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:OtherHVACSystems">
      <sch:assert test="count(auc:OtherHVACSystem) &gt;= 0">element "auc:OtherHVACSystem" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:OtherHVACSystems/auc:OtherHVACSystem">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Controls) &gt;= 0">element "auc:Controls" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Integration) &gt;= 0">element "auc:Integration" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:LinkedDeliveryIDs) &gt;= 0">element "auc:LinkedDeliveryIDs" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherHVACSystemCondition) &gt;= 0">element "auc:OtherHVACSystemCondition" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherHVACType) &gt;= 0">element "auc:OtherHVACType" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:OtherHVACSystems/auc:OtherHVACSystem/auc:Controls">
      <sch:assert test="count(auc:Control) &gt;= 0">element "auc:Control" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:OtherHVACSystems/auc:OtherHVACSystem/auc:Controls/auc:Control">
      <sch:assert test="count(auc:AdvancedPowerStrip) &gt;= 0">element "auc:AdvancedPowerStrip" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Manual) &gt;= 0">element "auc:Manual" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Occupancy) &gt;= 0">element "auc:Occupancy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnology) &gt;= 0">element "auc:OtherControlTechnology" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Thermostat) &gt;= 0">element "auc:Thermostat" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Timer) &gt;= 0">element "auc:Timer" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:OtherHVACSystems/auc:OtherHVACSystem/auc:Controls/auc:Control/auc:AdvancedPowerStrip">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:OtherHVACSystems/auc:OtherHVACSystem/auc:Controls/auc:Control/auc:Manual">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:OtherHVACSystems/auc:OtherHVACSystem/auc:Controls/auc:Control/auc:Occupancy">
      <sch:assert test="count(auc:ControlSensor) &gt;= 0">element "auc:ControlSensor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:OtherHVACSystems/auc:OtherHVACSystem/auc:Controls/auc:Control/auc:OtherControlTechnology">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnologyName) &gt;= 0">element "auc:OtherControlTechnologyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:OtherHVACSystems/auc:OtherHVACSystem/auc:Controls/auc:Control/auc:Thermostat">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:OtherHVACSystems/auc:OtherHVACSystem/auc:Controls/auc:Control/auc:Timer">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:OtherHVACSystems/auc:OtherHVACSystem/auc:LinkedDeliveryIDs">
      <sch:assert test="count(auc:LinkedDeliveryID) &gt;= 0">element "auc:LinkedDeliveryID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:OtherHVACSystems/auc:OtherHVACSystem/auc:LinkedDeliveryIDs/auc:LinkedDeliveryID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:OtherHVACSystems/auc:OtherHVACSystem/auc:OtherHVACType">
      <sch:assert test="count(auc:AirCleaner) &gt;= 0">element "auc:AirCleaner" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Dehumidifier) &gt;= 0">element "auc:Dehumidifier" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Humidifier) &gt;= 0">element "auc:Humidifier" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MechanicalVentilation) &gt;= 0">element "auc:MechanicalVentilation" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:NaturalVentilation) &gt;= 0">element "auc:NaturalVentilation" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherCombination) &gt;= 0">element "auc:OtherCombination" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SpotExhaust) &gt;= 0">element "auc:SpotExhaust" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Unknown) &gt;= 0">element "auc:Unknown" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:OtherHVACSystems/auc:OtherHVACSystem/auc:OtherHVACType/auc:Dehumidifier">
      <sch:assert test="count(auc:DehumidificationType) &gt;= 0">element "auc:DehumidificationType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HumidityControlMaximum) &gt;= 0">element "auc:HumidityControlMaximum" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:OtherHVACSystems/auc:OtherHVACSystem/auc:OtherHVACType/auc:Dehumidifier/auc:HumidityControlMaximum">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:OtherHVACSystems/auc:OtherHVACSystem/auc:OtherHVACType/auc:Humidifier">
      <sch:assert test="count(auc:HumidificationType) &gt;= 0">element "auc:HumidificationType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HumidityControlMinimum) &gt;= 0">element "auc:HumidityControlMinimum" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:OtherHVACSystems/auc:OtherHVACSystem/auc:OtherHVACType/auc:Humidifier/auc:HumidityControlMinimum">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:OtherHVACSystems/auc:OtherHVACSystem/auc:OtherHVACType/auc:MechanicalVentilation">
      <sch:assert test="count(auc:DemandControlVentilation) &gt;= 0">element "auc:DemandControlVentilation" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MakeupAirSourceID) &gt;= 0">element "auc:MakeupAirSourceID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RequiredVentilationRate) &gt;= 0">element "auc:RequiredVentilationRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:VentilationControlMethods) &gt;= 0">element "auc:VentilationControlMethods" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:VentilationRate) &gt;= 0">element "auc:VentilationRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:VentilationType) &gt;= 0">element "auc:VentilationType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:VentilationZoneControl) &gt;= 0">element "auc:VentilationZoneControl" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:OtherHVACSystems/auc:OtherHVACSystem/auc:OtherHVACType/auc:MechanicalVentilation/auc:MakeupAirSourceID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:OtherHVACSystems/auc:OtherHVACSystem/auc:OtherHVACType/auc:MechanicalVentilation/auc:RequiredVentilationRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:OtherHVACSystems/auc:OtherHVACSystem/auc:OtherHVACType/auc:MechanicalVentilation/auc:VentilationRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:OtherHVACSystems/auc:OtherHVACSystem/auc:OtherHVACType/auc:NaturalVentilation">
      <sch:assert test="count(auc:NaturalVentilationMethod) &gt;= 0">element "auc:NaturalVentilationMethod" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:NaturalVentilationRate) &gt;= 0">element "auc:NaturalVentilationRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:VentilationControlMethods) &gt;= 0">element "auc:VentilationControlMethods" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:OtherHVACSystems/auc:OtherHVACSystem/auc:OtherHVACType/auc:NaturalVentilation/auc:NaturalVentilationRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:OtherHVACSystems/auc:OtherHVACSystem/auc:OtherHVACType/auc:SpotExhaust">
      <sch:assert test="count(auc:ExhaustLocation) &gt;= 0">element "auc:ExhaustLocation" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MakeupAirSourceID) &gt;= 0">element "auc:MakeupAirSourceID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RequiredVentilationRate) &gt;= 0">element "auc:RequiredVentilationRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:VentilationControlMethods) &gt;= 0">element "auc:VentilationControlMethods" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:VentilationRate) &gt;= 0">element "auc:VentilationRate" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:OtherHVACSystems/auc:OtherHVACSystem/auc:OtherHVACType/auc:SpotExhaust/auc:MakeupAirSourceID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:OtherHVACSystems/auc:OtherHVACSystem/auc:OtherHVACType/auc:SpotExhaust/auc:RequiredVentilationRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:OtherHVACSystems/auc:OtherHVACSystem/auc:OtherHVACType/auc:SpotExhaust/auc:VentilationRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:Plants">
      <sch:assert test="count(auc:CondenserPlants) &gt;= 0">element "auc:CondenserPlants" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CoolingPlants) &gt;= 0">element "auc:CoolingPlants" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HeatingPlants) &gt;= 0">element "auc:HeatingPlants" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:Plants/auc:CondenserPlants">
      <sch:assert test="count(auc:CondenserPlant) &gt;= 0">element "auc:CondenserPlant" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:Plants/auc:CondenserPlants/auc:CondenserPlant">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CondenserPlantCondition) &gt;= 0">element "auc:CondenserPlantCondition" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ControlSystemTypes) &gt;= 0">element "auc:ControlSystemTypes" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PrimaryFuel) &gt;= 0">element "auc:PrimaryFuel" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:Plants/auc:CoolingPlants">
      <sch:assert test="count(auc:CoolingPlant) &gt;= 0">element "auc:CoolingPlant" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:Plants/auc:CoolingPlants/auc:CoolingPlant">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ControlSystemTypes) &gt;= 0">element "auc:ControlSystemTypes" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CoolingPlantCondition) &gt;= 0">element "auc:CoolingPlantCondition" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PrimaryFuel) &gt;= 0">element "auc:PrimaryFuel" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:Plants/auc:HeatingPlants">
      <sch:assert test="count(auc:HeatingPlant) &gt;= 0">element "auc:HeatingPlant" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HVACSystems/auc:HVACSystem/auc:Plants/auc:HeatingPlants/auc:HeatingPlant">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ControlSystemTypes) &gt;= 0">element "auc:ControlSystemTypes" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HeatingPlantCondition) &gt;= 0">element "auc:HeatingPlantCondition" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PrimaryFuel) &gt;= 0">element "auc:PrimaryFuel" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HeatRecoverySystems">
      <sch:assert test="count(auc:HeatRecoverySystem) &gt;= 0">element "auc:HeatRecoverySystem" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HeatRecoverySystems/auc:HeatRecoverySystem">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Controls) &gt;= 0">element "auc:Controls" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EnergyRecoveryEfficiency) &gt;= 0">element "auc:EnergyRecoveryEfficiency" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HeatRecoveryEfficiency) &gt;= 0">element "auc:HeatRecoveryEfficiency" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HeatRecoveryType) &gt;= 0">element "auc:HeatRecoveryType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SystemIDProvidingHeat) &gt;= 0">element "auc:SystemIDProvidingHeat" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SystemIDReceivingHeat) &gt;= 0">element "auc:SystemIDReceivingHeat" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HeatRecoverySystems/auc:HeatRecoverySystem/auc:Controls">
      <sch:assert test="count(auc:Control) &gt;= 0">element "auc:Control" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HeatRecoverySystems/auc:HeatRecoverySystem/auc:Controls/auc:Control">
      <sch:assert test="count(auc:AdvancedPowerStrip) &gt;= 0">element "auc:AdvancedPowerStrip" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Manual) &gt;= 0">element "auc:Manual" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Occupancy) &gt;= 0">element "auc:Occupancy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnology) &gt;= 0">element "auc:OtherControlTechnology" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Thermostat) &gt;= 0">element "auc:Thermostat" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Timer) &gt;= 0">element "auc:Timer" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HeatRecoverySystems/auc:HeatRecoverySystem/auc:Controls/auc:Control/auc:AdvancedPowerStrip">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HeatRecoverySystems/auc:HeatRecoverySystem/auc:Controls/auc:Control/auc:Manual">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HeatRecoverySystems/auc:HeatRecoverySystem/auc:Controls/auc:Control/auc:Occupancy">
      <sch:assert test="count(auc:ControlSensor) &gt;= 0">element "auc:ControlSensor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HeatRecoverySystems/auc:HeatRecoverySystem/auc:Controls/auc:Control/auc:OtherControlTechnology">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnologyName) &gt;= 0">element "auc:OtherControlTechnologyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HeatRecoverySystems/auc:HeatRecoverySystem/auc:Controls/auc:Control/auc:Thermostat">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HeatRecoverySystems/auc:HeatRecoverySystem/auc:Controls/auc:Control/auc:Timer">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HeatRecoverySystems/auc:HeatRecoverySystem/auc:EnergyRecoveryEfficiency">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HeatRecoverySystems/auc:HeatRecoverySystem/auc:HeatRecoveryEfficiency">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HeatRecoverySystems/auc:HeatRecoverySystem/auc:SystemIDProvidingHeat">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:HeatRecoverySystems/auc:HeatRecoverySystem/auc:SystemIDReceivingHeat">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LaundrySystems">
      <sch:assert test="count(auc:LaundrySystem) &gt;= 0">element "auc:LaundrySystem" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LaundrySystems/auc:LaundrySystem">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Controls) &gt;= 0">element "auc:Controls" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:LaundryEquipmentUsage) &gt;= 0">element "auc:LaundryEquipmentUsage" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:LaundryType) &gt;= 0">element "auc:LaundryType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:QuantityOfLaundry) &gt;= 0">element "auc:QuantityOfLaundry" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LaundrySystems/auc:LaundrySystem/auc:Controls">
      <sch:assert test="count(auc:Control) &gt;= 0">element "auc:Control" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LaundrySystems/auc:LaundrySystem/auc:Controls/auc:Control">
      <sch:assert test="count(auc:AdvancedPowerStrip) &gt;= 0">element "auc:AdvancedPowerStrip" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Manual) &gt;= 0">element "auc:Manual" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Occupancy) &gt;= 0">element "auc:Occupancy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnology) &gt;= 0">element "auc:OtherControlTechnology" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Thermostat) &gt;= 0">element "auc:Thermostat" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Timer) &gt;= 0">element "auc:Timer" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LaundrySystems/auc:LaundrySystem/auc:Controls/auc:Control/auc:AdvancedPowerStrip">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LaundrySystems/auc:LaundrySystem/auc:Controls/auc:Control/auc:Manual">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LaundrySystems/auc:LaundrySystem/auc:Controls/auc:Control/auc:Occupancy">
      <sch:assert test="count(auc:ControlSensor) &gt;= 0">element "auc:ControlSensor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LaundrySystems/auc:LaundrySystem/auc:Controls/auc:Control/auc:OtherControlTechnology">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnologyName) &gt;= 0">element "auc:OtherControlTechnologyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LaundrySystems/auc:LaundrySystem/auc:Controls/auc:Control/auc:Thermostat">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LaundrySystems/auc:LaundrySystem/auc:Controls/auc:Control/auc:Timer">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LaundrySystems/auc:LaundrySystem/auc:LaundryEquipmentUsage">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LaundrySystems/auc:LaundrySystem/auc:LaundryType">
      <sch:assert test="count(auc:Combination) &gt;= 0">element "auc:Combination" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Dryer) &gt;= 0">element "auc:Dryer" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Other) &gt;= 0">element "auc:Other" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Unknown) &gt;= 0">element "auc:Unknown" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Washer) &gt;= 0">element "auc:Washer" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LaundrySystems/auc:LaundrySystem/auc:LaundryType/auc:Combination">
      <sch:assert test="count(auc:ClothesWasherCapacity) &gt;= 0">element "auc:ClothesWasherCapacity" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ClothesWasherModifiedEnergyFactor) &gt;= 0">element "auc:ClothesWasherModifiedEnergyFactor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ClothesWasherWaterFactor) &gt;= 0">element "auc:ClothesWasherWaterFactor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DryerElectricEnergyUsePerLoad) &gt;= 0">element "auc:DryerElectricEnergyUsePerLoad" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DryerGasEnergyUsePerLoad) &gt;= 0">element "auc:DryerGasEnergyUsePerLoad" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WasherDryerType) &gt;= 0">element "auc:WasherDryerType" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LaundrySystems/auc:LaundrySystem/auc:LaundryType/auc:Combination/auc:ClothesWasherCapacity">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LaundrySystems/auc:LaundrySystem/auc:LaundryType/auc:Combination/auc:ClothesWasherModifiedEnergyFactor">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LaundrySystems/auc:LaundrySystem/auc:LaundryType/auc:Combination/auc:ClothesWasherWaterFactor">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LaundrySystems/auc:LaundrySystem/auc:LaundryType/auc:Combination/auc:DryerElectricEnergyUsePerLoad">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LaundrySystems/auc:LaundrySystem/auc:LaundryType/auc:Combination/auc:DryerGasEnergyUsePerLoad">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LaundrySystems/auc:LaundrySystem/auc:LaundryType/auc:Dryer">
      <sch:assert test="count(auc:DryerElectricEnergyUsePerLoad) &gt;= 0">element "auc:DryerElectricEnergyUsePerLoad" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DryerGasEnergyUsePerLoad) &gt;= 0">element "auc:DryerGasEnergyUsePerLoad" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LaundrySystems/auc:LaundrySystem/auc:LaundryType/auc:Dryer/auc:DryerElectricEnergyUsePerLoad">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LaundrySystems/auc:LaundrySystem/auc:LaundryType/auc:Dryer/auc:DryerGasEnergyUsePerLoad">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LaundrySystems/auc:LaundrySystem/auc:LaundryType/auc:Washer">
      <sch:assert test="count(auc:ClothesWasherCapacity) &gt;= 0">element "auc:ClothesWasherCapacity" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ClothesWasherModifiedEnergyFactor) &gt;= 0">element "auc:ClothesWasherModifiedEnergyFactor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ClothesWasherWaterFactor) &gt;= 0">element "auc:ClothesWasherWaterFactor" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LaundrySystems/auc:LaundrySystem/auc:LaundryType/auc:Washer/auc:ClothesWasherCapacity">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LaundrySystems/auc:LaundrySystem/auc:LaundryType/auc:Washer/auc:ClothesWasherModifiedEnergyFactor">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LaundrySystems/auc:LaundrySystem/auc:LaundryType/auc:Washer/auc:ClothesWasherWaterFactor">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LaundrySystems/auc:LaundrySystem/auc:QuantityOfLaundry">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems">
      <sch:assert test="count(auc:LightingSystem) &gt;= 0">element "auc:LightingSystem" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:BallastType) &gt;= 0">element "auc:BallastType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Controls) &gt;= 0">element "auc:Controls" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DimmingCapability) &gt;= 0">element "auc:DimmingCapability" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FixtureSpacing) &gt;= 0">element "auc:FixtureSpacing" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:InputVoltage) &gt;= 0">element "auc:InputVoltage" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:InstallationType) &gt;= 0">element "auc:InstallationType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:InstalledPower) &gt;= 0">element "auc:InstalledPower" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:LampPower) &gt;= 0">element "auc:LampPower" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:LampType) &gt;= 0">element "auc:LampType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:LightingDirection) &gt;= 0">element "auc:LightingDirection" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:LightingEfficacy) &gt;= 0">element "auc:LightingEfficacy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:LuminaireHeight) &gt;= 0">element "auc:LuminaireHeight" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:NumberOfBallastsPerLuminaire) &gt;= 0">element "auc:NumberOfBallastsPerLuminaire" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:NumberOfLampsPerBallast) &gt;= 0">element "auc:NumberOfLampsPerBallast" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:NumberOfLampsPerLuminaire) &gt;= 0">element "auc:NumberOfLampsPerLuminaire" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:NumberOfLuminaires) &gt;= 0">element "auc:NumberOfLuminaires" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OutsideLighting) &gt;= 0">element "auc:OutsideLighting" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PercentPremisesServed) &gt;= 0">element "auc:PercentPremisesServed" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RatedLampLife) &gt;= 0">element "auc:RatedLampLife" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ReflectorType) &gt;= 0">element "auc:ReflectorType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WorkPlaneHeight) &gt;= 0">element "auc:WorkPlaneHeight" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:Controls">
      <sch:assert test="count(auc:Control) &gt;= 0">element "auc:Control" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:Controls/auc:Control">
      <sch:assert test="count(auc:AdvancedPowerStrip) &gt;= 0">element "auc:AdvancedPowerStrip" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Daylighting) &gt;= 0">element "auc:Daylighting" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Manual) &gt;= 0">element "auc:Manual" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Occupancy) &gt;= 0">element "auc:Occupancy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnology) &gt;= 0">element "auc:OtherControlTechnology" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Timer) &gt;= 0">element "auc:Timer" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:Controls/auc:Control/auc:AdvancedPowerStrip">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:Controls/auc:Control/auc:Daylighting">
      <sch:assert test="count(auc:ControlSensor) &gt;= 0">element "auc:ControlSensor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ControlSteps) &gt;= 0">element "auc:ControlSteps" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:Controls/auc:Control/auc:Daylighting/auc:ControlSteps">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:Controls/auc:Control/auc:Manual">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:Controls/auc:Control/auc:Occupancy">
      <sch:assert test="count(auc:ControlSensor) &gt;= 0">element "auc:ControlSensor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:Controls/auc:Control/auc:OtherControlTechnology">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnologyName) &gt;= 0">element "auc:OtherControlTechnologyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:Controls/auc:Control/auc:Timer">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:DimmingCapability">
      <sch:assert test="count(auc:MinimumDimmingLightFraction) &gt;= 0">element "auc:MinimumDimmingLightFraction" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MinimumDimmingPowerFraction) &gt;= 0">element "auc:MinimumDimmingPowerFraction" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:DimmingCapability/auc:MinimumDimmingLightFraction">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:DimmingCapability/auc:MinimumDimmingPowerFraction">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:FixtureSpacing">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:InstalledPower">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:LampPower">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:LampType">
      <sch:assert test="count(auc:CompactFluorescent) &gt;= 0">element "auc:CompactFluorescent" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Halogen) &gt;= 0">element "auc:Halogen" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HighIntensityDischarge) &gt;= 0">element "auc:HighIntensityDischarge" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Incandescent) &gt;= 0">element "auc:Incandescent" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Induction) &gt;= 0">element "auc:Induction" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:LinearFluorescent) &gt;= 0">element "auc:LinearFluorescent" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Neon) &gt;= 0">element "auc:Neon" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherCombination) &gt;= 0">element "auc:OtherCombination" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Photoluminescent) &gt;= 0">element "auc:Photoluminescent" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Plasma) &gt;= 0">element "auc:Plasma" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SelfLuminous) &gt;= 0">element "auc:SelfLuminous" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SolidStateLighting) &gt;= 0">element "auc:SolidStateLighting" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Unknown) &gt;= 0">element "auc:Unknown" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:LampType/auc:CompactFluorescent">
      <sch:assert test="count(auc:LampLabel) &gt;= 0">element "auc:LampLabel" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:LampType/auc:Halogen">
      <sch:assert test="count(auc:LampLabel) &gt;= 0">element "auc:LampLabel" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TransformerNeeded) &gt;= 0">element "auc:TransformerNeeded" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:LampType/auc:HighIntensityDischarge">
      <sch:assert test="count(auc:LampLabel) &gt;= 0">element "auc:LampLabel" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MetalHalideStartType) &gt;= 0">element "auc:MetalHalideStartType" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:LampType/auc:Incandescent">
      <sch:assert test="count(auc:LampLabel) &gt;= 0">element "auc:LampLabel" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:LampType/auc:LinearFluorescent">
      <sch:assert test="count(auc:LampLabel) &gt;= 0">element "auc:LampLabel" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:LampLength) &gt;= 0">element "auc:LampLength" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:LampType/auc:SolidStateLighting">
      <sch:assert test="count(auc:LampLabel) &gt;= 0">element "auc:LampLabel" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TransformerNeeded) &gt;= 0">element "auc:TransformerNeeded" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:LightingEfficacy">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:LuminaireHeight">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:NumberOfBallastsPerLuminaire">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:NumberOfLampsPerBallast">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:NumberOfLampsPerLuminaire">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:NumberOfLuminaires">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:PercentPremisesServed">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:RatedLampLife">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:LightingSystems/auc:LightingSystem/auc:WorkPlaneHeight">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:MotorSystems">
      <sch:assert test="count(auc:MotorSystem) &gt;= 0">element "auc:MotorSystem" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:MotorSystems/auc:MotorSystem">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Controls) &gt;= 0">element "auc:Controls" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DriveEfficiency) &gt;= 0">element "auc:DriveEfficiency" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:FullLoadAmps) &gt;= 0">element "auc:FullLoadAmps" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:LinkedSystemIDs) &gt;= 0">element "auc:LinkedSystemIDs" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MotorApplication) &gt;= 0">element "auc:MotorApplication" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MotorBrakeHP) &gt;= 0">element "auc:MotorBrakeHP" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MotorEfficiency) &gt;= 0">element "auc:MotorEfficiency" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MotorEnclosureType) &gt;= 0">element "auc:MotorEnclosureType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MotorHP) &gt;= 0">element "auc:MotorHP" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MotorPoleCount) &gt;= 0">element "auc:MotorPoleCount" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:MotorRPM) &gt;= 0">element "auc:MotorRPM" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:MotorSystems/auc:MotorSystem/auc:Controls">
      <sch:assert test="count(auc:Control) &gt;= 0">element "auc:Control" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:MotorSystems/auc:MotorSystem/auc:Controls/auc:Control">
      <sch:assert test="count(auc:AdvancedPowerStrip) &gt;= 0">element "auc:AdvancedPowerStrip" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Manual) &gt;= 0">element "auc:Manual" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Occupancy) &gt;= 0">element "auc:Occupancy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnology) &gt;= 0">element "auc:OtherControlTechnology" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Thermostat) &gt;= 0">element "auc:Thermostat" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Timer) &gt;= 0">element "auc:Timer" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:MotorSystems/auc:MotorSystem/auc:Controls/auc:Control/auc:AdvancedPowerStrip">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:MotorSystems/auc:MotorSystem/auc:Controls/auc:Control/auc:Manual">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:MotorSystems/auc:MotorSystem/auc:Controls/auc:Control/auc:Occupancy">
      <sch:assert test="count(auc:ControlSensor) &gt;= 0">element "auc:ControlSensor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:MotorSystems/auc:MotorSystem/auc:Controls/auc:Control/auc:OtherControlTechnology">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnologyName) &gt;= 0">element "auc:OtherControlTechnologyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:MotorSystems/auc:MotorSystem/auc:Controls/auc:Control/auc:Thermostat">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:MotorSystems/auc:MotorSystem/auc:Controls/auc:Control/auc:Timer">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:MotorSystems/auc:MotorSystem/auc:DriveEfficiency">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:MotorSystems/auc:MotorSystem/auc:FullLoadAmps">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:MotorSystems/auc:MotorSystem/auc:LinkedSystemIDs">
      <sch:assert test="count(auc:LinkedSystemID) &gt;= 0">element "auc:LinkedSystemID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:MotorSystems/auc:MotorSystem/auc:LinkedSystemIDs/auc:LinkedSystemID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:MotorSystems/auc:MotorSystem/auc:MotorBrakeHP">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:MotorSystems/auc:MotorSystem/auc:MotorEfficiency">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:MotorSystems/auc:MotorSystem/auc:MotorHP">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:MotorSystems/auc:MotorSystem/auc:MotorPoleCount">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:MotorSystems/auc:MotorSystem/auc:MotorRPM">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:OnsiteStorageTransmissionGenerationSystems">
      <sch:assert test="count(auc:OnsiteStorageTransmissionGenerationSystem) &gt;= 0">element "auc:OnsiteStorageTransmissionGenerationSystem" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:OnsiteStorageTransmissionGenerationSystems/auc:OnsiteStorageTransmissionGenerationSystem">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:BackupGenerator) &gt;= 0">element "auc:BackupGenerator" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Controls) &gt;= 0">element "auc:Controls" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DemandReduction) &gt;= 0">element "auc:DemandReduction" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EnergyConversionType) &gt;= 0">element "auc:EnergyConversionType" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:OnsiteStorageTransmissionGenerationSystems/auc:OnsiteStorageTransmissionGenerationSystem/auc:Controls">
      <sch:assert test="count(auc:Control) &gt;= 0">element "auc:Control" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:OnsiteStorageTransmissionGenerationSystems/auc:OnsiteStorageTransmissionGenerationSystem/auc:Controls/auc:Control">
      <sch:assert test="count(auc:AdvancedPowerStrip) &gt;= 0">element "auc:AdvancedPowerStrip" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Manual) &gt;= 0">element "auc:Manual" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Occupancy) &gt;= 0">element "auc:Occupancy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnology) &gt;= 0">element "auc:OtherControlTechnology" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Thermostat) &gt;= 0">element "auc:Thermostat" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Timer) &gt;= 0">element "auc:Timer" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:OnsiteStorageTransmissionGenerationSystems/auc:OnsiteStorageTransmissionGenerationSystem/auc:Controls/auc:Control/auc:AdvancedPowerStrip">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:OnsiteStorageTransmissionGenerationSystems/auc:OnsiteStorageTransmissionGenerationSystem/auc:Controls/auc:Control/auc:Manual">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:OnsiteStorageTransmissionGenerationSystems/auc:OnsiteStorageTransmissionGenerationSystem/auc:Controls/auc:Control/auc:Occupancy">
      <sch:assert test="count(auc:ControlSensor) &gt;= 0">element "auc:ControlSensor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:OnsiteStorageTransmissionGenerationSystems/auc:OnsiteStorageTransmissionGenerationSystem/auc:Controls/auc:Control/auc:OtherControlTechnology">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnologyName) &gt;= 0">element "auc:OtherControlTechnologyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:OnsiteStorageTransmissionGenerationSystems/auc:OnsiteStorageTransmissionGenerationSystem/auc:Controls/auc:Control/auc:Thermostat">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:OnsiteStorageTransmissionGenerationSystems/auc:OnsiteStorageTransmissionGenerationSystem/auc:Controls/auc:Control/auc:Timer">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:OnsiteStorageTransmissionGenerationSystems/auc:OnsiteStorageTransmissionGenerationSystem/auc:EnergyConversionType">
      <sch:assert test="count(auc:Generation) &gt;= 0">element "auc:Generation" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Storage) &gt;= 0">element "auc:Storage" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:OnsiteStorageTransmissionGenerationSystems/auc:OnsiteStorageTransmissionGenerationSystem/auc:EnergyConversionType/auc:Generation">
      <sch:assert test="count(auc:ExternalPowerSupply) &gt;= 0">element "auc:ExternalPowerSupply" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OnsiteGenerationType) &gt;= 0">element "auc:OnsiteGenerationType" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:OnsiteStorageTransmissionGenerationSystems/auc:OnsiteStorageTransmissionGenerationSystem/auc:EnergyConversionType/auc:Generation/auc:OnsiteGenerationType">
      <sch:assert test="count(auc:Other) &gt;= 0">element "auc:Other" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PV) &gt;= 0">element "auc:PV" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:OnsiteStorageTransmissionGenerationSystems/auc:OnsiteStorageTransmissionGenerationSystem/auc:EnergyConversionType/auc:Generation/auc:OnsiteGenerationType/auc:Other">
      <sch:assert test="count(auc:OtherEnergyGenerationTechnology) &gt;= 0">element "auc:OtherEnergyGenerationTechnology" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OutputResourceType) &gt;= 0">element "auc:OutputResourceType" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:OnsiteStorageTransmissionGenerationSystems/auc:OnsiteStorageTransmissionGenerationSystem/auc:EnergyConversionType/auc:Generation/auc:OnsiteGenerationType/auc:PV">
      <sch:assert test="count(auc:PhotovoltaicModuleLength) &gt;= 0">element "auc:PhotovoltaicModuleLength" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PhotovoltaicModuleRatedPower) &gt;= 0">element "auc:PhotovoltaicModuleRatedPower" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PhotovoltaicModuleWidth) &gt;= 0">element "auc:PhotovoltaicModuleWidth" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PhotovoltaicSystemArrayAzimuth) &gt;= 0">element "auc:PhotovoltaicSystemArrayAzimuth" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PhotovoltaicSystemInverterEfficiency) &gt;= 0">element "auc:PhotovoltaicSystemInverterEfficiency" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PhotovoltaicSystemLocation) &gt;= 0">element "auc:PhotovoltaicSystemLocation" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PhotovoltaicSystemMaximumPowerOutput) &gt;= 0">element "auc:PhotovoltaicSystemMaximumPowerOutput" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PhotovoltaicSystemNumberOfArrays) &gt;= 0">element "auc:PhotovoltaicSystemNumberOfArrays" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PhotovoltaicSystemNumberOfModulesPerArray) &gt;= 0">element "auc:PhotovoltaicSystemNumberOfModulesPerArray" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PhotovoltaicSystemRackingSystemTiltAngleMax) &gt;= 0">element "auc:PhotovoltaicSystemRackingSystemTiltAngleMax" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PhotovoltaicSystemRackingSystemTiltAngleMin) &gt;= 0">element "auc:PhotovoltaicSystemRackingSystemTiltAngleMin" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:OnsiteStorageTransmissionGenerationSystems/auc:OnsiteStorageTransmissionGenerationSystem/auc:EnergyConversionType/auc:Generation/auc:OnsiteGenerationType/auc:PV/auc:PhotovoltaicModuleLength">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:OnsiteStorageTransmissionGenerationSystems/auc:OnsiteStorageTransmissionGenerationSystem/auc:EnergyConversionType/auc:Generation/auc:OnsiteGenerationType/auc:PV/auc:PhotovoltaicModuleRatedPower">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:OnsiteStorageTransmissionGenerationSystems/auc:OnsiteStorageTransmissionGenerationSystem/auc:EnergyConversionType/auc:Generation/auc:OnsiteGenerationType/auc:PV/auc:PhotovoltaicModuleWidth">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:OnsiteStorageTransmissionGenerationSystems/auc:OnsiteStorageTransmissionGenerationSystem/auc:EnergyConversionType/auc:Generation/auc:OnsiteGenerationType/auc:PV/auc:PhotovoltaicSystemArrayAzimuth">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:OnsiteStorageTransmissionGenerationSystems/auc:OnsiteStorageTransmissionGenerationSystem/auc:EnergyConversionType/auc:Generation/auc:OnsiteGenerationType/auc:PV/auc:PhotovoltaicSystemInverterEfficiency">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:OnsiteStorageTransmissionGenerationSystems/auc:OnsiteStorageTransmissionGenerationSystem/auc:EnergyConversionType/auc:Generation/auc:OnsiteGenerationType/auc:PV/auc:PhotovoltaicSystemMaximumPowerOutput">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:OnsiteStorageTransmissionGenerationSystems/auc:OnsiteStorageTransmissionGenerationSystem/auc:EnergyConversionType/auc:Generation/auc:OnsiteGenerationType/auc:PV/auc:PhotovoltaicSystemNumberOfArrays">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:OnsiteStorageTransmissionGenerationSystems/auc:OnsiteStorageTransmissionGenerationSystem/auc:EnergyConversionType/auc:Generation/auc:OnsiteGenerationType/auc:PV/auc:PhotovoltaicSystemNumberOfModulesPerArray">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:OnsiteStorageTransmissionGenerationSystems/auc:OnsiteStorageTransmissionGenerationSystem/auc:EnergyConversionType/auc:Generation/auc:OnsiteGenerationType/auc:PV/auc:PhotovoltaicSystemRackingSystemTiltAngleMax">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:OnsiteStorageTransmissionGenerationSystems/auc:OnsiteStorageTransmissionGenerationSystem/auc:EnergyConversionType/auc:Generation/auc:OnsiteGenerationType/auc:PV/auc:PhotovoltaicSystemRackingSystemTiltAngleMin">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:OnsiteStorageTransmissionGenerationSystems/auc:OnsiteStorageTransmissionGenerationSystem/auc:EnergyConversionType/auc:Storage">
      <sch:assert test="count(auc:EnergyStorageTechnology) &gt;= 0">element "auc:EnergyStorageTechnology" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ThermalMedium) &gt;= 0">element "auc:ThermalMedium" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PlugLoads">
      <sch:assert test="count(auc:PlugLoad) &gt;= 0">element "auc:PlugLoad" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PlugLoads/auc:PlugLoad">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Controls) &gt;= 0">element "auc:Controls" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PlugLoadNominalPower) &gt;= 0">element "auc:PlugLoadNominalPower" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PlugLoadPeakPower) &gt;= 0">element "auc:PlugLoadPeakPower" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PlugLoadStandbyPower) &gt;= 0">element "auc:PlugLoadStandbyPower" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PlugLoadType) &gt;= 0">element "auc:PlugLoadType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WeightedAverageLoad) &gt;= 0">element "auc:WeightedAverageLoad" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PlugLoads/auc:PlugLoad/auc:Controls">
      <sch:assert test="count(auc:Control) &gt;= 0">element "auc:Control" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PlugLoads/auc:PlugLoad/auc:Controls/auc:Control">
      <sch:assert test="count(auc:AdvancedPowerStrip) &gt;= 0">element "auc:AdvancedPowerStrip" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Manual) &gt;= 0">element "auc:Manual" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Occupancy) &gt;= 0">element "auc:Occupancy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnology) &gt;= 0">element "auc:OtherControlTechnology" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Thermostat) &gt;= 0">element "auc:Thermostat" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Timer) &gt;= 0">element "auc:Timer" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PlugLoads/auc:PlugLoad/auc:Controls/auc:Control/auc:AdvancedPowerStrip">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PlugLoads/auc:PlugLoad/auc:Controls/auc:Control/auc:Manual">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PlugLoads/auc:PlugLoad/auc:Controls/auc:Control/auc:Occupancy">
      <sch:assert test="count(auc:ControlSensor) &gt;= 0">element "auc:ControlSensor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PlugLoads/auc:PlugLoad/auc:Controls/auc:Control/auc:OtherControlTechnology">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnologyName) &gt;= 0">element "auc:OtherControlTechnologyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PlugLoads/auc:PlugLoad/auc:Controls/auc:Control/auc:Thermostat">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PlugLoads/auc:PlugLoad/auc:Controls/auc:Control/auc:Timer">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PlugLoads/auc:PlugLoad/auc:PlugLoadNominalPower">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PlugLoads/auc:PlugLoad/auc:PlugLoadPeakPower">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PlugLoads/auc:PlugLoad/auc:PlugLoadStandbyPower">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PlugLoads/auc:PlugLoad/auc:WeightedAverageLoad">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:Pools">
      <sch:assert test="count(auc:Pool) &gt;= 0">element "auc:Pool" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:Pools/auc:Pool">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Heated) &gt;= 0">element "auc:Heated" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PoolArea) &gt;= 0">element "auc:PoolArea" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PoolSizeCategory) &gt;= 0">element "auc:PoolSizeCategory" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PoolType) &gt;= 0">element "auc:PoolType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PoolVolume) &gt;= 0">element "auc:PoolVolume" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PumpDutyCycle) &gt;= 0">element "auc:PumpDutyCycle" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:Pools/auc:Pool/auc:Heated">
      <sch:assert test="count(auc:Controls) &gt;= 0">element "auc:Controls" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HoursUncovered) &gt;= 0">element "auc:HoursUncovered" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WaterTemperature) &gt;= 0">element "auc:WaterTemperature" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:Pools/auc:Pool/auc:Heated/auc:Controls">
      <sch:assert test="count(auc:Control) &gt;= 0">element "auc:Control" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:Pools/auc:Pool/auc:Heated/auc:Controls/auc:Control">
      <sch:assert test="count(auc:AdvancedPowerStrip) &gt;= 0">element "auc:AdvancedPowerStrip" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Manual) &gt;= 0">element "auc:Manual" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Occupancy) &gt;= 0">element "auc:Occupancy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnology) &gt;= 0">element "auc:OtherControlTechnology" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Thermostat) &gt;= 0">element "auc:Thermostat" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Timer) &gt;= 0">element "auc:Timer" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:Pools/auc:Pool/auc:Heated/auc:Controls/auc:Control/auc:AdvancedPowerStrip">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:Pools/auc:Pool/auc:Heated/auc:Controls/auc:Control/auc:Manual">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:Pools/auc:Pool/auc:Heated/auc:Controls/auc:Control/auc:Occupancy">
      <sch:assert test="count(auc:ControlSensor) &gt;= 0">element "auc:ControlSensor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:Pools/auc:Pool/auc:Heated/auc:Controls/auc:Control/auc:OtherControlTechnology">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnologyName) &gt;= 0">element "auc:OtherControlTechnologyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:Pools/auc:Pool/auc:Heated/auc:Controls/auc:Control/auc:Thermostat">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:Pools/auc:Pool/auc:Heated/auc:Controls/auc:Control/auc:Timer">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:Pools/auc:Pool/auc:Heated/auc:HoursUncovered">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:Pools/auc:Pool/auc:Heated/auc:WaterTemperature">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:Pools/auc:Pool/auc:PoolArea">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:Pools/auc:Pool/auc:PoolVolume">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:Pools/auc:Pool/auc:PumpDutyCycle">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ProcessLoads">
      <sch:assert test="count(auc:ProcessLoad) &gt;= 0">element "auc:ProcessLoad" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ProcessLoads/auc:ProcessLoad">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Controls) &gt;= 0">element "auc:Controls" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:HeatGainFraction) &gt;= 0">element "auc:HeatGainFraction" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ProcessLoadPeakPower) &gt;= 0">element "auc:ProcessLoadPeakPower" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ProcessLoadStandbyPower) &gt;= 0">element "auc:ProcessLoadStandbyPower" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ProcessLoadType) &gt;= 0">element "auc:ProcessLoadType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WeightedAverageLoad) &gt;= 0">element "auc:WeightedAverageLoad" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ProcessLoads/auc:ProcessLoad/auc:Controls">
      <sch:assert test="count(auc:Control) &gt;= 0">element "auc:Control" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ProcessLoads/auc:ProcessLoad/auc:Controls/auc:Control">
      <sch:assert test="count(auc:AdvancedPowerStrip) &gt;= 0">element "auc:AdvancedPowerStrip" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Manual) &gt;= 0">element "auc:Manual" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Occupancy) &gt;= 0">element "auc:Occupancy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnology) &gt;= 0">element "auc:OtherControlTechnology" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Thermostat) &gt;= 0">element "auc:Thermostat" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Timer) &gt;= 0">element "auc:Timer" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ProcessLoads/auc:ProcessLoad/auc:Controls/auc:Control/auc:AdvancedPowerStrip">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ProcessLoads/auc:ProcessLoad/auc:Controls/auc:Control/auc:Manual">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ProcessLoads/auc:ProcessLoad/auc:Controls/auc:Control/auc:Occupancy">
      <sch:assert test="count(auc:ControlSensor) &gt;= 0">element "auc:ControlSensor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ProcessLoads/auc:ProcessLoad/auc:Controls/auc:Control/auc:OtherControlTechnology">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnologyName) &gt;= 0">element "auc:OtherControlTechnologyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ProcessLoads/auc:ProcessLoad/auc:Controls/auc:Control/auc:Thermostat">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ProcessLoads/auc:ProcessLoad/auc:Controls/auc:Control/auc:Timer">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ProcessLoads/auc:ProcessLoad/auc:HeatGainFraction">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ProcessLoads/auc:ProcessLoad/auc:ProcessLoadPeakPower">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ProcessLoads/auc:ProcessLoad/auc:ProcessLoadStandbyPower">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:ProcessLoads/auc:ProcessLoad/auc:WeightedAverageLoad">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PumpSystems">
      <sch:assert test="count(auc:PumpSystem) &gt;= 0">element "auc:PumpSystem" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PumpSystems/auc:PumpSystem">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Controls) &gt;= 0">element "auc:Controls" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:LinkedSystemIDs) &gt;= 0">element "auc:LinkedSystemIDs" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PumpApplication) &gt;= 0">element "auc:PumpApplication" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PumpControlType) &gt;= 0">element "auc:PumpControlType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PumpEfficiency) &gt;= 0">element "auc:PumpEfficiency" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PumpInstalledFlowRate) &gt;= 0">element "auc:PumpInstalledFlowRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PumpMaximumFlowRate) &gt;= 0">element "auc:PumpMaximumFlowRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PumpMinimumFlowRate) &gt;= 0">element "auc:PumpMinimumFlowRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PumpOperation) &gt;= 0">element "auc:PumpOperation" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PumpPowerDemand) &gt;= 0">element "auc:PumpPowerDemand" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:PumpingConfiguration) &gt;= 0">element "auc:PumpingConfiguration" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PumpSystems/auc:PumpSystem/auc:Controls">
      <sch:assert test="count(auc:Control) &gt;= 0">element "auc:Control" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PumpSystems/auc:PumpSystem/auc:Controls/auc:Control">
      <sch:assert test="count(auc:AdvancedPowerStrip) &gt;= 0">element "auc:AdvancedPowerStrip" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Manual) &gt;= 0">element "auc:Manual" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Occupancy) &gt;= 0">element "auc:Occupancy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnology) &gt;= 0">element "auc:OtherControlTechnology" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Thermostat) &gt;= 0">element "auc:Thermostat" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Timer) &gt;= 0">element "auc:Timer" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PumpSystems/auc:PumpSystem/auc:Controls/auc:Control/auc:AdvancedPowerStrip">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PumpSystems/auc:PumpSystem/auc:Controls/auc:Control/auc:Manual">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PumpSystems/auc:PumpSystem/auc:Controls/auc:Control/auc:Occupancy">
      <sch:assert test="count(auc:ControlSensor) &gt;= 0">element "auc:ControlSensor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PumpSystems/auc:PumpSystem/auc:Controls/auc:Control/auc:OtherControlTechnology">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnologyName) &gt;= 0">element "auc:OtherControlTechnologyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PumpSystems/auc:PumpSystem/auc:Controls/auc:Control/auc:Thermostat">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PumpSystems/auc:PumpSystem/auc:Controls/auc:Control/auc:Timer">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PumpSystems/auc:PumpSystem/auc:LinkedSystemIDs">
      <sch:assert test="count(auc:LinkedSystemID) &gt;= 0">element "auc:LinkedSystemID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PumpSystems/auc:PumpSystem/auc:LinkedSystemIDs/auc:LinkedSystemID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PumpSystems/auc:PumpSystem/auc:PumpEfficiency">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PumpSystems/auc:PumpSystem/auc:PumpInstalledFlowRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PumpSystems/auc:PumpSystem/auc:PumpMaximumFlowRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PumpSystems/auc:PumpSystem/auc:PumpMinimumFlowRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:PumpSystems/auc:PumpSystem/auc:PumpPowerDemand">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RefrigerationSystems">
      <sch:assert test="count(auc:RefrigerationSystem) &gt;= 0">element "auc:RefrigerationSystem" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RefrigerationSystems/auc:RefrigerationSystem">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RefrigerationSystemCategory) &gt;= 0">element "auc:RefrigerationSystemCategory" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RefrigerationSystems/auc:RefrigerationSystem/auc:RefrigerationSystemCategory">
      <sch:assert test="count(auc:CentralRefrigerationSystem) &gt;= 0">element "auc:CentralRefrigerationSystem" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RefrigerationUnit) &gt;= 0">element "auc:RefrigerationUnit" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RefrigerationSystems/auc:RefrigerationSystem/auc:RefrigerationSystemCategory/auc:CentralRefrigerationSystem">
      <sch:assert test="count(auc:CaseReturnLineDiameter) &gt;= 0">element "auc:CaseReturnLineDiameter" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CondenserPlantIDs) &gt;= 0">element "auc:CondenserPlantIDs" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:EvaporatorPressureRegulators) &gt;= 0">element "auc:EvaporatorPressureRegulators" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:NetRefrigerationCapacity) &gt;= 0">element "auc:NetRefrigerationCapacity" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:NumberOfRefrigerantReturnLines) &gt;= 0">element "auc:NumberOfRefrigerantReturnLines" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RefrigerantSubcooler) &gt;= 0">element "auc:RefrigerantSubcooler" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RefrigerationCompressor) &gt;= 0">element "auc:RefrigerationCompressor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:SuctionVaporTemperature) &gt;= 0">element "auc:SuctionVaporTemperature" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TotalHeatRejection) &gt;= 0">element "auc:TotalHeatRejection" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RefrigerationSystems/auc:RefrigerationSystem/auc:RefrigerationSystemCategory/auc:CentralRefrigerationSystem/auc:CaseReturnLineDiameter">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RefrigerationSystems/auc:RefrigerationSystem/auc:RefrigerationSystemCategory/auc:CentralRefrigerationSystem/auc:CondenserPlantIDs">
      <sch:assert test="count(auc:CondenserPlantID) &gt;= 0">element "auc:CondenserPlantID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RefrigerationSystems/auc:RefrigerationSystem/auc:RefrigerationSystemCategory/auc:CentralRefrigerationSystem/auc:CondenserPlantIDs/auc:CondenserPlantID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RefrigerationSystems/auc:RefrigerationSystem/auc:RefrigerationSystemCategory/auc:CentralRefrigerationSystem/auc:NetRefrigerationCapacity">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RefrigerationSystems/auc:RefrigerationSystem/auc:RefrigerationSystemCategory/auc:CentralRefrigerationSystem/auc:NumberOfRefrigerantReturnLines">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RefrigerationSystems/auc:RefrigerationSystem/auc:RefrigerationSystemCategory/auc:CentralRefrigerationSystem/auc:RefrigerationCompressor">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CompressorUnloader) &gt;= 0">element "auc:CompressorUnloader" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CrankcaseHeater) &gt;= 0">element "auc:CrankcaseHeater" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DesuperheatValve) &gt;= 0">element "auc:DesuperheatValve" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RefrigerationCompressorType) &gt;= 0">element "auc:RefrigerationCompressorType" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RefrigerationSystems/auc:RefrigerationSystem/auc:RefrigerationSystemCategory/auc:CentralRefrigerationSystem/auc:RefrigerationCompressor/auc:CompressorUnloader">
      <sch:assert test="count(auc:CompressorUnloaderStages) &gt;= 0">element "auc:CompressorUnloaderStages" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RefrigerationSystems/auc:RefrigerationSystem/auc:RefrigerationSystemCategory/auc:CentralRefrigerationSystem/auc:RefrigerationCompressor/auc:CompressorUnloader/auc:CompressorUnloaderStages">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RefrigerationSystems/auc:RefrigerationSystem/auc:RefrigerationSystemCategory/auc:CentralRefrigerationSystem/auc:SuctionVaporTemperature">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RefrigerationSystems/auc:RefrigerationSystem/auc:RefrigerationSystemCategory/auc:CentralRefrigerationSystem/auc:TotalHeatRejection">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RefrigerationSystems/auc:RefrigerationSystem/auc:RefrigerationSystemCategory/auc:RefrigerationUnit">
      <sch:assert test="count(auc:AntiSweatHeaters) &gt;= 0">element "auc:AntiSweatHeaters" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CaseDoorOrientation) &gt;= 0">element "auc:CaseDoorOrientation" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DefrostingType) &gt;= 0">element "auc:DefrostingType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DoorConfiguration) &gt;= 0">element "auc:DoorConfiguration" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:LampPower) &gt;= 0">element "auc:LampPower" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RefrigeratedCaseDoors) &gt;= 0">element "auc:RefrigeratedCaseDoors" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RefrigerationEnergy) &gt;= 0">element "auc:RefrigerationEnergy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RefrigerationUnitSize) &gt;= 0">element "auc:RefrigerationUnitSize" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RefrigerationUnitType) &gt;= 0">element "auc:RefrigerationUnitType" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RefrigerationSystems/auc:RefrigerationSystem/auc:RefrigerationSystemCategory/auc:RefrigerationUnit/auc:AntiSweatHeaters">
      <sch:assert test="count(auc:AntiSweatHeaterControls) &gt;= 0">element "auc:AntiSweatHeaterControls" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:AntiSweatHeaterPower) &gt;= 0">element "auc:AntiSweatHeaterPower" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RefrigerationSystems/auc:RefrigerationSystem/auc:RefrigerationSystemCategory/auc:RefrigerationUnit/auc:AntiSweatHeaters/auc:AntiSweatHeaterPower">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RefrigerationSystems/auc:RefrigerationSystem/auc:RefrigerationSystemCategory/auc:RefrigerationUnit/auc:LampPower">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RefrigerationSystems/auc:RefrigerationSystem/auc:RefrigerationSystemCategory/auc:RefrigerationUnit/auc:RefrigerationEnergy">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RefrigerationSystems/auc:RefrigerationSystem/auc:RefrigerationSystemCategory/auc:RefrigerationUnit/auc:RefrigerationUnitSize">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RoofSystems">
      <sch:assert test="count(auc:RoofSystem) &gt;= 0">element "auc:RoofSystem" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RoofSystems/auc:RoofSystem">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:BlueRoof) &gt;= 0">element "auc:BlueRoof" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CoolRoof) &gt;= 0">element "auc:CoolRoof" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:DeckType) &gt;= 0">element "auc:DeckType" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:GreenRoof) &gt;= 0">element "auc:GreenRoof" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RadiantBarrier) &gt;= 0">element "auc:RadiantBarrier" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RoofColor) &gt;= 0">element "auc:RoofColor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RoofConstruction) &gt;= 0">element "auc:RoofConstruction" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RoofExteriorSolarAbsorptance) &gt;= 0">element "auc:RoofExteriorSolarAbsorptance" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RoofExteriorSolarReflectanceIndex) &gt;= 0">element "auc:RoofExteriorSolarReflectanceIndex" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RoofExteriorThermalAbsorptance) &gt;= 0">element "auc:RoofExteriorThermalAbsorptance" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RoofFinish) &gt;= 0">element "auc:RoofFinish" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RoofFramingDepth) &gt;= 0">element "auc:RoofFramingDepth" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RoofFramingFactor) &gt;= 0">element "auc:RoofFramingFactor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RoofFramingMaterial) &gt;= 0">element "auc:RoofFramingMaterial" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RoofFramingSpacing) &gt;= 0">element "auc:RoofFramingSpacing" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RoofInsulations) &gt;= 0">element "auc:RoofInsulations" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RoofRValue) &gt;= 0">element "auc:RoofRValue" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RoofSlope) &gt;= 0">element "auc:RoofSlope" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RoofUFactor) &gt;= 0">element "auc:RoofUFactor" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RoofSystems/auc:RoofSystem/auc:RoofExteriorSolarAbsorptance">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RoofSystems/auc:RoofSystem/auc:RoofExteriorSolarReflectanceIndex">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RoofSystems/auc:RoofSystem/auc:RoofExteriorThermalAbsorptance">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RoofSystems/auc:RoofSystem/auc:RoofFramingDepth">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RoofSystems/auc:RoofSystem/auc:RoofFramingFactor">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RoofSystems/auc:RoofSystem/auc:RoofFramingSpacing">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RoofSystems/auc:RoofSystem/auc:RoofInsulations">
      <sch:assert test="count(auc:RoofInsulation) &gt;= 0">element "auc:RoofInsulation" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RoofSystems/auc:RoofSystem/auc:RoofInsulations/auc:RoofInsulation">
      <sch:assert test="count(auc:RoofInsulationApplication) &gt;= 0">element "auc:RoofInsulationApplication" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RoofInsulationCondition) &gt;= 0">element "auc:RoofInsulationCondition" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RoofInsulationContinuity) &gt;= 0">element "auc:RoofInsulationContinuity" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RoofInsulationMaterial) &gt;= 0">element "auc:RoofInsulationMaterial" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RoofInsulationRValue) &gt;= 0">element "auc:RoofInsulationRValue" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:RoofInsulationThickness) &gt;= 0">element "auc:RoofInsulationThickness" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RoofSystems/auc:RoofSystem/auc:RoofInsulations/auc:RoofInsulation/auc:RoofInsulationRValue">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RoofSystems/auc:RoofSystem/auc:RoofInsulations/auc:RoofInsulation/auc:RoofInsulationThickness">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RoofSystems/auc:RoofSystem/auc:RoofRValue">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:RoofSystems/auc:RoofSystem/auc:RoofUFactor">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WallSystems">
      <sch:assert test="count(auc:WallSystem) &gt;= 0">element "auc:WallSystem" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WallSystems/auc:WallSystem">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:CMUFill) &gt;= 0">element "auc:CMUFill" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ExteriorRoughness) &gt;= 0">element "auc:ExteriorRoughness" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ExteriorWallColor) &gt;= 0">element "auc:ExteriorWallColor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ExteriorWallConstruction) &gt;= 0">element "auc:ExteriorWallConstruction" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ExteriorWallFinish) &gt;= 0">element "auc:ExteriorWallFinish" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:InteriorVisibleAbsorptance) &gt;= 0">element "auc:InteriorVisibleAbsorptance" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WallExteriorSolarAbsorptance) &gt;= 0">element "auc:WallExteriorSolarAbsorptance" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WallExteriorThermalAbsorptance) &gt;= 0">element "auc:WallExteriorThermalAbsorptance" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WallFramingDepth) &gt;= 0">element "auc:WallFramingDepth" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WallFramingFactor) &gt;= 0">element "auc:WallFramingFactor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WallFramingMaterial) &gt;= 0">element "auc:WallFramingMaterial" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WallFramingSpacing) &gt;= 0">element "auc:WallFramingSpacing" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WallInsulations) &gt;= 0">element "auc:WallInsulations" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WallRValue) &gt;= 0">element "auc:WallRValue" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WallUFactor) &gt;= 0">element "auc:WallUFactor" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WallSystems/auc:WallSystem/auc:InteriorVisibleAbsorptance">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WallSystems/auc:WallSystem/auc:WallExteriorSolarAbsorptance">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WallSystems/auc:WallSystem/auc:WallExteriorThermalAbsorptance">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WallSystems/auc:WallSystem/auc:WallFramingDepth">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WallSystems/auc:WallSystem/auc:WallFramingFactor">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WallSystems/auc:WallSystem/auc:WallFramingSpacing">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WallSystems/auc:WallSystem/auc:WallInsulations">
      <sch:assert test="count(auc:WallInsulation) &gt;= 0">element "auc:WallInsulation" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WallSystems/auc:WallSystem/auc:WallInsulations/auc:WallInsulation">
      <sch:assert test="count(auc:WallInsulationApplication) &gt;= 0">element "auc:WallInsulationApplication" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WallInsulationCondition) &gt;= 0">element "auc:WallInsulationCondition" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WallInsulationContinuity) &gt;= 0">element "auc:WallInsulationContinuity" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WallInsulationLocation) &gt;= 0">element "auc:WallInsulationLocation" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WallInsulationMaterial) &gt;= 0">element "auc:WallInsulationMaterial" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WallInsulationRValue) &gt;= 0">element "auc:WallInsulationRValue" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WallInsulationThickness) &gt;= 0">element "auc:WallInsulationThickness" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WallSystems/auc:WallSystem/auc:WallInsulations/auc:WallInsulation/auc:WallInsulationRValue">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WallSystems/auc:WallSystem/auc:WallInsulations/auc:WallInsulation/auc:WallInsulationThickness">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WallSystems/auc:WallSystem/auc:WallRValue">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WallSystems/auc:WallSystem/auc:WallUFactor">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WaterInfiltrationSystems">
      <sch:assert test="count(auc:WaterInfiltrationSystem) &gt;= 0">element "auc:WaterInfiltrationSystem" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WaterInfiltrationSystems/auc:WaterInfiltrationSystem">
      <sch:assert test="count(auc:LocationsOfExteriorWaterIntrusionDamages) &gt;= 0">element "auc:LocationsOfExteriorWaterIntrusionDamages" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:LocationsOfInteriorWaterIntrusionDamages) &gt;= 0">element "auc:LocationsOfInteriorWaterIntrusionDamages" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WaterInfiltrationSystems/auc:WaterInfiltrationSystem/auc:LocationsOfExteriorWaterIntrusionDamages">
      <sch:assert test="count(auc:LocationsOfExteriorWaterIntrusionDamage) &gt;= 0">element "auc:LocationsOfExteriorWaterIntrusionDamage" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WaterInfiltrationSystems/auc:WaterInfiltrationSystem/auc:LocationsOfInteriorWaterIntrusionDamages">
      <sch:assert test="count(auc:LocationsOfInteriorWaterIntrusionDamage) &gt;= 0">element "auc:LocationsOfInteriorWaterIntrusionDamage" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WaterUses">
      <sch:assert test="count(auc:WaterUse) &gt;= 0">element "auc:WaterUse" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WaterUses/auc:WaterUse">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(@Status) &gt;= 0">element "@Status" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Controls) &gt;= 0">element "auc:Controls" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:LowFlowFixtures) &gt;= 0">element "auc:LowFlowFixtures" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WaterFixtureCyclesPerDay) &gt;= 0">element "auc:WaterFixtureCyclesPerDay" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WaterFixtureFractionHotWater) &gt;= 0">element "auc:WaterFixtureFractionHotWater" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WaterFixtureRatedFlowRate) &gt;= 0">element "auc:WaterFixtureRatedFlowRate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WaterFixtureVolumePerCycle) &gt;= 0">element "auc:WaterFixtureVolumePerCycle" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:WaterUseType) &gt;= 0">element "auc:WaterUseType" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WaterUses/auc:WaterUse/auc:Controls">
      <sch:assert test="count(auc:Control) &gt;= 0">element "auc:Control" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WaterUses/auc:WaterUse/auc:Controls/auc:Control">
      <sch:assert test="count(auc:AdvancedPowerStrip) &gt;= 0">element "auc:AdvancedPowerStrip" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Manual) &gt;= 0">element "auc:Manual" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Occupancy) &gt;= 0">element "auc:Occupancy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnology) &gt;= 0">element "auc:OtherControlTechnology" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Thermostat) &gt;= 0">element "auc:Thermostat" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:Timer) &gt;= 0">element "auc:Timer" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WaterUses/auc:WaterUse/auc:Controls/auc:Control/auc:AdvancedPowerStrip">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WaterUses/auc:WaterUse/auc:Controls/auc:Control/auc:Manual">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WaterUses/auc:WaterUse/auc:Controls/auc:Control/auc:Occupancy">
      <sch:assert test="count(auc:ControlSensor) &gt;= 0">element "auc:ControlSensor" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WaterUses/auc:WaterUse/auc:Controls/auc:Control/auc:OtherControlTechnology">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlTechnologyName) &gt;= 0">element "auc:OtherControlTechnologyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WaterUses/auc:WaterUse/auc:Controls/auc:Control/auc:Thermostat">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WaterUses/auc:WaterUse/auc:Controls/auc:Control/auc:Timer">
      <sch:assert test="count(auc:ControlStrategy) &gt;= 0">element "auc:ControlStrategy" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:OtherControlStrategyName) &gt;= 0">element "auc:OtherControlStrategyName" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WaterUses/auc:WaterUse/auc:WaterFixtureCyclesPerDay">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WaterUses/auc:WaterUse/auc:WaterFixtureFractionHotWater">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WaterUses/auc:WaterUse/auc:WaterFixtureRatedFlowRate">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Systems/auc:WaterUses/auc:WaterUse/auc:WaterFixtureVolumePerCycle">
      <sch:assert test="count(@Source) &gt;= 0">element "@Source" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Tenants">
      <sch:assert test="count(auc:Tenant) &gt;= 0">element "auc:Tenant" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Tenants/auc:Tenant">
      <sch:assert test="count(@ID) &gt;= 0">element "@ID" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ContactIDs) &gt;= 0">element "auc:ContactIDs" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TenantEmailAddresses) &gt;= 0">element "auc:TenantEmailAddresses" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TenantName) &gt;= 0">element "auc:TenantName" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TenantTelephoneNumbers) &gt;= 0">element "auc:TenantTelephoneNumbers" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Tenants/auc:Tenant/auc:ContactIDs">
      <sch:assert test="count(auc:ContactID) &gt;= 0">element "auc:ContactID" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Tenants/auc:Tenant/auc:ContactIDs/auc:ContactID">
      <sch:assert test="count(@IDref) &gt;= 0">element "@IDref" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Tenants/auc:Tenant/auc:TenantEmailAddresses">
      <sch:assert test="count(auc:TenantEmailAddress) &gt;= 0">element "auc:TenantEmailAddress" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Tenants/auc:Tenant/auc:TenantEmailAddresses/auc:TenantEmailAddress">
      <sch:assert test="count(auc:TenantEmailAddressLabel) &gt;= 0">element "auc:TenantEmailAddressLabel" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Tenants/auc:Tenant/auc:TenantTelephoneNumbers">
      <sch:assert test="count(auc:TenantTelephoneNumber) &gt;= 0">element "auc:TenantTelephoneNumber" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Facilities/auc:Facility/auc:Tenants/auc:Tenant/auc:TenantTelephoneNumbers/auc:TenantTelephoneNumber">
      <sch:assert test="count(auc:TelephoneNumber) &gt;= 0">element "auc:TelephoneNumber" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:TenantTelephoneNumberLabel) &gt;= 0">element "auc:TenantTelephoneNumberLabel" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Programs">
      <sch:assert test="count(auc:Program) &gt;= 0">element "auc:Program" is OPTIONAL</sch:assert>
    </sch:rule>
    <sch:rule context="/auc:BuildingSync/auc:Programs/auc:Program">
      <sch:assert test="count(auc:ProgramClassification) &gt;= 0">element "auc:ProgramClassification" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ProgramDate) &gt;= 0">element "auc:ProgramDate" is OPTIONAL</sch:assert>
      <sch:assert test="count(auc:ProgramFundingSource) &gt;= 0">element "auc:ProgramFundingSource" is OPTIONAL</sch:assert>
    </sch:rule>
  </sch:pattern>
</sch:schema>
